{"version":3,"sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/breaks.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/document.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/drawing.ts","webpack://docx/./src/document/fields.ts","webpack://docx/./src/document/hyperlink.ts","webpack://docx/./src/document/indentation.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/document/table-cell.ts","webpack://docx/./src/document/table-row.ts","webpack://docx/./src/document/table.ts","webpack://docx/./src/document/text.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/footer/footer-part.ts","webpack://docx/./src/footer/footer.ts","webpack://docx/./src/header/header-part.ts","webpack://docx/./src/header/header.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/parser/xml-serialize.ts","webpack://docx/./src/styles/document-defaults.ts","webpack://docx/./src/styles/style.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/word-document.ts","webpack://docx/./node_modules/tslib/tslib.es6.js","webpack://docx/external \"JSZip\"","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__792__","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","load","input","JSZip","loadAsync","then","zip","OpenXmlPackage","save","type","generateAsync","async","Promise","resolve","loadRelationships","relsPath","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","all","rels","text","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","Part","RelationshipTypes","elements","map","e","id","attr","target","targetMode","autos","shd","color","highlight","SizeType","skipDeclaration","ignoreWidth","debug","deserialize","elem","output","deserializeElement","parseDocumentFile","xbody","element","result","WmlDocument","body","WmlBody","parseBodyElements","parseFooter","WmlFooter","parseHeader","WmlHeader","localName","children","push","parseParagraph","parseTable","parseStylesFile","xstyles","xml","foreach","n","parseStyle","parseDefaultStyles","node","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","paragraphProps","parseParagraphProperties","stringAttr","isDefault","boolAttr","linked","className","next","aliases","split","runProps","parseRunProperties","parseTableStyle","s","console","warn","selector","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementStringAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","bullet","filter","levelText","format","WmlParagraph","parseRun","parseHyperlink","paragraph","cssStyle","parseParagraphProperty","props","utils","addElementClass","classNameOfCnfStyle","parseFrame","parent","WmlHyperlink","WmlRun","d","parseDrawing","run","Object","assign","parseDrawingWrapper","WmlDrawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","sizeAttr","Emu","pos","alignNode","offsetNode","textContent","sizeValue","g","parseGraphic","graphicData","parsePicture","DmlPicture","blipFill","blip","resourceId","spPr","xfrm","WmlTable","parseTableRow","parseTableProperties","table","cellStyle","classNameOftblLook","parseTablePosition","topFromText","bottomFromText","rightFromText","leftFromText","addSize","WmlTableRow","parseTableCell","parseTableRowProperties","row","WmlTableCell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","colorAttr","FontSize","valueOfSize","parseTrHeight","valueOfStrike","valueOfBold","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","val","col","ascii","firstLine","left","start","right","end","DocumentParser","cb","i","childNodes","length","nodeType","nodeName","attrName","defValue","autoColor","v","parseInt","Dxa","convertSize","indexOf","intVal","toFixed","Border","Percent","replace","trim","a","b","parseExtendedProps","ExtendedPropsPart","safeParseToInt","value","el","template","pages","words","characters","application","lines","paragraphs","company","appVersion","fromAttribute","WmlBookmarkStart","DocxElement","WmlBookmarkEnd","parseBorder","size","lengthAttr","LengthUsage","Point","frame","shadow","top","bottom","WmlBreak","WmlLastRenderedPageBreak","ns","wordml","drawingml","picture","mul","unit","LineHeight","usage","endsWith","parseFloat","defaultValue","pkg","parser","_documentParser","documentElement","DocumentPart","fromElement","parseSectionProperties","DocxContainer","WmlFieldChar","convertBoolean","WmlFieldSimple","parse","anchor","hanging","lineRule","before","after","line","namespaceURI","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","indentation","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","styleId","position","leader","WmlText","WmlSymbol","WmlTab","WmlInstructionText","parseRunProperty","styleName","border","fonts","parseRunFonts","shading","parseShading","spacing","stretch","percentageAttr","fontSize","bold","strike","doubleStrike","italics","underline","caps","smallCaps","imprint","outline","verticalAlignment","hAscii","cs","eastAsia","foreground","background","SectionType","parseColumns","numberOfColumns","space","separator","equalWidth","columns","width","parseFooterHeaderReference","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","parseTableColumns","alignment","caption","tableLook","parseTableLook","firstColumn","firstRow","lastColumn","lastRow","noHBand","noVBand","fromText","defaults","ignoreHeight","ignoreFonts","breakPages","ignoreLastRenderedPageBreak","experimental","inWrapper","data","bodyContainer","styleContainer","userOptions","renderer","HtmlRenderer","window","document","WordDocument","doc","render","parseFonts","FontTablePart","family","altName","fontKey","refId","footerElement","FooterPart","headerElement","HeaderPart","htmlDocument","renderHeaders","renderFooters","domStyleMap","removeAllElements","appendComment","appendChild","renderDefaultStyle","stylesPart","processDomStyles","domStyles","styleMap","processStyles","renderStyles","numberingPart","renderNumbering","domNumberings","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","wrapper","renderWrapper","appentElements","fontsPart","f","loadFont","fontData","cssTest","createStyleElement","processClassName","keyBy","baseStyle","mergeDeep","domStylesMap","baseValues","styleValues","copyStyleProperties","cssName","escapeClassName","processElement","processTable","attrs","getOwnPropertyNames","key","hasOwnProperty","createElement","tagName","renderContainer","renderElements","createSection","paddingLeft","renderLength","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","splitBySection","sectProps","sectionElement","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","r","bind","breakRun","splitRun","newParagraph","slice","runChildren","newRun","currentSectProps","l","renderColor","test","listStyleType","styleText","rootCounters","numberingClass","num","toLowerCase","styleToString","loadNumberingImage","numFormatToCssValue","counter","numberingCounter","levelTextToContent","join","stylesMap","subStyles","linkedStyle","concat","subStyle","renderParagraphProperties","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderText","renderSymbol","renderTab","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderHeader","renderFooter","renderChildren","into","elems","$$docxElement","renderClass","renderStyleValues","appendClass","styleClassName","renderLineSpacing","renderTextAligment","valuesMap","renderRunProperties","renderShading","renderBorder","renderRunFonts","renderUnderline","renderRunVerticalAlignment","href","display","textIndent","loadDocumentImage","createTextNode","fontFamily","font","innerHTML","char","tabSpan","setTimeout","findParent","sort","updateTabStop","renderTableColumns","colElem","colSpan","ouput","lvl","selectors","cssText","numformat","substring","container","styleElement","comment","createComment","pixelToPoint","closest","tbb","getBoundingClientRect","pbb","tab","find","t","borderBottom","parseNumberingPart","NumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","numberingLevel","parseNumberingBulletPicture","referenceId","numberings","abstractNumberings","bulletPictures","item","Node","ELEMENT_NODE","attributes","xmlString","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","floatAttr","convertPercentage","convertLength","globalXmlParser","schemaSymbol","Symbol","deserializeSchema","schema","prop","convert","getPrototypeXmlSchema","proto","prototype","elemName","schemaObj","$attr","ops","getPrototypeOf","$$xmlElement","child","obj","create","pPrElem","rPrElem","WmlStyle","link","autoRedefine","hidden","semiHidden","locked","uiPriority","parseStylesPart","parseDocumentDefaults","StylesPart","classList","isObject","Array","isArray","si","lastIndexOf","array","by","reduce","sources","source","shift","topLevelRels","OfficeDocument","ExtendedProperties","parts","partsMap","blob","_parser","tasks","rel","loadRelationshipPart","part","FontTable","Numbering","Styles","Footer","Header","extendedPropsPart","folder","loadResource","URL","createObjectURL","Blob","deobfuscate","getPathById","outputType","guidKey","trimmed","numbers","extendStatics","setPrototypeOf","__proto__","call","__extends","TypeError","String","__","constructor","__assign","arguments","apply","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","__generator","y","_","label","sent","trys","verb","iterator","op","pop","__createBinding","o","m","k","k2","undefined","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","j","jl","__spreadArray","to","from","pack","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","state","kind","has","__classPrivateFieldSet","set","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","toStringTag"],"mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,UACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,SAAUJ,GACQ,iBAAZC,QACdA,QAAc,KAAID,EAAQG,QAAQ,UAElCJ,EAAW,KAAIC,EAAQD,EAAY,OARrC,CASGO,MAAM,SAASC,GAClB,M,iHCVA,aACA,SACA,SACA,SAOA,aAGI,WAAoBC,EAAoBC,GAApB,KAAAD,OAAoB,KAAAC,UAFxC,KAAAC,UAAuB,IAAI,EAAAC,UAyC/B,OApCI,YAAAC,IAAA,SAAIC,GACA,OAAOC,KAAKN,KAAKO,MAqCzB,SAAuBF,GACnB,OAAOA,EAAKG,WAAW,KAAOH,EAAKI,OAAO,GAAKJ,EAtCpBK,CAAcL,KAGzC,YAAAM,OAAA,SAAON,EAAcO,GACjBN,KAAKN,KAAKa,KAAKR,EAAMO,IAGlB,EAAAE,KAAP,SAAYC,EAAmBd,GAC3B,OAAOe,EAAMC,UAAUF,GAAOG,MAAK,SAAAC,GAAO,WAAIC,EAAeD,EAAKlB,OAGtE,YAAAoB,KAAA,SAAKC,GACD,YADC,IAAAA,MAAA,QACMhB,KAAKN,KAAKuB,cAAc,CAAED,KAAI,KAGzC,YAAAR,KAAA,SAAKT,EAAciB,G,QACf,YADe,IAAAA,MAAA,UACmB,QAA3B,EAAc,QAAd,EAAAhB,KAAKF,IAAIC,UAAK,eAAEmB,MAAMF,UAAK,QAAIG,QAAQC,QAAQ,OAG1D,YAAAC,kBAAA,SAAkBtB,GAAlB,gBAAkB,IAAAA,MAAA,MACd,IAAIuB,EAAW,cAEf,GAAY,MAARvB,EAAc,CACR,MAAU,EAAAwB,UAAUxB,GAC1BuB,EADQ,KACO,SADH,KACc,QAG9B,OAAOtB,KAAKQ,KAAKc,GACZV,MAAK,SAAAY,GAAO,OAAAA,EAAM,EAAAC,mBAAmB,EAAKC,iBAAiBF,GAAKG,kBAAmB,EAAK/B,WAAa,SAI9G,YAAA8B,iBAAA,SAAiBF,GACb,OAAO,EAAAI,eAAeJ,EAAKxB,KAAKL,QAAQkC,qBAEhD,EA1CA,GAAa,EAAAf,kB,6ECVb,aAIA,aAKI,WAAsBgB,EAAiC/B,GAAjC,KAAA+B,WAAiC,KAAA/B,OA0B3D,OAvBI,YAAAS,KAAA,sBACI,OAAOW,QAAQY,IAAI,CACf/B,KAAK8B,SAAST,kBAAkBrB,KAAKD,MAAMa,MAAK,SAAAoB,GAC5C,EAAKA,KAAOA,KAEhBhC,KAAK8B,SAAStB,KAAKR,KAAKD,MAAMa,MAAK,SAAAqB,GAC/B,IAAMC,EAAS,EAAKJ,SAASJ,iBAAiBO,GAE1C,EAAKH,SAASnC,QAAQwC,aACtB,EAAKC,aAAeF,GAGxB,EAAKG,SAASH,EAAOP,yBAKjC,YAAAZ,KAAA,WACIf,KAAK8B,SAASzB,OAAOL,KAAKD,KAAM,EAAAuC,mBAAmBtC,KAAKoC,gBAGlD,YAAAC,SAAV,SAAmBpD,KAEvB,EA/BA,GAAa,EAAAsD,Q,YCKb,IAAYC,E,kGAAAA,EAAA,EAAAA,oBAAA,EAAAA,kBAAiB,KACzB,oGACA,4FACA,oFACA,4FACA,sFACA,+FACA,oFACA,0FACA,gGACA,4FACA,sFACA,sFACA,+GACA,yGAGJ,8BAAmCvD,EAAeW,GAC9C,OAAOA,EAAU6C,SAASxD,GAAMyD,KAAI,SAAAC,GAAK,OACrCC,GAAIhD,EAAUiD,KAAKF,EAAG,MACtB3B,KAAMpB,EAAUiD,KAAKF,EAAG,QACxBG,OAAQlD,EAAUiD,KAAKF,EAAG,UAC1BI,WAAYnD,EAAUiD,KAAKF,EAAG,oB,+FC9BtC,aACA,SACA,SACA,SACA,SAEA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEW,EAAAK,MAAQ,CACfC,IAAK,QACLC,MAAO,QACPC,UAAW,eAGf,IA28BKC,EA38BL,0BAEI,KAAAC,iBAA2B,EAG3B,KAAAC,aAAuB,EACvB,KAAAC,OAAiB,EACjB,KAAApB,YAAsB,EAk8B1B,OAh8BY,YAAAqB,YAAR,SAAuBC,EAAeC,GAClC,OAAO,EAAAC,mBAAmBF,EAAMC,EAAQ,CAAEvB,WAAYnC,KAAKmC,cAG/D,YAAAyB,kBAAA,SAAkB1B,GACd,IAAI2B,EAAQ,UAAgBC,QAAQ5B,EAAQ,QAEtC6B,EAAS,IAAI,EAAAC,YAGnB,OAFAD,EAAOE,KAAOjE,KAAKwD,YAAYK,EAAO,IAAI,EAAAK,SAC1ClE,KAAKmE,kBAAkBN,EAAOE,EAAOE,MAC9BF,GAGX,YAAAK,YAAA,SAAYlC,GACR,OAAOlC,KAAKmE,kBAAkBjC,EAAQ,IAAI,EAAAmC,YAG9C,YAAAC,YAAA,SAAYpC,GACR,OAAOlC,KAAKmE,kBAAkBjC,EAAQ,IAAI,EAAAqC,YAG9C,YAAAJ,kBAAA,SAA2CV,EAAeC,GACtD,IAAa,oBAAgBjB,SAASgB,GAAzB,eAAgC,CAAzC,IAAId,EAAC,KACL,OAAQA,EAAE6B,WACN,IAAK,IACDd,EAAOe,SAASC,KAAK1E,KAAK2E,eAAehC,IACzC,MAEJ,IAAK,MACDe,EAAOe,SAASC,KAAK1E,KAAK4E,WAAWjC,KAKjD,OAAOe,GAGX,YAAAmB,gBAAA,SAAgBC,GAAhB,WACQf,EAAS,GAcb,OAZAgB,EAAIC,QAAQF,GAAS,SAAAG,GACjB,OAAQA,EAAET,WACN,IAAK,QACDT,EAAOW,KAAK,EAAKQ,WAAWD,IAC5B,MAEJ,IAAK,cACDlB,EAAOW,KAAK,EAAKS,mBAAmBF,QAKzClB,GAGX,YAAAoB,mBAAA,SAAmBC,GAAnB,WACQrB,EAAoB,CACpBnB,GAAI,KACJyC,KAAM,KACNvC,OAAQ,KACRwC,QAAS,KACTC,OAAQ,IA6BZ,OA1BAR,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,aACD,IAAIiB,EAAM,UAAgB3B,QAAQ0B,EAAG,OAEjCC,GACA1B,EAAOwB,OAAOb,KAAK,CACf5B,OAAQ,OACR4C,OAAQ,EAAKC,uBAAuBF,EAAK,MAEjD,MAEJ,IAAK,aACD,IAAIG,EAAM,UAAgB9B,QAAQ0B,EAAG,OAEjCI,IACA7B,EAAOwB,OAAOb,KAAK,CACf5B,OAAQ,IACR4C,OAAQ,EAAKC,uBAAuBC,EAAK,MAE7C7B,EAAO8B,eAAiB,EAAAC,yBAAyBF,EAAK,gBAM/D7B,GAGX,YAAAmB,WAAA,SAAWE,GAAX,WACQrB,EAAoB,CACpBnB,GAAImC,EAAIgB,WAAWX,EAAM,WACzBY,UAAWjB,EAAIkB,SAASb,EAAM,WAC9BC,KAAM,KACNvC,OAAQ,KACRwC,QAAS,KACTC,OAAQ,GACRW,OAAQ,MAGZ,OAAQnB,EAAIgB,WAAWX,EAAM,SACzB,IAAK,YAAarB,EAAOjB,OAAS,IAAK,MACvC,IAAK,QAASiB,EAAOjB,OAAS,QAAS,MACvC,IAAK,YAAaiB,EAAOjB,OAAS,OAqEtC,OAlEAiC,EAAIC,QAAQI,GAAM,SAAAH,GACd,OAAQA,EAAET,WACN,IAAK,UACDT,EAAOuB,QAAUP,EAAIoB,UAAUlB,EAAG,OAClC,MAEJ,IAAK,OACDlB,EAAOsB,KAAON,EAAIgB,WAAWd,EAAG,OAChC,MAEJ,IAAK,OACDlB,EAAOmC,OAASnB,EAAIoB,UAAUlB,EAAG,OACjC,MAEJ,IAAK,OACDlB,EAAOqC,KAAOrB,EAAIoB,UAAUlB,EAAG,OAC/B,MAEJ,IAAK,UACDlB,EAAOsC,QAAUtB,EAAIgB,WAAWd,EAAG,OAAOqB,MAAM,KAChD,MAEJ,IAAK,MACDvC,EAAOwB,OAAOb,KAAK,CACf5B,OAAQ,IACR4C,OAAQ,EAAKC,uBAAuBV,EAAG,MAE3ClB,EAAO8B,eAAiB,EAAAC,yBAAyBb,EAAG,WACpD,MAEJ,IAAK,MACDlB,EAAOwB,OAAOb,KAAK,CACf5B,OAAQ,OACR4C,OAAQ,EAAKC,uBAAuBV,EAAG,MAE3ClB,EAAOwC,SAAW,EAAAC,mBAAmBvB,EAAG,WACxC,MAEJ,IAAK,QACL,IAAK,OACDlB,EAAOwB,OAAOb,KAAK,CACf5B,OAAQ,KACR4C,OAAQ,EAAKC,uBAAuBV,EAAG,MAE3C,MAEJ,IAAK,aACD,IAAc,YAAKwB,gBAAgBxB,GAArB,eAAuB,CAAhC,IAAIyB,EAAC,KACN3C,EAAOwB,OAAOb,KAAKgC,GACvB,MAEJ,IAAK,OACL,IAAK,UACL,IAAK,SACL,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,aAED,MAEJ,QACI,EAAKnD,OAASoD,QAAQC,KAAK,gCAAgC3B,EAAET,eAIlET,GAGX,YAAA0C,gBAAA,SAAgBrB,GAAhB,WACQrB,EAAS,GAET/C,EAAO+D,EAAIgB,WAAWX,EAAM,QAC5ByB,EAAW,GAEf,OAAQ7F,GACJ,IAAK,WAAY6F,EAAW,kBAAmB,MAC/C,IAAK,UAAWA,EAAW,iBAAkB,MAC7C,IAAK,WAAYA,EAAW,eAAgB,MAC5C,IAAK,UAAWA,EAAW,cAAe,MAC1C,IAAK,YAAaA,EAAW,aAAc,MAC3C,IAAK,YAAaA,EAAW,cAAe,MAC5C,IAAK,YAAaA,EAAW,aAAc,MAC3C,IAAK,YAAaA,EAAW,cAAe,MAC5C,QAAS,MAAO,GA6BpB,OA1BA9B,EAAIC,QAAQI,GAAM,SAAAH,GACd,OAAQA,EAAET,WACN,IAAK,MACDT,EAAOW,KAAK,CACR5B,OAAQ+D,EAAW,KACnBnB,OAAQ,EAAKC,uBAAuBV,EAAG,MAE3C,MAEJ,IAAK,MACDlB,EAAOW,KAAK,CACR5B,OAAQ+D,EAAW,QACnBnB,OAAQ,EAAKC,uBAAuBV,EAAG,MAE3C,MAEJ,IAAK,QACL,IAAK,OACDlB,EAAOW,KAAK,CACR5B,OAAQ+D,EACRnB,OAAQ,EAAKC,uBAAuBV,EAAG,UAMhDlB,GAGX,YAAA+C,mBAAA,SAAmBC,GAAnB,WACQhD,EAAS,GACTiD,EAAU,GACVC,EAAU,GAuBd,OArBAlC,EAAIC,QAAQ+B,GAAO,SAAA9B,GACf,OAAQA,EAAET,WACN,IAAK,cACD,EAAK0C,uBAAuBjC,EAAGgC,GAC1BE,SAAQ,SAAAC,GAAK,OAAArD,EAAOW,KAAK0C,MAC9B,MAEJ,IAAK,eACDH,EAAQvC,KAAK,EAAK2C,wBAAwBpC,IAC1C,MAEJ,IAAK,MACD,IAAIqC,EAAQvC,EAAIgB,WAAWd,EAAG,SAC1BsC,EAAgBxC,EAAIyC,kBAAkBvC,EAAG,gBAAiB,OAC9D+B,EAAQO,GAAiBD,MAKrCvD,EAAOoD,SAAQ,SAAAC,GAAK,OAAAA,EAAExE,GAAKoE,EAAQI,EAAExE,OAE9BmB,GAGX,YAAAsD,wBAAA,SAAwB5D,GACpB,IAAIgE,EAAO,UAAgB3D,QAAQL,EAAM,QACrCiE,EAAQD,GAAQ,UAAgB3D,QAAQ2D,EAAM,SAC9CE,EAAYD,GAAS,UAAgB5D,QAAQ4D,EAAO,aAExD,OAAOC,EAAY,CACf/E,GAAImC,EAAI6C,QAAQnE,EAAM,kBACtBoE,IAAK9C,EAAIgB,WAAW4B,EAAW,MAC/BG,MAAO/C,EAAIgB,WAAW2B,EAAO,UAC7B,MAGR,YAAAR,uBAAA,SAAuB9B,EAAe6B,GAAtC,WACQlD,EAAS,GACTnB,EAAKmC,EAAIgB,WAAWX,EAAM,iBAU9B,OARAL,EAAIC,QAAQI,GAAM,SAAAH,GACd,OAAQA,EAAET,WACN,IAAK,MACDT,EAAOW,KAAK,EAAKqD,oBAAoBnF,EAAIqC,EAAGgC,QAKjDlD,GAGX,YAAAgE,oBAAA,SAAoBnF,EAAYwC,EAAe6B,GAA/C,WACQlD,EAAwB,CACxBnB,GAAIA,EACJoF,MAAOjD,EAAI6C,QAAQxC,EAAM,QACzB0C,MAAO,IAwBX,OArBA/C,EAAIC,QAAQI,GAAM,SAAAH,GACd,OAAQA,EAAET,WACN,IAAK,MACD,EAAKmB,uBAAuBV,EAAGlB,EAAO+D,OACtC,MAEJ,IAAK,iBACD,IAAIlF,EAAKmC,EAAI6C,QAAQ3C,EAAG,OACxBlB,EAAOkE,OAAShB,EAAQiB,QAAO,SAAAd,GAAK,OAAAA,EAAExE,IAAMA,KAAI,GAChD,MAEJ,IAAK,UACDmB,EAAOoE,UAAYpD,EAAIgB,WAAWd,EAAG,OACrC,MAEJ,IAAK,SACDlB,EAAOqE,OAASrD,EAAIgB,WAAWd,EAAG,WAKvClB,GAIX,YAAAY,eAAA,SAAeS,GAAf,WACUrB,EAAS/D,KAAKwD,YAAY4B,EAAM,IAAI,EAAAiD,cAkB1C,OAhBAtD,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,IACDT,EAAOU,SAASC,KAAK,EAAK4D,SAAS9C,EAAGzB,IACtC,MAEJ,IAAK,YACDA,EAAOU,SAASC,KAAK,EAAK6D,eAAe/C,EAAGzB,IAC5C,MAEJ,IAAK,MACD,EAAK+B,yBAAyBN,EAAGzB,OAKtCA,GAGX,YAAA+B,yBAAA,SAAyBrC,EAAe+E,GAAxC,WACIxI,KAAK2F,uBAAuBlC,EAAM+E,EAAUC,SAAW,GAAI,MAAM,SAAAjD,GAC7D,GAAG,EAAAkD,uBAAuBlD,EAAGgD,EAAUG,MAAO,WAC1C,OAAO,EAEX,OAAQnD,EAAEhB,WACN,IAAK,SACDoE,EAAMC,gBAAgBL,EAAWzD,EAAIoB,UAAUX,EAAG,QAClD,MAEJ,IAAK,WACDoD,EAAMC,gBAAgBL,EAAW9C,EAAOoD,oBAAoBtD,IAC5D,MAEJ,IAAK,UACD,EAAKuD,WAAWvD,EAAGgD,GACnB,MAEJ,IAAK,MAED,MAEJ,QACI,OAAO,EAGf,OAAO,MAIf,YAAAO,WAAA,SAAW3D,EAAeoD,GAGP,QAFDzD,EAAIgB,WAAWX,EAAM,aAG/BoD,EAAUC,SAAgB,MAAI,SAGtC,YAAAF,eAAA,SAAenD,EAAe4D,GAA9B,WACQjF,EAAS/D,KAAKwD,YAAY4B,EAAM,IAAI,EAAA6D,aAAaD,IAUrD,OARAjE,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,IACDT,EAAOU,SAASC,KAAK,EAAK4D,SAAS9C,EAAGzB,QAK3CA,GAGX,YAAAuE,SAAA,SAASlD,EAAe4D,GAAxB,WACQjF,EAAS/D,KAAKwD,YAAY4B,EAAM,IAAI,EAAA8D,OAAOF,IAiB/C,OAfAjE,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,UACD,IAAI2E,EAAI,EAAKC,aAAa5D,GAEtB2D,IACApF,EAAOU,SAAW,CAAC0E,IACvB,MAEJ,IAAK,MACD,EAAK3C,mBAAmBhB,EAAGzB,OAKhCA,GAGX,YAAAyC,mBAAA,SAAmB/C,EAAe4F,GAE9BC,OAAOC,OAAOF,EAAIV,MAAO,EAAAnC,mBAAmB/C,EAAM,YAElDzD,KAAK2F,uBAAuBlC,EAAM4F,EAAIZ,SAAW,GAAI,MAAM,SAAAjD,GACvD,OAAQA,EAAEhB,WACN,IAAK,SACD6E,EAAIlD,UAAYpB,EAAIoB,UAAUX,EAAG,OACjC,MAEJ,QACI,OAAO,EAGf,OAAO,MAIf,YAAA4D,aAAA,SAAahE,GACT,IAAc,oBAAgB3C,SAAS2C,GAAzB,eAAgC,CAAzC,IAAIH,EAAC,KACN,OAAQA,EAAET,WACN,IAAK,SACL,IAAK,SACD,OAAOxE,KAAKwJ,oBAAoBvE,MAKhD,YAAAuE,oBAAA,SAAoBpE,GAgBhB,IAfA,IAAIrB,EAAS,IAAI,EAAA0F,WACbC,EAA6B,UAAlBtE,EAAKZ,UAQhBmF,EAAmD,KACnDC,EAAY7E,EAAIkB,SAASb,EAAM,aAE/ByE,EAAO,CAAEC,SAAU,OAAQC,MAAO,OAAQC,OAAQ,KAClDC,EAAO,CAAEH,SAAU,OAAQC,MAAO,MAAOC,OAAQ,KAEvC,gBAAgBvH,SAAS2C,GAAzB,eAAgC,CAAzC,IAAIH,EAAC,KACN,OAAQA,EAAET,WACN,IAAK,YACGoF,IACAC,EAAKG,OAASjF,EAAImF,SAASjF,EAAG,IAAK7B,EAAS+G,KAC5CF,EAAKD,OAASjF,EAAImF,SAASjF,EAAG,IAAK7B,EAAS+G,MAEhD,MAEJ,IAAK,SACDpG,EAAO0E,SAAgB,MAAI1D,EAAImF,SAASjF,EAAG,KAAM7B,EAAS+G,KAC1DpG,EAAO0E,SAAiB,OAAI1D,EAAImF,SAASjF,EAAG,KAAM7B,EAAS+G,KAC3D,MAEJ,IAAK,YACL,IAAK,YACD,IAAKP,EAAW,CACZ,IAAIQ,EAAqB,aAAfnF,EAAET,UAA2BqF,EAAOI,EAC1CI,EAAY,UAAgBvG,QAAQmB,EAAG,SACvCqF,EAAa,UAAgBxG,QAAQmB,EAAG,aAExCoF,IACAD,EAAIL,MAAQM,EAAUE,aAEtBD,IACAF,EAAIJ,OAASjF,EAAIyF,UAAUF,EAAYlH,EAAS+G,MAExD,MAEJ,IAAK,mBACDR,EAAW,mBACX,MAEJ,IAAK,WACDA,EAAW,WACX,MAEJ,IAAK,UACD,IAAIc,EAAIzK,KAAK0K,aAAazF,GAEtBwF,GACA1G,EAAOU,SAASC,KAAK+F,IA4BrC,MAvBgB,oBAAZd,GACA5F,EAAO0E,SAAkB,QAAI,QAEzBoB,EAAKE,QACLhG,EAAO0E,SAAS,cAAgBoB,EAAKE,MACrChG,EAAO0E,SAAgB,MAAI,SAGf,YAAZkB,GACJ5F,EAAO0E,SAAkB,QAAI,QAC7B1E,EAAO0E,SAAmB,SAAI,WAC9B1E,EAAO0E,SAAgB,MAAI,MAC3B1E,EAAO0E,SAAiB,OAAI,MAEzBoB,EAAKG,SACJjG,EAAO0E,SAAe,KAAIoB,EAAKG,QAChCC,EAAKD,SACJjG,EAAO0E,SAAc,IAAIwB,EAAKD,UAE7BN,GAA2B,QAAdG,EAAKE,OAAiC,SAAdF,EAAKE,QAC/ChG,EAAO0E,SAAgB,MAAIoB,EAAKE,OAG7BhG,GAGX,YAAA2G,aAAA,SAAajH,GAGT,IAFA,IAAIkH,EAAc,UAAgB7G,QAAQL,EAAM,eAElC,gBAAgBhB,SAASkI,GAAzB,eAAuC,CAAhD,IAAI1F,EAAC,KACN,OAAQA,EAAET,WACN,IAAK,MACD,OAAOxE,KAAK4K,aAAa3F,IAIrC,OAAO,MAGX,YAAA2F,aAAA,SAAanH,GACT,IAAIM,EAAS,IAAI,EAAA8G,WACbC,EAAW,UAAgBhH,QAAQL,EAAM,YACzCsH,EAAO,UAAgBjH,QAAQgH,EAAU,QAE7C/G,EAAOiH,WAAajG,EAAIgB,WAAWgF,EAAM,SAEzC,IAAIE,EAAO,UAAgBnH,QAAQL,EAAM,QACrCyH,EAAO,UAAgBpH,QAAQmH,EAAM,QAEzClH,EAAO0E,SAAmB,SAAI,WAE9B,IAAc,oBAAgBhG,SAASyI,GAAzB,eAAgC,CAAzC,IAAIjG,EAAC,KACN,OAAQA,EAAET,WACN,IAAK,MACDT,EAAO0E,SAAgB,MAAI1D,EAAImF,SAASjF,EAAG,KAAM7B,EAAS+G,KAC1DpG,EAAO0E,SAAiB,OAAI1D,EAAImF,SAASjF,EAAG,KAAM7B,EAAS+G,KAC3D,MAEJ,IAAK,MACDpG,EAAO0E,SAAe,KAAI1D,EAAImF,SAASjF,EAAG,IAAK7B,EAAS+G,KACxDpG,EAAO0E,SAAc,IAAI1D,EAAImF,SAASjF,EAAG,IAAK7B,EAAS+G,MAKnE,OAAOpG,GAGX,YAAAa,WAAA,SAAWQ,GAAX,WACQrB,EAAS/D,KAAKwD,YAAY4B,EAAM,IAAI,EAAA+F,UAcxC,OAZApG,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,KACDT,EAAOU,SAASC,KAAK,EAAK0G,cAAc5F,IACxC,MAEJ,IAAK,QACD,EAAK6F,qBAAqB7F,EAAGzB,OAKlCA,GAGX,YAAAsH,qBAAA,SAAqB5H,EAAe6H,GAApC,WAyBI,OAxBAA,EAAM7C,SAAW,GACjB6C,EAAMC,UAAY,GAElBvL,KAAK2F,uBAAuBlC,EAAM6H,EAAM7C,SAAU6C,EAAMC,WAAW,SAAA/F,GAC/D,OAAQA,EAAEhB,WACN,IAAK,WACD8G,EAAMnF,UAAYpB,EAAIoB,UAAUX,EAAG,OACnC,MAEJ,IAAK,UACDoD,EAAMC,gBAAgByC,EAAO5F,EAAO8F,mBAAmBhG,IACvD,MAEJ,IAAK,SACD,EAAKiG,mBAAmBjG,EAAG8F,GAC3B,MAEJ,QACI,OAAO,EAGf,OAAO,KAGHA,EAAM7C,SAAS,eACnB,IAAK,gBACM6C,EAAM7C,SAAS,cACtB6C,EAAM7C,SAAS,eAAiB,OAChC6C,EAAM7C,SAAS,gBAAkB,OACjC,MAEJ,IAAK,eACM6C,EAAM7C,SAAS,cACtB6C,EAAM7C,SAAS,eAAiB,SAK5C,YAAAgD,mBAAA,SAAmBrG,EAAekG,GAC9B,IAAII,EAAc3G,EAAImF,SAAS9E,EAAM,eACjCuG,EAAiB5G,EAAImF,SAAS9E,EAAM,kBACpCwG,EAAgB7G,EAAImF,SAAS9E,EAAM,iBACnCyG,EAAe9G,EAAImF,SAAS9E,EAAM,gBAEtCkG,EAAM7C,SAAgB,MAAI,OAC1B6C,EAAM7C,SAAS,iBAAmB/C,EAAOoG,QAAQR,EAAM7C,SAAS,iBAAkBkD,GAClFL,EAAM7C,SAAS,eAAiB/C,EAAOoG,QAAQR,EAAM7C,SAAS,eAAgBoD,GAC9EP,EAAM7C,SAAS,gBAAkB/C,EAAOoG,QAAQR,EAAM7C,SAAS,gBAAiBmD,GAChFN,EAAM7C,SAAS,cAAgB/C,EAAOoG,QAAQR,EAAM7C,SAAS,cAAeiD,IAGhF,YAAAN,cAAA,SAAchG,GAAd,WACQrB,EAAS/D,KAAKwD,YAAY4B,EAAM,IAAI,EAAA2G,aAcxC,OAZAhH,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,KACDT,EAAOU,SAASC,KAAK,EAAKsH,eAAexG,IACzC,MAEJ,IAAK,OACD,EAAKyG,wBAAwBzG,EAAGzB,OAKrCA,GAGX,YAAAkI,wBAAA,SAAwBxI,EAAeyI,GACnCA,EAAIzD,SAAWzI,KAAK2F,uBAAuBlC,EAAM,GAAI,MAAM,SAAA+B,GACvD,OAAQA,EAAEhB,WACN,IAAK,WACD0H,EAAI/F,UAAYT,EAAOoD,oBAAoBtD,GAC3C,MAEJ,QACI,OAAO,EAGf,OAAO,MAIf,YAAAwG,eAAA,SAAe5G,GAAf,WACQrB,EAAS/D,KAAKwD,YAAY4B,EAAM,IAAI,EAAA+G,cAkBxC,OAhBApH,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,MACDT,EAAOU,SAASC,KAAK,EAAKE,WAAWY,IACrC,MAEJ,IAAK,IACDzB,EAAOU,SAASC,KAAK,EAAKC,eAAea,IACzC,MAEJ,IAAK,OACD,EAAK4G,yBAAyB5G,EAAGzB,OAKtCA,GAGX,YAAAqI,yBAAA,SAAyB3I,EAAe4I,GACpCA,EAAK5D,SAAWzI,KAAK2F,uBAAuBlC,EAAM,GAAI,MAAM,SAAA+B,GACxD,OAAQA,EAAEhB,WACN,IAAK,WACD6H,EAAKC,KAAOvH,EAAI6C,QAAQpC,EAAG,MAAO,MAClC,MAEJ,IAAK,SACD6G,EAAKE,cAAgBxH,EAAImF,SAAS1E,EAAG,OACrC,MAEJ,IAAK,WACD6G,EAAKlG,UAAYT,EAAOoD,oBAAoBtD,GAC5C,MAEJ,QACI,OAAO,EAGf,OAAO,MAIf,YAAAG,uBAAA,SAAuBlC,EAAeqE,EAAsC0E,EAA2CC,GAAvH,WAmHI,YAnHkC,IAAA3E,MAAA,WAAsC,IAAA0E,MAAA,WAA2C,IAAAC,MAAA,MACnH3E,EAAQA,GAAS,GAGjB/C,EAAIC,QAAQvB,GAAM,SAAA+B,GACd,OAAQA,EAAEhB,WACN,IAAK,KACDsD,EAAM,cAAgBpC,EAAOgH,UAAUlH,GACvC,MAEJ,IAAK,QACDsC,EAAa,MAAI/C,EAAI4H,UAAUnH,EAAG,MAAO,KAAM,EAAAxC,MAAME,OACrD,MAEJ,IAAK,KACD4E,EAAM,aAAeA,EAAM,cAAgB/C,EAAImF,SAAS1E,EAAG,MAAOpC,EAASwJ,UAC3E,MAEJ,IAAK,MACD9E,EAAM,oBAAsB/C,EAAI4H,UAAUnH,EAAG,OAAQ,KAAM,EAAAxC,MAAMC,KACjE,MAEJ,IAAK,YACD6E,EAAM,oBAAsB/C,EAAI4H,UAAUnH,EAAG,MAAO,KAAM,EAAAxC,MAAMG,WAChE,MAEJ,IAAK,MACD,GAAI,EAAKG,YACL,MAER,IAAK,OACDwE,EAAa,MAAIpC,EAAOmH,YAAYrH,EAAG,KACvC,MAEJ,IAAK,WACD,EAAKsH,cAActH,EAAGsC,GACtB,MAEJ,IAAK,SACDA,EAAM,mBAAqBpC,EAAOqH,cAAcvH,GAChD,MAEJ,IAAK,IACDsC,EAAM,eAAiBpC,EAAOsH,YAAYxH,GAC1C,MAEJ,IAAK,IACDsC,EAAM,cAAgB,SACtB,MAEJ,IAAK,IACD,EAAKmF,eAAezH,EAAGsC,GACvB,MAEJ,IAAK,MACL,IAAK,SACD,EAAKoF,iBAAiB1H,EAAGsC,GACzB,MAEJ,IAAK,SACD,EAAKqF,UAAU3H,EAAGsC,GAClB,MAEJ,IAAK,aACD,EAAKsF,sBAAsB5H,EAAGgH,GAAc1E,GAC5C,MAEJ,IAAK,iBACDA,EAAM,kBAAoBpC,EAAO2H,cAAc7H,GAC/CsC,EAAM,mBAAqB,WAC3B,MAEJ,IAAK,OACD,EAAKsF,sBAAsB5H,EAAGsC,GAC9B,MAEJ,IAAK,MACDA,EAAc,OAAIpC,EAAO4H,cAAc9H,GACvC,MAEJ,IAAK,YACD,EAAK4H,sBAAsB5H,EAAGsC,GAC9B,MAEJ,IAAK,SAGD,MAEJ,IAAK,aACL,IAAK,QACD,EAAKyF,sBAAsB/H,EAAGgH,GAAc1E,GAC5C,MAEJ,IAAK,YACDA,EAAM,gBAAkBpC,EAAO8H,iBAAiBhI,GAChD,MAEJ,IAAK,SACDsC,EAAM,kBAAoB/C,EAAIgB,WAAWP,EAAG,OAC5C,MAEJ,IAAK,OACL,IAAK,UACL,IAAK,YAED,MAEJ,QACmB,MAAXiH,GAAoBA,EAAQjH,IAC5B,EAAKjC,OAASoD,QAAQC,KAAK,mCAAmCpB,EAAEhB,eAKzEsD,GAGX,YAAAmF,eAAA,SAAe7H,EAAe0C,GAC1B,IAAI2F,EAAM1I,EAAIgB,WAAWX,EAAM,OAE/B,GAAW,MAAPqI,GAAsB,QAAPA,EAAnB,CAGA,OAAQA,GACJ,IAAK,OACL,IAAK,kBACL,IAAK,eACL,IAAK,cACL,IAAK,WACL,IAAK,gBACL,IAAK,UACL,IAAK,aACD3F,EAAM,yBAA2B,SACjC,MAEJ,IAAK,SACL,IAAK,cACDA,EAAM,yBAA2B,SACjC,MAEJ,IAAK,SACDA,EAAM,yBAA2B,SACjC,MAEJ,IAAK,SACL,IAAK,QACDA,EAAM,mBAAqB,YAC3B,MAEJ,IAAK,OACL,IAAK,aACL,IAAK,YACDA,EAAM,yBAA2B,OACjC,MAEJ,IAAK,QACDA,EAAM,mBAAqB,YAInC,IAAI4F,EAAM3I,EAAI4H,UAAUvH,EAAM,SAE1BsI,IACA5F,EAAM,yBAA2B4F,KAGzC,YAAAP,UAAA,SAAU/H,EAAe0C,GACrB,IAAI6F,EAAQ5I,EAAIgB,WAAWX,EAAM,SAE7BuI,IACA7F,EAAM,eAAiB6F,IAG/B,YAAAT,iBAAA,SAAiB9H,EAAe0C,GAC5B,IAAI8F,EAAY7I,EAAImF,SAAS9E,EAAM,aAC/ByI,EAAO9I,EAAImF,SAAS9E,EAAM,QAC1B0I,EAAQ/I,EAAImF,SAAS9E,EAAM,SAC3B2I,EAAQhJ,EAAImF,SAAS9E,EAAM,SAC3B4I,EAAMjJ,EAAImF,SAAS9E,EAAM,OAEzBwI,IAAW9F,EAAM,eAAiB8F,IAClCC,GAAQC,KAAOhG,EAAM,eAAiB+F,GAAQC,IAC9CC,GAASC,KAAKlG,EAAM,gBAAkBiG,GAASC,IAGvD,YAAAT,sBAAA,SAAsBnI,EAAe1B,GACjCqB,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,OACDd,EAAO,gBAAkBgC,EAAO2H,cAAc7H,GAC9C,MAEJ,IAAK,QACD9B,EAAO,iBAAmBgC,EAAO2H,cAAc7H,GAC/C,MAEJ,IAAK,MACD9B,EAAO,eAAiBgC,EAAO2H,cAAc7H,GAC7C,MAEJ,IAAK,SACD9B,EAAO,kBAAoBgC,EAAO2H,cAAc7H,QAMhE,YAAAsH,cAAA,SAAc1H,EAAe1B,GACzB,OAAQqB,EAAIgB,WAAWX,EAAM,UACzB,IAAK,QACD1B,EAAe,OAAIqB,EAAImF,SAAS9E,EAAM,OACtC,MAEJ,IAAK,UACL,QACI1B,EAAe,OAAIqB,EAAImF,SAAS9E,EAAM,SAOlD,YAAAgI,sBAAA,SAAsBhI,EAAe1B,GACjCqB,EAAIC,QAAQI,GAAM,SAAAI,GACd,OAAQA,EAAEhB,WACN,IAAK,QACL,IAAK,OACDd,EAAO,eAAiBgC,EAAO4H,cAAc9H,GAC7C,MAEJ,IAAK,MACL,IAAK,QACD9B,EAAO,gBAAkBgC,EAAO4H,cAAc9H,GAC9C,MAEJ,IAAK,MACD9B,EAAO,cAAgBgC,EAAO4H,cAAc9H,GAC5C,MAEJ,IAAK,SACD9B,EAAO,iBAAmBgC,EAAO4H,cAAc9H,QAKnE,EAz8BA,GAAa,EAAAyI,iBA28Bb,SAAK7K,GACD,2BACA,iBACA,iBACA,uBACA,yBALJ,CAAKA,MAAQ,KAQb,+BAwEA,OAvEW,EAAA4B,QAAP,SAAeI,EAAe8I,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAI/I,EAAKgJ,WAAWC,OAAQF,IAAK,CAC7C,IAAIlJ,EAAIG,EAAKgJ,WAAWD,GAEN,GAAdlJ,EAAEqJ,UACFJ,EAAYjJ,KAIjB,EAAAuC,kBAAP,SAAyB/D,EAAe8K,EAAUC,GAC9C,IAAIvJ,EAAI,UAAgBnB,QAAQL,EAAM8K,GACtC,OAAOtJ,EAAIF,EAAIgB,WAAWd,EAAGuJ,GAAY,MAGtC,EAAAzI,WAAP,SAAkBX,EAAeoJ,GAC7B,OAAO,UAAgB3L,KAAKuC,EAAMoJ,IAG/B,EAAA7B,UAAP,SAAiBvH,EAAeoJ,EAAkBC,EAAyBC,QAAzB,IAAAD,MAAA,WAAyB,IAAAC,MAAA,SACvE,IAAIC,EAAI5J,EAAIgB,WAAWX,EAAMoJ,GAE7B,OAAQG,GACJ,IAAK,SACD,OAAOA,EAEX,IAAK,OACD,OAAOD,EAGf,OAAOC,EAAI,IAAIA,EAAMF,GAGlB,EAAAxI,SAAP,SAAgBb,EAAeoJ,EAAkBC,GAC7C,YAD6C,IAAAA,OAAA,GACtC,UAAgBxI,SAASb,EAAMoJ,EAAUC,IAG7C,EAAA7G,QAAP,SAAexC,EAAeoJ,EAAkBC,GAE5C,YAF4C,IAAAA,MAAA,GAClC1J,EAAIgB,WAAWX,EAAMoJ,GAClBI,SAAS7J,EAAIgB,WAAWX,EAAMoJ,IAAaC,GAGrD,EAAAvE,SAAP,SAAgB9E,EAAeoJ,EAAkBxN,GAC7C,YAD6C,IAAAA,MAAiBoC,EAASyL,KAChE9J,EAAI+J,YAAY/J,EAAIgB,WAAWX,EAAMoJ,GAAWxN,IAGpD,EAAAwJ,UAAP,SAAiBpF,EAAepE,GAC5B,YAD4B,IAAAA,MAAiBoC,EAASyL,KAC/C9J,EAAI+J,YAAY1J,EAAKmF,YAAavJ,IAGtC,EAAA8N,YAAP,SAAmBrB,EAAazM,GAC5B,QAD4B,IAAAA,MAAiBoC,EAASyL,KAC3C,MAAPpB,GAAeA,EAAIsB,QAAQ,OAAS,EACpC,OAAOtB,EAEX,IAAIuB,EAASJ,SAASnB,GAEtB,OAAQzM,GACJ,KAAKoC,EAASyL,IAAK,OAAQ,IAAOG,GAAQC,QAAQ,GAAK,KACvD,KAAK7L,EAAS+G,IAAK,OAAQ6E,EAAS,OAAOC,QAAQ,GAAK,KACxD,KAAK7L,EAASwJ,SAAU,OAAQ,GAAMoC,GAAQC,QAAQ,GAAK,KAC3D,KAAK7L,EAAS8L,OAAQ,OAAQ,KAAQF,GAAQC,QAAQ,GAAK,KAC3D,KAAK7L,EAAS+L,QAAS,OAAQ,IAAOH,GAAQC,QAAQ,GAAK,IAG/D,OAAOxB,GAGJ,EAAAtH,UAAP,SAAiBf,EAAeoJ,GAC5B,IAAIf,EAAM1I,EAAIgB,WAAWX,EAAMoJ,GAE/B,OAAOf,GAAOA,EAAI2B,QAAQ,SAAU,KAAKA,QAAQ,QAAS,QAElE,EAxEA,GA0EA,2BAgGA,OA/FW,EAAApC,YAAP,SAAmBxH,GACf,OAAOT,EAAIkB,SAAST,EAAG,OAAO,GAAQ,OAAS,UAG5C,EAAAqH,YAAP,SAAmBrH,EAAY3C,GAC3B,IAAI7B,EAAiBoC,EAASyL,IAE9B,OAAQ9J,EAAIgB,WAAWP,EAAG,SACtB,IAAK,MAAO,MACZ,IAAK,MAAOxE,EAAOoC,EAAS+L,QAGhC,OAAOpK,EAAImF,SAAS1E,EAAG3C,EAAM7B,IAG1B,EAAA+L,cAAP,SAAqBvH,GACjB,OAAOT,EAAIkB,SAAST,EAAG,OAAO,GAAQ,eAAiB,QAGpD,EAAA6H,cAAP,SAAqB7H,GACjB,OAAOT,EAAImF,SAAS1E,EAAG,MAGpB,EAAA8H,cAAP,SAAqB9H,GAGjB,GAAY,OAFDT,EAAIgB,WAAWP,EAAG,OAGzB,MAAO,OAEX,IAAItC,EAAQ6B,EAAI4H,UAAUnH,EAAG,SAG7B,OAFWT,EAAImF,SAAS1E,EAAG,KAAMpC,EAAS8L,QAE5B,WAAmB,QAAThM,EAAkB,QAAUA,IAGjD,EAAAsK,iBAAP,SAAwBhI,GAEpB,MAAe,SADJT,EAAIgB,WAAWP,EAAG,OACJ,QAAU,QAGhC,EAAAsD,oBAAP,SAA2BtD,GACvB,IAAIW,EAAY,GACZsH,EAAM1I,EAAIgB,WAAWP,EAAG,OAgB5B,MAbc,KAAViI,EAAI,KAAWtH,GAAa,cAClB,KAAVsH,EAAI,KAAWtH,GAAa,aAClB,KAAVsH,EAAI,KAAWtH,GAAa,cAClB,KAAVsH,EAAI,KAAWtH,GAAa,aAClB,KAAVsH,EAAI,KAAWtH,GAAa,YAClB,KAAVsH,EAAI,KAAWtH,GAAa,aAClB,KAAVsH,EAAI,KAAWtH,GAAa,YAClB,KAAVsH,EAAI,KAAWtH,GAAa,aAClB,KAAVsH,EAAI,KAAWtH,GAAa,YAClB,KAAVsH,EAAI,KAAWtH,GAAa,YACjB,KAAXsH,EAAI,MAAYtH,GAAa,YAClB,KAAXsH,EAAI,MAAYtH,GAAa,YAE1BA,EAAUkJ,QAGd,EAAA3C,UAAP,SAAiBlH,GACb,IAAIxE,EAAO+D,EAAIgB,WAAWP,EAAG,OAE7B,OAAQxE,GACJ,IAAK,QACL,IAAK,OAAQ,MAAO,OACpB,IAAK,SAAU,MAAO,SACtB,IAAK,MACL,IAAK,QAAS,MAAO,QACrB,IAAK,OAAQ,MAAO,UAGxB,OAAOA,GAGJ,EAAA8K,QAAP,SAAewD,EAAWC,GACtB,OAAS,MAALD,EAAkBC,EACb,MAALA,EAAkBD,EAEf,QAAQA,EAAC,MAAMC,EAAC,KAGpB,EAAA/D,mBAAP,SAA0BhG,GACtB,IAAIW,EAAY,GAShB,OAPIpB,EAAIkB,SAAST,EAAG,iBAAgBW,GAAa,cAC7CpB,EAAIkB,SAAST,EAAG,cAAaW,GAAa,cAC1CpB,EAAIkB,SAAST,EAAG,gBAAeW,GAAa,YAC5CpB,EAAIkB,SAAST,EAAG,aAAYW,GAAa,aACzCpB,EAAIkB,SAAST,EAAG,aAAYW,GAAa,aACzCpB,EAAIkB,SAAST,EAAG,aAAYW,GAAa,aAEtCA,EAAUkJ,QAEzB,EAhGA,I,uGCnjCA,SACA,SAEA,2B,+CAMA,OANuC,iBAGnC,YAAAhN,SAAA,SAASpD,GACLe,KAAK2I,MAAQ,EAAA6G,mBAAmBvQ,EAAMe,KAAK8B,SAASlC,YAE5D,EANA,CAAuC,EAAA2C,MAA1B,EAAAkN,qB,YCoDb,SAASC,EAAeC,GACpB,QAAqB,IAAVA,EAEX,OAAOf,SAASe,G,6EA3CpB,8BAAmC1Q,EAAeW,GAK9C,IAJA,IAAImE,EAAmC,GAIxB,MAAAnE,EAAU6C,SAASxD,GAAnB,eAA0B,CAApC,IAAI2Q,EAAE,KACP,OAAQA,EAAGpL,WACP,IAAK,WACDT,EAAO8L,SAAWD,EAAGrF,YACrB,MACJ,IAAK,QACDxG,EAAO+L,MAAQJ,EAAeE,EAAGrF,aACjC,MACJ,IAAK,QACDxG,EAAOgM,MAAQL,EAAeE,EAAGrF,aACjC,MACJ,IAAK,aACDxG,EAAOiM,WAAaN,EAAeE,EAAGrF,aACtC,MACJ,IAAK,cACDxG,EAAOkM,YAAcL,EAAGrF,YACxB,MACJ,IAAK,QACDxG,EAAOmM,MAAQR,EAAeE,EAAGrF,aACjC,MACJ,IAAK,aACDxG,EAAOoM,WAAaT,EAAeE,EAAGrF,aACtC,MACJ,IAAK,UACDxG,EAAOqM,QAAUR,EAAGrF,YACpB,MACJ,IAAK,aACDxG,EAAOsM,WAAaT,EAAGrF,aAKnC,OAAOxG,I,uHCpDX,SACA,SAGA,2B,+CASA,OATsC,iBAElC,cADC,EAAAuM,cAAc,O,yBAGf,cADC,EAAAA,cAAc,S,2BAGf,cADC,EAAAA,cAAc,a,+BAGf,cADC,EAAAA,cAAc,Y,8BAPU,cAD5B,EAAAxM,QAAQ,kBACIyM,GAAb,CAAsC,EAAAC,aAAzB,EAAAD,mBAYb,+B,+CAGA,OAHoC,iBAEhC,cADC,EAAAD,cAAc,O,yBADQ,cAD1B,EAAAxM,QAAQ,gBACI2M,GAAb,CAAoC,EAAAD,aAAvB,EAAAC,kB,mGCfb,aAkBA,SAAgBC,EAAYjN,EAAesB,GACvC,MAAO,CACH/D,KAAM+D,EAAIlC,KAAKY,EAAM,OACrBP,MAAO6B,EAAIlC,KAAKY,EAAM,SACtBkN,KAAM5L,EAAI6L,WAAWnN,EAAM,KAAM,EAAAoN,YAAY3B,QAC7ClF,OAAQjF,EAAI6L,WAAWnN,EAAM,QAAS,EAAAoN,YAAYC,OAClDC,MAAOhM,EAAIkB,SAASxC,EAAM,SAC1BuN,OAAQjM,EAAIkB,SAASxC,EAAM,WAPnC,gBAWA,wBAA6BA,EAAesB,GAGxC,IAFA,IAAIhB,EAAkB,GAER,MAAAgB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,OAAQT,EAAO8J,KAAO6C,EAAY/N,EAAGoC,GAAM,MAChD,IAAK,MAAOhB,EAAOkN,IAAMP,EAAY/N,EAAGoC,GAAM,MAC9C,IAAK,QAAShB,EAAOgK,MAAQ2C,EAAY/N,EAAGoC,GAAM,MAClD,IAAK,SAAUhB,EAAOmN,OAASR,EAAY/N,EAAGoC,IAItD,OAAOhB,I,yHC1CX,SACA,SAGA,2B,+CAMA,OAN8B,iBAE1B,cADC,EAAAuM,cAAc,S,2BAIf,cADC,EAAAA,cAAc,U,4BAJE,cADpB,EAAAxM,QAAQ,OACIqN,GAAb,CAA8B,EAAAX,aAAjB,EAAAW,WASb,+B,+CACA,OAD8C,iBAAT,cADpC,EAAArN,QAAQ,0BACIsN,GAAb,CAA8C,EAAAZ,aAAjC,EAAAY,4B,kKCbb,aAEa,EAAAC,GAAK,CACdC,OAAQ,+DACRC,UAAW,wDACXC,QAAS,4DAsBA,EAAAX,YAA+C,CACxDhC,IAAK,CAAE4C,IAAK,IAAMC,KAAM,MACxBvH,IAAK,CAAEsH,IAAK,EAAI,MAAOC,KAAM,MAC7B9E,SAAU,CAAE6E,IAAK,GAAKC,KAAM,MAC5BxC,OAAQ,CAAEuC,IAAK,KAAOC,KAAM,MAC5BZ,MAAO,CAAEW,IAAK,EAAGC,KAAM,MACvBvC,QAAS,CAAEsC,IAAK,IAAMC,KAAM,KAC5BC,WAAY,CAAEF,IAAK,EAAI,IAAKC,KAAM,OAGtC,yBAA8BjE,EAAamE,GACvC,YADuC,IAAAA,MAAyB,EAAAf,YAAYhC,KACvEpB,EAKDA,EAAIoE,SAAS,MACN,CAAElC,MAAOmC,WAAWrE,GAAMzM,KAAM,MAGvCyM,EAAIoE,SAAS,KACN,CAAElC,MAAOmC,WAAWrE,GAAMzM,KAAM,KAGpC,CAAE2O,MAAOf,SAASnB,GAAOmE,EAAMH,IAAKzQ,KAAM4Q,EAAMF,MAZ5C,MAef,0BAA+B/C,EAAWoD,GACtC,YADsC,IAAAA,OAAA,GAC9BpD,GACJ,IAAK,IAAK,OAAO,EACjB,IAAK,IAAK,OAAO,EACjB,QAAS,OAAOoD,IAIxB,6BAAkCtE,GAC9B,OAAOA,EAAMmB,SAASnB,GAAO,IAAM,MAGvC,6BAAkChK,GAC9B,OAAO,EAAAZ,KAAKY,EAAM,S,kGC9DtB,cAGI,WAAYuO,EAAqBjS,EAAckS,GAA/C,MACI,YAAMD,EAAKjS,IAAK,K,OAChB,EAAKmS,gBAAkBD,E,EAQ/B,OAbkC,iBAU9B,YAAA5P,SAAA,SAASpD,GACLe,KAAKmS,gBAAkBnS,KAAKkS,gBAAgBtO,kBAAkB3E,IAEtE,EAbA,CAJA,OAIkCsD,MAArB,EAAA6P,gB,2GCLb,SACA,SACA,QAGA,2B,+CAEA,OAFiC,iBAAT,cADvB,EAAAtO,QAAQ,aACIE,GAAb,CAAiC,EAAAwM,aAApB,EAAAxM,cAKb,+B,+CAGA,OAH6B,iBAEzB,cADC,EAAAqO,YAAY,SAAU,EAAAC,yB,mCADP,cADnB,EAAAxO,QAAQ,SACII,GAAb,CAA6B,EAAAqO,eAAhB,EAAArO,W,iHCVb,EAII,SAAmB8E,GAAA,KAAAA,SAHnB,KAAA7C,UAAoB,KACpB,KAAAsC,SAAmC,IAF1B,EAAA+H,cAQb,6E,OACI,EAAA/L,SAA0B,G,EAC9B,OAFmC,iBAEnC,EAFA,CAAmC+L,GAAtB,EAAA+B,iB,+HCRb,SACA,SACA,SAGA,2B,+CAEA,OAFgC,iBAAT,cADtB,EAAAzO,QAAQ,YACI2F,GAAb,CAAgC,EAAA8I,eAAnB,EAAA9I,aAIb,+B,+CAKA,OALgC,iBAKhC,EALA,CAAgC,EAAA8I,eAAnB,EAAA1H,aAOb,2BAAgCpH,EAAeC,EAAoBqB,QAAA,IAAAA,MAAiB,WAChF,IAAM+F,EAAW/F,EAAIjB,QAAQL,EAAM,YAC7BsH,EAAOhG,EAAIjB,QAAQgH,EAAU,QAEnCpH,EAAOsH,WAAajG,EAAIlC,KAAKkI,EAAM,W,mHCpBvC,SACA,SACA,SAGA,2B,+CAGA,OAHkC,iBAE9B,cADC,EAAAuF,cAAc,gB,2BADM,cADxB,EAAAxM,QAAQ,YACI0O,GAAb,CAAkC,EAAAhC,aAArB,EAAAgC,eAMb,+B,+CASA,OAToC,iBAEhC,cADC,EAAAlC,cAAc,QAAS,EAAAmC,iB,4BAIxB,cADC,EAAAnC,cAAc,UAAW,EAAAmC,iB,2BAI1B,cADC,EAAAnC,cAAc,U,kCAPQ,cAD1B,EAAAxM,QAAQ,cACI4O,GAAb,CAAoC,EAAAH,eAAvB,EAAAG,kB,iGCXb,SACA,SAIA,2B,+CAOA,OAPkC,iBAIpB,YAAAC,MAAV,SAAgBlP,GACZzD,KAAK4S,OAAS,UAAgB/P,KAAKY,EAAM,WAH7C,cADC,EAAA6M,cAAc,W,6BADM,cADxB,EAAAxM,QAAQ,cACImF,GAAb,CAHA,OAGkCsJ,eAArB,EAAAtJ,gB,uFCKb,4BAAiCxF,EAAesB,GAC5C,MAAO,CACH+I,MAAO/I,EAAI6L,WAAWnN,EAAM,SAC5BuK,IAAKjJ,EAAI6L,WAAWnN,EAAM,OAC1BoP,QAAS9N,EAAI6L,WAAWnN,EAAM,WAC9BmK,UAAW7I,EAAI6L,WAAWnN,EAAM,gB,yFCdxC,aASA,4BAAiCA,EAAesB,GAC5C,IAAM+N,EAAW/N,EAAIlC,KAAKY,EAAM,YAEhC,MAAO,CACHsP,OAAQhO,EAAI6L,WAAWnN,EAAM,UAC7BuP,MAAOjO,EAAI6L,WAAWnN,EAAM,SAC5BwP,KAAMlO,EAAI6L,WAAWnN,EAAM,OAAqB,SAAbqP,EAAsB,EAAAjC,YAAYc,WAAa,EAAAd,YAAYhC,KAC9FiE,SAAQ,K,mLCjBhB,SACA,SAEA,QACA,SAEA,SACA,SACA,SACA,SACA,SAIA,yE,OACI,EAAAnK,MAA6B,G,EACjC,OAFkC,iBAAT,cAFxB,EAAA7E,QAAQ,KACR,EAAAW,SAAS,EAAA8L,iBAAkB,EAAAE,eAAgB,EAAAiC,iBAC/BrK,GAAb,CAAkC,EAAAkK,eA2ClC,SAAgB7J,EAAuBjF,EAAekF,EAA4B5D,GAC9E,GAAItB,EAAKyP,cAAgB,EAAA7B,GAAGC,OACxB,OAAO,EAEX,OAAQ7N,EAAKe,WACT,IAAK,OACDmE,EAAMwK,KAAOC,EAAU3P,EAAMsB,GAC7B,MAEJ,IAAK,SACD4D,EAAM0K,aAAe,EAAAf,uBAAuB7O,EAAMsB,GAClD,MAEJ,IAAK,QACD4D,EAAM2K,UAAYC,EAAe9P,EAAMsB,GACvC,MAEJ,IAAK,UACD4D,EAAM6K,YAAc,EAAAC,iBAAiBhQ,EAAMsB,GAC3C,MAEJ,IAAK,MAED,OADA4D,EAAM+K,YAAc,EAAAxG,iBAAiBzJ,EAAMsB,IACpC,EAGX,IAAK,gBACD4D,EAAMgL,cAAgB5O,EAAIlC,KAAKY,EAAM,OACrC,MAEJ,IAAK,WACDkF,EAAMiL,UAAY7O,EAAIkB,SAASxC,EAAM,OAAO,GAC5C,MAEJ,IAAK,WACDkF,EAAMkL,SAAW9O,EAAIkB,SAASxC,EAAM,OAAO,GAC3C,MAEJ,IAAK,kBACDkF,EAAMmL,gBAAkB/O,EAAIkB,SAASxC,EAAM,OAAO,GAClD,MAEJ,IAAK,aACDkF,EAAMoL,aAAehP,EAAI6C,QAAQnE,EAAM,OACvC,MAEJ,IAAK,SACDkF,EAAMqL,QAAUjP,EAAIlC,KAAKY,EAAM,OAC/B,MAEJ,IAAK,MACDkF,EAAMpC,SAAW,EAAAC,mBAAmB/C,EAAMsB,GAC1C,MAEJ,QACI,OAAO,EAGf,OAAO,EAGX,SAAgBqO,EAAU3P,EAAesB,GACrC,OAAOA,EAAItC,SAASgB,EAAM,OACrBf,KAAI,SAAAC,GAAK,OACNsR,SAAUlP,EAAI6L,WAAWjO,EAAG,OAC5BuR,OAAQnP,EAAIlC,KAAKF,EAAG,UACpBmF,MAAO/C,EAAIlC,KAAKF,EAAG,WAI/B,SAAgB4Q,EAAe9P,EAAesB,GAG1C,IAFA,IAAIhB,EAA6B,GAEnB,MAAAgB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,QACDT,EAAOnB,GAAKmC,EAAIlC,KAAKF,EAAG,OACxB,MAEJ,IAAK,OACDoB,EAAOiE,MAAQjD,EAAI6C,QAAQjF,EAAG,QAK1C,OAAOoB,EAhIE,EAAAsE,eAiCb,oCAAyC5E,EAAesB,GAGpD,IAFA,IAAIhB,EAA8B,GAEpB,MAAAgB,EAAItC,SAASgB,GAAb,eACViF,EADM,KACqB3E,EAAQgB,GAGvC,OAAOhB,GAGX,2BA6DA,cASA,oB,mKC9HA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAIA,yE,OAGI,EAAA4E,MAAsC,G,EAC1C,OAJ4B,iBAAT,cAFlB,EAAA7E,QAAQ,KACR,EAAAW,SAAS,EAAA0P,QAAS,EAAAC,UAAW,EAAAC,OAAQ,EAAAlD,SAAU,EAAAmD,mBAAoB,EAAA9B,aAAc,EAAApB,yBAA0B,EAAA3H,aAC/FP,GAAb,CAA4B,EAAAqJ,eAmD5B,SAAgBgC,EAAiB9Q,EAAekF,EAAsB5D,GAClE,OAAQtB,EAAKe,WACT,IAAK,SACDmE,EAAM6L,UAAYzP,EAAIlC,KAAKY,EAAM,OACjC,MAEJ,IAAK,MACDkF,EAAM8L,OAAS,EAAA/D,YAAYjN,EAAMsB,GACjC,MAEJ,IAAK,SACD4D,EAAM+L,MAAQC,EAAclR,EAAMsB,GAClC,MAEJ,IAAK,MACD4D,EAAMiM,QAAUC,EAAapR,EAAMsB,GACnC,MAEJ,IAAK,YACD4D,EAAMxF,UAAY4B,EAAIlC,KAAKY,EAAM,OACjC,MAEJ,IAAK,UACDkF,EAAMmM,QAAU/P,EAAI6L,WAAWnN,EAAM,OACrC,MAEJ,IAAK,IACDkF,EAAMoM,QAAUhQ,EAAIiQ,eAAevR,EAAM,OACzC,MAEA,IAAK,QACLkF,EAAMzF,MAAQ6B,EAAIlC,KAAKY,EAAM,OAC7B,MAEJ,IAAK,KACDkF,EAAMsM,SAAWlQ,EAAI6L,WAAWnN,EAAM,MAAO,EAAAoN,YAAYjE,UACzD,MAEJ,IAAK,IACDjE,EAAMuM,KAAOnQ,EAAIkB,SAASxC,EAAM,OAAO,GACvC,MAEJ,IAAK,SACDkF,EAAMwM,OAASpQ,EAAIkB,SAASxC,EAAM,OAAO,GACzC,MAEJ,IAAK,UACDkF,EAAMyM,aAAerQ,EAAIkB,SAASxC,EAAM,OAAO,GAC/C,MAEJ,IAAK,IACDkF,EAAM0M,QAAUtQ,EAAIkB,SAASxC,EAAM,OAAO,GAC1C,MAEJ,IAAK,IACDkF,EAAM2M,UAAY,CACdpS,MAAO6B,EAAIlC,KAAKY,EAAM,SACtBzC,KAAM+D,EAAIlC,KAAKY,EAAM,QAEzB,MAEJ,IAAK,OACDkF,EAAM4M,KAAOxQ,EAAIkB,SAASxC,EAAM,OAAO,GACvC,MAEJ,IAAK,YACDkF,EAAM6M,UAAYzQ,EAAIkB,SAASxC,EAAM,OAAO,GAC5C,MAEJ,IAAK,UACDkF,EAAM8M,QAAU1Q,EAAIkB,SAASxC,EAAM,OAAO,GAC1C,MAEJ,IAAK,UACDkF,EAAM+M,QAAU3Q,EAAIkB,SAASxC,EAAM,OAAO,GAC1C,MAEJ,IAAK,YACDkF,EAAMgN,kBAAoB5Q,EAAIlC,KAAKY,EAAM,OACzC,MAEJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,QACI,OAAO,EAGf,OAAO,EAGX,SAAgBkR,EAAclR,EAAesB,GACzC,MAAO,CACH4I,MAAO5I,EAAIlC,KAAKY,EAAM,SACtBmS,OAAQ7Q,EAAIlC,KAAKY,EAAM,UACvBoS,GAAI9Q,EAAIlC,KAAKY,EAAM,MACnBqS,SAAU/Q,EAAIlC,KAAKY,EAAM,aAIjC,SAAgBoR,EAAapR,EAAesB,GACxC,MAAO,CACH/D,KAAM+D,EAAIlC,KAAKY,EAAM,OACrBsS,WAAYhR,EAAIlC,KAAKY,EAAM,SAC3BuS,WAAYjR,EAAIlC,KAAKY,EAAM,SA3JtB,EAAAyF,SAyCb,8BAAmCzF,EAAesB,GAG9C,IAFA,IAAIhB,EAAwB,GAEd,MAAAgB,EAAItC,SAASgB,GAAb,eACV8Q,EADM,KACexQ,EAAQgB,GAGjC,OAAOhB,GAGX,qBA2FA,kBASA,kB,4GCnKA,IAgCYkS,EAhCZ,SAoGA,SAASC,EAAazS,EAAesB,GACjC,MAAO,CACHoR,gBAAiBpR,EAAI6C,QAAQnE,EAAM,OACnC2S,MAAOrR,EAAI6L,WAAWnN,EAAM,SAC5B4S,UAAWtR,EAAIkB,SAASxC,EAAM,OAC9B6S,WAAYvR,EAAIkB,SAASxC,EAAM,cAAc,GAC7C8S,QAASxR,EAAItC,SAASgB,EAAM,OACvBf,KAAI,SAAAC,GAAK,OACN6T,MAAOzR,EAAI6L,WAAWjO,EAAG,KACzByT,MAAOrR,EAAI6L,WAAWjO,EAAG,cAKzC,SAAS8T,EAA2BhT,EAAesB,GAC/C,MAAO,CACHnC,GAAImC,EAAIlC,KAAKY,EAAM,MACnBzC,KAAM+D,EAAIlC,KAAKY,EAAM,UArFjBwS,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACnB,wBACA,sBACA,0BACA,sBACA,oBAiBJ,kCAAuCxS,EAAesB,G,aAAA,IAAAA,MAAiB,WAGnE,IAFA,IAAI2R,EAA6B,GAEnB,MAAA3R,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,OACDkS,EAAQC,SAAW,CACfH,MAAOzR,EAAI6L,WAAWjO,EAAG,KACzBiU,OAAQ7R,EAAI6L,WAAWjO,EAAG,KAC1BkU,YAAa9R,EAAIlC,KAAKF,EAAG,WAE7B,MAEJ,IAAK,OACD+T,EAAQ1V,KAAO+D,EAAIlC,KAAKF,EAAG,OAC3B,MAEJ,IAAK,QACD+T,EAAQI,YAAc,CAClBjJ,KAAM9I,EAAI6L,WAAWjO,EAAG,QACxBoL,MAAOhJ,EAAI6L,WAAWjO,EAAG,SACzBsO,IAAKlM,EAAI6L,WAAWjO,EAAG,OACvBuO,OAAQnM,EAAI6L,WAAWjO,EAAG,UAC1BoU,OAAQhS,EAAI6L,WAAWjO,EAAG,UAC1BqU,OAAQjS,EAAI6L,WAAWjO,EAAG,UAC1BsU,OAAQlS,EAAI6L,WAAWjO,EAAG,WAE9B,MAEJ,IAAK,OACD+T,EAAQH,QAAUL,EAAavT,EAAGoC,GAClC,MAEJ,IAAK,mBACkB,QAAlB,EAAA2R,EAAQQ,kBAAU,QAAKR,EAAQQ,WAAa,IAAKxS,KAAK+R,EAA2B9T,EAAGoC,IACrF,MAEJ,IAAK,mBACkB,QAAlB,EAAA2R,EAAQS,kBAAU,QAAKT,EAAQS,WAAa,IAAKzS,KAAK+R,EAA2B9T,EAAGoC,KAKjG,OAAO2R,I,kGCjGX,SAIA,2B,+CAGA,OAHkC,iBAAT,cADxB,EAAA5S,QAAQ,OACIqI,GAAb,CAHA,OAGkCoG,eAArB,EAAApG,gB,iGCJb,SAIA,2B,+CACA,OADiC,iBAAT,cADvB,EAAArI,QAAQ,OACIiI,GAAb,CAHA,OAGiCwG,eAApB,EAAAxG,e,0JCJb,SACA,SAKA,2B,+CAOA,OAP8B,iBAE1B,cADC,EAAAsG,YAAY,UAAW+E,I,8BAGxB,cADC,EAAA/E,YAAY,QAAShH,I,4BAHL,cADpB,EAAAvH,QAAQ,QACIqH,GAAb,CAHA,OAG8BoH,eAmB9B,SAAgBlH,EAAqB5H,GAGjC,IAFA,IAAMM,EAAS,GAEC,QAAAtB,SAASgB,GAAT,eAAgB,CAA3B,IAAMd,EAAC,KACR,OAAOA,EAAE6B,WACL,IAAK,KACDT,EAAOsT,UAAY,EAAAxU,KAAKF,EAAG,OAC3B,MAEJ,IAAK,aACDoB,EAAOuT,QAAU,EAAAzU,KAAKF,EAAG,OACzB,MAEJ,IAAK,UACDoB,EAAOwT,UAAYC,EAAe7U,IAK9C,OAAOoB,EAYX,SAAgByT,EAAe/T,EAAesB,GAI1C,YAJ0C,IAAAA,MAAiB,WAE5CA,EAAI6C,QAAQnE,EAAM,OAE1B,CACHgU,YAAa1S,EAAIkB,SAASxC,EAAM,eAChCiU,SAAU3S,EAAIkB,SAASxC,EAAM,YAC7BkU,WAAY5S,EAAIkB,SAASxC,EAAM,cAC/BmU,QAAS7S,EAAIkB,SAASxC,EAAM,WAC5BoU,QAAS9S,EAAIkB,SAASxC,EAAM,WAC5BqU,QAAS/S,EAAIkB,SAASxC,EAAM,YAIpC,SAAgB2T,EAAkB3T,EAAesB,GAC7C,YAD6C,IAAAA,MAAiB,WACvDA,EAAItC,SAASgB,EAAM,WAAWf,KAAI,SAAAC,GAAK,OAC1C6T,MAAOzR,EAAI6L,WAAWjO,EAAG,SAlEpB,EAAAwI,WAmBb,yBA+BA,mBAcA,uB,uICtEA,SACA,SAGA,2B,+CAGA,OAH6B,iBAEzB,cADC,EAAA4M,Y,2BADe,cADnB,EAAAjU,QAAQ,MACIqQ,GAAb,CAA6B,EAAA3D,aAAhB,EAAA2D,UAMb,+B,+CAKA,OAL+B,iBAE3B,cADC,EAAA7D,cAAc,S,2BAGf,cADC,EAAAA,cAAc,S,2BAHG,cADrB,EAAAxM,QAAQ,QACIsQ,GAAb,CAA+B,EAAA5D,aAAlB,EAAA4D,YAQb,+B,+CACA,OAD4B,iBAAT,cADlB,EAAAtQ,QAAQ,QACIuQ,GAAb,CAA4B,EAAA7D,aAAf,EAAA6D,SAIb,+B,+CAGA,OAHwC,iBAEpC,cADC,EAAA0D,Y,2BAD0B,cAD9B,EAAAjU,QAAQ,cACIwQ,GAAb,CAAwC,EAAA9D,aAA3B,EAAA8D,sB,4GCtBb,SACA,SACA,SAiBa,EAAA0D,SAAW,CACpBnW,oBAAoB,EACpBM,YAAY,EACZ8V,cAAc,EACd3U,aAAa,EACb4U,aAAa,EACbC,YAAY,EACZC,6BAA6B,EAC7B7U,OAAO,EACP8U,cAAc,EACdlS,UAAW,OACXmS,WAAW,GAGf,uBAA4BC,EAAkBC,EAA4BC,EAAoCC,QAApC,IAAAD,MAAA,WAAoC,IAAAC,MAAA,MAC1G,IAAIzG,EAAS,IAAI,EAAAhE,eACb0K,EAAW,IAAI,EAAAC,aAAaC,OAAOC,UAEnCnZ,EAAO,yBACJ,EAAAqY,UACAU,GAMP,OAHApP,OAAOC,OAAO0I,EAAQtS,GACtB2J,OAAOC,OAAOoP,EAAUhZ,GAEjB,EAAAoZ,aAAavY,KAAK+X,EAAMtG,EAAQtS,GAASiB,MAAK,SAAAoY,GAEjD,OADAL,EAASM,OAAOD,EAAKR,EAAeC,EAAgB9Y,GAC7CqZ,O,mGC/Cf,SACA,SAEA,2B,+CAMA,OANmC,iBAG/B,YAAA3W,SAAA,SAASpD,GACLe,KAAK0U,MAAQ,EAAAwE,WAAWja,EAAMe,KAAK8B,SAASlC,YAEpD,EANA,CAAmC,EAAA2C,MAAtB,EAAA4W,iB,YCWb,SAAgBhM,EAAU1J,EAAe7D,GAKrC,IAJA,IAAImE,EAA0B,CAC1BsB,KAAMzF,EAAUiD,KAAKY,EAAM,SAGhB,MAAA7D,EAAU6C,SAASgB,GAAnB,eAA0B,CAApC,IAAImM,EAAE,KACP,OAAQA,EAAGpL,WACP,IAAK,SACDT,EAAOqV,OAASxZ,EAAUiD,KAAK+M,EAAI,OACnC,MAEJ,IAAK,UACD7L,EAAOsV,QAAUzZ,EAAUiD,KAAK+M,EAAI,OACpC,MAEJ,IAAK,eACD7L,EAAOuV,QAAU1Z,EAAUiD,KAAK+M,EAAI,WACpC7L,EAAOwV,MAAQ3Z,EAAUiD,KAAK+M,EAAI,OAK9C,OAAO7L,E,iFA1BX,sBAA2B9E,EAAeW,GACtC,OAAOA,EAAU6C,SAASxD,GAAMyD,KAAI,SAAAkN,GAAM,OAAAzC,EAAUyC,EAAIhQ,OAG5D,e,gGCTA,cAKI,WAAYoS,EAAqBjS,EAAckS,GAA/C,MACI,YAAMD,EAAKjS,IAAK,K,OAChB,EAAKmS,gBAAkBD,E,EAM/B,OAbgC,iBAU5B,YAAA5P,SAAA,SAASpD,GACLe,KAAKwZ,cAAgBxZ,KAAKkS,gBAAgB9N,YAAYnF,IAE9D,EAbA,CAJA,OAIgCsD,MAAnB,EAAAkX,c,+FCLb,SACA,SAGA,2B,+CACA,OAD+B,iBAAT,cADrB,EAAA3V,QAAQ,QACIO,GAAb,CAA+B,EAAAkO,eAAlB,EAAAlO,a,gGCCb,cAKI,WAAY2N,EAAqBjS,EAAckS,GAA/C,MACI,YAAMD,EAAKjS,IAAK,K,OAChB,EAAKmS,gBAAkBD,E,EAM/B,OAbgC,iBAU5B,YAAA5P,SAAA,SAASpD,GACLe,KAAK0Z,cAAgB1Z,KAAKkS,gBAAgB5N,YAAYrF,IAE9D,EAbA,CAJA,OAIgCsD,MAAnB,EAAAoX,c,+FCLb,SACA,SAGA,2B,+CACA,OAD+B,iBAAT,cADrB,EAAA7V,QAAQ,QACIS,GAAb,CAA+B,EAAAgO,eAAlB,EAAAhO,a,0GCAb,SACA,SACA,SAGA,SACA,SAIA,SACA,SACA,SACA,QACA,SACA,SACA,SAGA,SACA,SAKW,EAAAvB,MAAQ,CACfC,IAAK,QACLC,MAAO,QACPC,UAAW,eAGf,iBAYI,WAAoByW,GAAA,KAAAA,eAVpB,KAAAtB,WAAqB,EACrB,KAAAnS,UAAoB,OAKpB,KAAAhE,YAAsB,EACtB,KAAA0X,eAAyB,EACzB,KAAAC,eAAyB,EA69B7B,OAx9BI,YAAAb,OAAA,SAAOH,EAAwBN,EAA4BC,EAAoC9Y,QAApC,IAAA8Y,MAAA,MACvDzY,KAAK8Y,SAAWA,EAChB9Y,KAAKL,QAAUA,EACfK,KAAK+Z,YAAc,KAInBC,EAFAvB,EAAiBA,GAAkBD,GAGnCwB,EAAkBxB,GAElByB,EAAcxB,EAAgB,oCAC9BA,EAAeyB,YAAYla,KAAKma,sBAEL,MAAvBrB,EAASsB,aACTpa,KAAK+Z,YAAc/Z,KAAKqa,iBAAiBvB,EAASsB,WAAWE,WAC7Dta,KAAKua,SAAWva,KAAKwa,cAAc1B,EAASsB,WAAW7U,QAEvD0U,EAAcxB,EAAgB,wBAC9BA,EAAeyB,YAAYla,KAAKya,aAAa3B,EAASsB,WAAWE,aAGjExB,EAAS4B,gBACTT,EAAcxB,EAAgB,kCAC9BA,EAAeyB,YAAYla,KAAK2a,gBAAgB7B,EAAS4B,cAAcE,cAAenC,MAItF9Y,EAAQuY,aAAeY,EAAS+B,eAChC7a,KAAK8a,gBAAgBhC,EAAS+B,cAAepC,GAEjD,IAAIsC,EAAkB/a,KAAKgb,eAAelC,EAASmC,aAAa9I,gBAAgBlO,MAEhF,GAAIjE,KAAKsY,UAAW,CAChB,IAAI4C,EAAUlb,KAAKmb,gBACnBC,EAAeF,EAASH,GACxBvC,EAAc0B,YAAYgB,QAG1BE,EAAe5C,EAAeuC,IAItC,YAAAD,gBAAA,SAAgBO,EAA0B5C,GACtC,I,eAAQ6C,GACJ,EAAKxC,SAASyC,SAASD,EAAE/B,MAAO+B,EAAEhC,SAAS1Y,MAAK,SAAA4a,GAC5C,IAAIC,EAAU,mDACMH,EAAEjW,KAAI,oCACXmW,EAAQ,wBAGvBvB,EAAcxB,EAAgB,QAAQ6C,EAAEjW,MACxCoT,EAAeyB,YAAYwB,EAAmBD,Q,OARzC,MAAAJ,EAAU3G,MAAMxM,QAAO,SAAAd,GAAK,OAAAA,EAAEmS,SAA9B,e,EAAJ,OAab,YAAAoC,iBAAA,SAAiBxV,GACb,OAAKA,EAGKnG,KAAKmG,UAAS,IAAIA,EAFjBnG,KAAKmG,WAKpB,YAAAqU,cAAA,SAAcjV,GAGV,IAFA,IAAMgV,EAAW,EAAAqB,MAAMrW,GAAQ,SAAAmB,GAAK,OAAAA,EAAE9D,MAErB,MAAA2C,EAAO2C,QAAO,SAAAxB,GAAK,OAAAA,EAAEpB,WAArB,eAA+B,CAA5C,IAAIwC,EAAK,KACH+T,EAAYtB,EAASzS,EAAMxC,SAE9BuW,GACC/T,EAAMjC,eAAiB,EAAAiW,UAAUhU,EAAMjC,eAAgBgW,EAAUhW,gBACjEiC,EAAMvB,SAAW,EAAAuV,UAAUhU,EAAMvB,SAAUsV,EAAUtV,WAC9CvG,KAAKL,QAAQ4D,OACpBoD,QAAQC,KAAK,yBAAyBkB,EAAMxC,SAIpD,OAAOiV,GAGX,YAAAF,iBAAA,SAAiB9U,GAGb,IAFA,IAAIwW,EAA0C,GAE5B,MAAAxW,EAAO2C,QAAO,SAAAd,GAAK,OAAQ,MAARA,EAAExE,MAArB,eACdmZ,GADKjU,EAAK,MACSlF,IAAMkF,EAG7B,IAAkB,UAAAvC,EAAO2C,QAAO,SAAAd,GAAK,OAAAA,EAAE9B,WAArB,eAA+B,CAA5C,IACGuW,EAAYE,GADXjU,EAAK,MACyBxC,SAEnC,GAAIuW,EACA,I,IACQG,E,WADCC,IACDD,EAAaH,EAAUtW,OAAO2C,QAAO,SAAAd,GAAK,OAAAA,EAAEtE,QAAUmZ,EAAYnZ,YAEpDkZ,EAAW3N,OAAS,GAClC,EAAK6N,oBAAoBF,EAAW,GAAGtW,OAAQuW,EAAYvW,S,OAJ3C,MAAAoC,EAAMvC,OAAN,e,EAAJ,WAOfvF,KAAKL,QAAQ4D,OAClBoD,QAAQC,KAAK,yBAAyBkB,EAAMxC,SAGpD,IAAkB,UAAAC,EAAA,eAAQ,CAArB,IAAIuC,KAAK,MACJqU,QAAUnc,KAAK2b,iBAAiB3b,KAAKoc,gBAAgBtU,EAAMlF,KAGrE,OAAOmZ,GAGX,YAAAM,eAAA,SAAevY,GACX,GAAI,aAAcA,EACd,IAAc,UAACA,EAA0BW,SAA3B,eAAqC,CAA9C,IAAI9B,EAAC,KACNA,EAAEwD,UAAYnG,KAAK2b,iBAAiBhZ,EAAEwD,WACtCxD,EAAEqG,OAASlF,EAEPnB,aAAa,EAAAwI,SACbnL,KAAKsc,aAAa3Z,GAGlB3C,KAAKqc,eAAe1Z,KAMpC,YAAA2Z,aAAA,SAAahR,GACT,IAAc,UAAAA,EAAM7G,SAAN,eACV,IADC,IACa,MADR,KAC6BA,SAArB,eAA+B,CAAxC,IAAIe,EAAC,KACNA,EAAEiD,SAAWzI,KAAKkc,oBAAoB5Q,EAAMC,UAAW/F,EAAEiD,SAAU,CAC/D,cAAe,eAAgB,aAAc,gBAC7C,eAAgB,gBAAiB,cAAe,mBAGpDzI,KAAKqc,eAAe7W,KAKhC,YAAA0W,oBAAA,SAAoBzb,EAA+BiD,EAAgC6Y,GAC/E,QAD+E,IAAAA,MAAA,OAC1E9b,EACD,OAAOiD,EAEG,MAAVA,IAAgBA,EAAS,IAChB,MAAT6Y,IAAeA,EAAQjT,OAAOkT,oBAAoB/b,IAEtD,IAAgB,UAAA8b,EAAA,eAAO,CAAlB,IAAIE,EAAG,KACJhc,EAAMic,eAAeD,KAAS/Y,EAAOgZ,eAAeD,KACpD/Y,EAAO+Y,GAAOhc,EAAMgc,IAG5B,OAAO/Y,GAGH,YAAAiZ,cAAR,SAAsBC,EAASjU,GAC3B,YAD2B,IAAAA,WAAA,GACpBW,OAAOC,OAAOvJ,KAAK4Z,aAAa+C,cAAcC,GAAUjU,IAG3D,YAAAkU,gBAAR,SAAwBpZ,EAAqBmZ,GACzC,IAAM7Y,EAAS/D,KAAK2c,cAAcC,GAElC,OADA5c,KAAK8c,eAAerZ,EAAKgB,SAAUhB,EAAMM,GAClCA,GAGX,YAAAgZ,cAAA,SAAc5W,EAAmBwC,GAC7B,IAAIlF,EAAOzD,KAAK2c,cAAc,UAAW,CAAExW,UAAS,IA2BpD,OAzBIwC,IACIA,EAAMmO,cACNrT,EAAKqE,MAAMkV,YAAchd,KAAKid,aAAatU,EAAMmO,YAAYjJ,MAC7DpK,EAAKqE,MAAMoV,aAAeld,KAAKid,aAAatU,EAAMmO,YAAY/I,OAC9DtK,EAAKqE,MAAMqV,WAAand,KAAKid,aAAatU,EAAMmO,YAAY7F,KAC5DxN,EAAKqE,MAAMsV,cAAgBpd,KAAKid,aAAatU,EAAMmO,YAAY5F,SAG/DvI,EAAMgO,WACD3W,KAAKL,QAAQ2D,cACdG,EAAKqE,MAAM0O,MAAQxW,KAAKid,aAAatU,EAAMgO,SAASH,QACnDxW,KAAKL,QAAQsY,eACdxU,EAAKqE,MAAMuV,UAAYrd,KAAKid,aAAatU,EAAMgO,SAASC,UAG5DjO,EAAM4N,SAAW5N,EAAM4N,QAAQJ,kBAC/B1S,EAAKqE,MAAMwV,YAAc,GAAG3U,EAAM4N,QAAQJ,gBAC1C1S,EAAKqE,MAAMyV,UAAYvd,KAAKid,aAAatU,EAAM4N,QAAQH,OAEnDzN,EAAM4N,QAAQF,YACd5S,EAAKqE,MAAM0V,WAAa,qBAK7B/Z,GAGX,YAAAuX,eAAA,SAAelC,GACX,IAAM/U,EAAS,GAEf/D,KAAKqc,eAAevD,GAEpB,IAAmB,UAAA9Y,KAAKyd,eAAe3E,EAASrU,UAA7B,eAAwC,CAAvD,IAAIiS,EAAO,KACLrD,EAAeqD,EAAQgH,WAAa5E,EAASzF,aAC/CsK,EAAiB3d,KAAK+c,cAAc/c,KAAKmG,UAAWkN,GAOxDrT,KAAK8c,eAAepG,EAAQjU,SAAUqW,EAAU6E,GAYhD5Z,EAAOW,KAAKiZ,GAGhB,OAAO5Z,GAGX,YAAA6Z,mBAAA,SAAmBna,GACf,OAAIA,aAAgB,EAAA2N,0BACRpR,KAAKL,QAAQyY,4BAElB3U,aAAgB,EAAA0N,UAA0B,SAAd1N,EAAKzC,MAG5C,YAAAyc,eAAA,SAAehb,GAIX,IAJJ,I,EAAA,OACQob,EAAU,CAAEH,UAAW,KAAMjb,SAAU,IACvCsB,EAAS,CAAC8Z,GAEE,MAAApb,EAAA,eAAU,CAAtB,IAAIgB,EAAI,KACR,GAAIA,aAAgB,EAAA4E,aAAc,CAC9B,IAAMmM,EAAY/Q,EAAKkF,MAAMqL,QACvBtN,EAAI1G,KAAKua,UAAY/F,EAAYxU,KAAKua,SAAS/F,GAAa,MAE9C,QAAjB,EAAA9N,aAAC,EAADA,EAAGb,sBAAc,eAAEiO,mBAClB+J,EAAQH,UAAYA,EACpBG,EAAU,CAAEH,UAAW,KAAMjb,SAAU,IACvCsB,EAAOW,KAAKmZ,IAMpB,GAFAA,EAAQpb,SAASiC,KAAKjB,GAEnBA,aAAgB,EAAA4E,aACnB,CACI,IAAMyV,EAAIra,EAENia,EAAYI,EAAEnV,MAAM0K,aACpB0K,GAAe,EACfC,GAAe,EAenB,GAbGhe,KAAKL,QAAQwY,YAAc2F,EAAErZ,SAAS4J,OAAS,IAC9C0P,EAAcD,EAAErZ,SAASwZ,WAAU,SAACC,G,QAEhC,OAAuB,IADvBF,EAAuE,QAAzD,EAAU,QAAV,EAAAE,EAAEzZ,gBAAQ,eAAEwZ,UAAU,EAAKL,mBAAmBO,KAAK,WAAM,SAAK,QAKjFT,IAA6B,GAAhBK,KACZF,EAAQH,UAAYA,EACpBG,EAAU,CAAEH,UAAW,KAAMjb,SAAU,IACvCsB,EAAOW,KAAKmZ,KAGG,GAAhBE,EAAmB,CAClB,IAAIK,EAAWN,EAAErZ,SAASsZ,GACtBM,EAAWL,EAAcI,EAAS3Z,SAAS4J,OAAS,EAExD,GAAG0P,EAAcD,EAAErZ,SAAS4J,OAAS,GAAKgQ,EAAU,CAChD,IAAI5Z,EAAWhB,EAAKgB,SAChB6Z,EAAehV,OAAOC,OAAO,IAAI,EAAAlB,aAAgB5E,EAAM,CAAEgB,SAAUA,EAAS8Z,MAAMR,KAItF,GAHAta,EAAKgB,SAAWA,EAAS8Z,MAAM,EAAGR,GAClCF,EAAQpb,SAASiC,KAAK4Z,GAEnBD,EAAU,CACT,IAAIG,EAAcJ,EAAS3Z,SACvBga,EAAUnV,OAAOC,OAAO,IAAI,EAAAL,OAAUkV,EAAU,CAAE3Z,SAAU+Z,EAAYD,MAAM,EAAGP,KACrFva,EAAKgB,SAASC,KAAK+Z,GACnBL,EAAS3Z,SAAW+Z,EAAYD,MAAMP,OAS1D,IAFA,IAAIU,EAAmB,KAEdvQ,EAAIpK,EAAOsK,OAAS,EAAGF,GAAK,EAAGA,IACT,MAAvBpK,EAAOoK,GAAGuP,UACV3Z,EAAOoK,GAAGuP,UAAYgB,EAEtBA,EAAmB3a,EAAOoK,GAAGuP,UAIrC,OAAO3Z,GAGX,YAAAkZ,aAAA,SAAa0B,G,MACT,OAAOA,EAAI,GAAGA,EAAEhP,MAAMV,QAAQ,IAAW,QAAN,EAAA0P,EAAE3d,YAAI,QAAI,IAAO,MAGxD,YAAA4d,YAAA,SAAYpZ,EAAWkJ,GACnB,YADmB,IAAAA,MAAA,SACf,eAAemQ,KAAKrZ,GACb,IAAIA,EAEF,SAANA,EAAekJ,EAAYlJ,GAGtC,YAAA2V,cAAA,WACI,IAAID,EAAUpC,SAAS6D,cAAc,OAIrC,OAFAzB,EAAQ/U,UAAenG,KAAKmG,UAAS,WAE9B+U,GAGX,YAAAf,mBAAA,WACI,IAAI3U,EAAIxF,KAAKmG,UAWb,OAAOuV,EAVS,MACrBlW,EAAC,gIACDA,EAAC,oBAAoBA,EAAC,2FACtBA,EAAC,+BACMA,EAAC,kCACRA,EAAC,2CACDA,EAAC,eAAeA,EAAC,wCACjBA,EAAC,0BAuEA,YAAAmV,gBAAA,SAAgBpV,EAAyBkT,GAIrC,IAJJ,IAKY5R,EACAiY,EANZ,OACQC,EAAY,GACZC,EAAe,G,aAMf,GAHInY,EAAW,KAAK,EAAKoY,eAAeC,EAAItc,GAAIsc,EAAIlX,OAChD8W,EAAgB,QAEhBI,EAAI/W,WAA4B,WAAd+W,EAAI9W,QAAqC,eAAd8W,EAAI9W,QAAyC,cAAd8W,EAAI9W,OAiB/E,GAAI8W,EAAIjX,OAAQ,CACjB,IAAI,GAAW,KAAK,EAAK9B,UAAS,IAAI+Y,EAAIjX,OAAOJ,KAAMsX,cAEvDJ,GAAa,EAAKK,cAAiBvY,EAAQ,UAAW,CAClD,QAAW,MACX,QAAW,eACX,WAAc,OAAO,EAAQ,KAC9BqY,EAAIjX,OAAOH,OAEd,EAAKgR,SAASuG,mBAAmBH,EAAIjX,OAAOJ,KAAKjH,MAAK,SAAA2X,GAClD,IAAItW,EAAO,IAAI,EAAKkE,UAAS,cAAc,EAAQ,SAASoS,EAAI,MAChEE,EAAeyB,YAAYwB,EAAmBzZ,YAIlD6c,EAAgB,EAAKQ,oBAAoBJ,EAAI9W,YAhC4D,CACzG,IAAImX,EAAU,EAAKC,iBAAiBN,EAAItc,GAAIsc,EAAIlX,OAE5CkX,EAAIlX,MAAQ,EACZ+W,GAAa,EAAKK,cAAc,KAAK,EAAKH,eAAeC,EAAItc,GAAIsc,EAAIlX,MAAQ,GAAM,CAC/E,gBAAiBuX,IAIrBP,EAAata,KAAK6a,GAGtBR,GAAa,EAAKK,cAAiBvY,EAAQ,UAAW,CAClD,QAAW,EAAK4Y,mBAAmBP,EAAI/W,UAAW+W,EAAItc,GAAI,EAAK0c,oBAAoBJ,EAAI9W,SACvF,oBAAqBmX,IAqB7BR,GAAa,EAAKK,cAAcvY,EAAU,EAAF,UACpC,QAAW,YACX,sBAAuB,SACvB,kBAAmBiY,GAChBI,EAAIpX,S,OA3CC,MAAAvC,EAAA,eAAQ,CAAnB,IAAI2Z,EAAG,K,IAqDZ,OANIF,EAAa3Q,OAAS,IACtB0Q,GAAa/e,KAAKof,cAAc,IAAIpf,KAAKmG,UAAS,WAAY,CAC1D,gBAAiB6Y,EAAaU,KAAK,QAIpChE,EAAmBqD,IAG9B,YAAAtE,aAAA,SAAalV,GAIT,IAHA,IAAIwZ,EAAY,GACZY,EAAY3f,KAAK+Z,YAEH,MAAAxU,EAAA,eAAQ,CAArB,IAAIuC,EAAK,KACN8X,EAAa9X,EAAMvC,OAEvB,GAAGuC,EAAM5B,OAAQ,CACb,IAAI2Z,EAAc/X,EAAM5B,QAAUyZ,EAAU7X,EAAM5B,QAE9C2Z,EACAD,EAAYA,EAAUE,OAAOD,EAAYta,QACrCvF,KAAKL,QAAQ4D,OACjBoD,QAAQC,KAAK,2BAA2BkB,EAAM5B,QAGtD,IAAqB,UAAA0Z,EAAA,eAAW,CAA3B,IAAIG,EAAQ,KACTlZ,EAAW,GAEXiB,EAAMhF,QAAUid,EAASjd,OACzB+D,GAAeiB,EAAMhF,OAAM,IAAIgF,EAAMqU,QAChCrU,EAAMhF,OACX+D,GAAeiB,EAAMhF,OAAM,IAAIgF,EAAMqU,QAAO,IAAI4D,EAASjd,OAEzD+D,GAAY,IAAIiB,EAAMqU,QAAO,IAAI4D,EAASjd,OAE1CgF,EAAM9B,WAAa8B,EAAMhF,SACzB+D,EAAW,IAAI7G,KAAKmG,UAAS,IAAI2B,EAAMhF,OAAM,KAAO+D,GAEpDiB,EAAMjC,gBAAqC,KAAnBka,EAASjd,QACjC9C,KAAKggB,0BAA0BD,EAASra,OAAQoC,EAAMjC,gBAG1DkZ,GAAa/e,KAAKof,cAAcvY,EAAUkZ,EAASra,SAI3D,OAAOgW,EAAmBqD,IAG9B,YAAAkB,cAAA,SAAcxc,EAAmBuF,GAC7B,OAAIvF,aAAgB,EAAA4E,aACTrI,KAAKkgB,gBAAgBzc,GACrBA,aAAgB,EAAA8M,iBAChBvQ,KAAKmgB,oBAAoB1c,GACzBA,aAAgB,EAAAyF,OAChBlJ,KAAKogB,UAAU3c,GACfA,aAAgB,EAAA0Q,QAChBnU,KAAKqgB,WAAW5c,GAChBA,aAAgB,EAAA2Q,UAChBpU,KAAKsgB,aAAa7c,GAClBA,aAAgB,EAAA4Q,OAChBrU,KAAKugB,UAAU9c,GACfA,aAAgB,EAAA0H,SAChBnL,KAAKwgB,YAAY/c,GACjBA,aAAgB,EAAAsI,YAChB/L,KAAKygB,eAAehd,GACpBA,aAAgB,EAAA0I,aAChBnM,KAAK0gB,gBAAgBjd,GACrBA,aAAgB,EAAAwF,aAChBjJ,KAAK2gB,gBAAgBld,GACrBA,aAAgB,EAAAgG,WAChBzJ,KAAK4gB,cAAcnd,GACnBA,aAAgB,EAAAoH,WAChB7K,KAAK6gB,YAAYpd,GACjBA,aAAgB,EAAAc,UAChBvE,KAAK8gB,aAAard,GAClBA,aAAgB,EAAAY,UAChBrE,KAAK+gB,aAAatd,GAGtB,MAGX,YAAAud,eAAA,SAAevd,EAAqBwd,GAChC,OAAOjhB,KAAK8c,eAAerZ,EAAKgB,SAAUhB,EAAMwd,IAGpD,YAAAnE,eAAA,SAAeoE,EAAsBlY,EAAqBiY,GAA1D,WACI,GAAY,MAATC,EACC,OAAO,KAEX,IAAInd,EAASmd,EAAMxe,KAAI,SAAAC,GACnB,IAAIsC,EAAI,EAAKgb,cAActd,EAAGqG,GAK9B,OAHG/D,GAAK,EAAK9C,aACR8C,EAAUkc,cAAgBxe,GAExBsC,KACRiD,QAAO,SAAAvF,GAAK,OAAK,MAALA,KAEf,GAAGse,EACC,IAAa,UAAAld,EAAA,eAAM,CAAf,IAAIyB,EAAC,KACLyb,EAAK/G,YAAY1U,GAEzB,OAAOzB,GAGX,YAAAmc,gBAAA,SAAgBzc,G,YACRM,EAAS/D,KAAK6c,gBAAgBpZ,EAAM,KAExCzD,KAAKohB,YAAY3d,EAAMM,GACvB/D,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GACtC/D,KAAKggB,0BAA0Bjc,EAAO+D,MAAOrE,EAAKkF,OAElD,IAAMb,EAAQrE,EAAKkF,MAAMqL,UAAwB,QAAb,EAAAhU,KAAKua,gBAAQ,eAAG9W,EAAKkF,MAAMqL,UACzDV,EAAgC,QAApB,EAAA7P,EAAKkF,MAAM2K,iBAAS,QAAyB,QAArB,EAAAxL,aAAK,EAALA,EAAOjC,sBAAc,eAAEyN,UAEjE,GAAIA,EAAW,CACX,IAAI2L,EAAiBjf,KAAKif,eAAe3L,EAAU1Q,GAAmB,QAAf,EAAA0Q,EAAUtL,aAAK,QAAI,GAC1EjE,EAAOoC,UAAY,EAAAmb,YAAYvd,EAAOoC,UAAW8Y,GAGrD,GAAIxb,EAAKkF,MAAMqL,QAAS,CACpB,IAAIuN,EAAiBvhB,KAAK2b,iBAAiB3b,KAAKoc,gBAAgB3Y,EAAKkF,MAAMqL,UAC3EjQ,EAAOoC,UAAY,EAAAmb,YAAYvd,EAAOoC,UAAWob,GAGrD,OAAOxd,GAGX,YAAAic,0BAAA,SAA0BlY,EAAYa,GAClC,IAAK,IAAMmV,KAAKnV,EAAO,CACnB,IAAMgG,EAAIhG,EAAMmV,GAEhB,OAAOA,GACH,IAAK,cACD9d,KAAKwhB,kBAAkB1Z,EAAO6G,GAC9B,MAEJ,IAAK,gBACD3O,KAAKyhB,mBAAmB3Z,EAAO6G,MAM/C,YAAA8S,mBAAA,SAAmB3Z,EAAY6G,GAC3B,IAAM+S,EAAY,CACd,KAAQ,WACR,SAAY,WACZ,IAAO,MACP,OAAU,SACV,OAAU,UAGX/S,KAAK+S,IACJ5Z,EAAM,kBAAoB4Z,EAAU/S,KAG5C,YAAA6S,kBAAA,SAAkB1Z,EAAYgN,GAS1B,OARIA,EAAQ9B,QACRlL,EAAM,iBAAmB9H,KAAKid,aAAanI,EAAQ9B,QAGnD8B,EAAQ/B,SACRjL,EAAM,cAAgB9H,KAAKid,aAAanI,EAAQ/B,SAG7C+B,EAAQhC,UACX,IAAK,UACDhL,EAAM,eAAiB,eAAe9H,KAAKid,aAAanI,EAAQ7B,MAAK,IACrE,MACJ,IAAK,OACDnL,EAAM,eAAiB9H,KAAKid,aAAanI,EAAQ7B,MACjD,MACJ,IAAK,UAEDnL,EAAM,eAAiBA,EAAM,cAAgB9H,KAAKid,aAAanI,EAAQ7B,QAKnF,YAAA0O,oBAAA,SAAoB7Z,EAAYa,GAC5B,IAAK,IAAMmV,KAAKnV,EAAO,CACnB,IAAMgG,EAAIhG,EAAMmV,GAEhB,OAAQA,GACJ,IAAK,YACDhW,EAAkB,WAAI9H,KAAK4e,YAAYjQ,GACvC,MAEJ,IAAK,UACD7G,EAAkB,WAAI9H,KAAK4hB,cAAcjT,GACzC,MAEJ,IAAK,SACD7G,EAAc,OAAI9H,KAAK6hB,aAAalT,GACpC,MAEJ,IAAK,QACD7G,EAAa,MAAI9H,KAAK4e,YAAYjQ,GAClC,MAEJ,IAAK,WACD7G,EAAM,aAAe9H,KAAKid,aAAatO,GACvC,MAEJ,IAAK,OACD7G,EAAM,eAAiB6G,EAAI,OAAS,SACpC,MAEJ,IAAK,UACD7G,EAAM,cAAgB6G,EAAI,SAAW,SACrC,MAEJ,IAAK,YACD7G,EAAM,aAAe6G,EAAI,UAAY,OACzC,IAAK,OACD7G,EAAM,kBAAoB6G,EAAI,YAAc,OAC5C,MAEJ,IAAK,SACD7G,EAAM,mBAAqB6G,EAAI,eAAiB,OAChD,MAEJ,IAAK,QACD7G,EAAM,eAAiB9H,KAAK8hB,eAAenT,GAC3C,MAEJ,IAAK,YACD3O,KAAK+hB,gBAAgBja,EAAO6G,GAC5B,MAEJ,IAAK,oBACD3O,KAAKgiB,2BAA2Bla,EAAO6G,MAMvD,YAAAqT,2BAAA,SAA2Bla,EAAYiC,GACnC,OAAOA,GACH,IAAK,YACDjC,EAAM,kBAAoB,MAC1BA,EAAM,aAAe,QACrB,MAEJ,IAAK,cACDA,EAAM,kBAAoB,QAC1BA,EAAM,aAAe,UAKjC,YAAAga,eAAA,SAAepN,GACX,MAAO,CAACA,EAAM/G,MAAO+G,EAAMkB,OAAQlB,EAAMmB,GAAInB,EAAMoB,UAAU5N,QAAO,SAAAd,GAAK,OAAAA,KAAG1E,KAAI,SAAA0E,GAAK,UAAIA,EAAC,OAAKsY,KAAK,MAGxG,YAAAmC,aAAA,SAAapN,GACT,MAAmB,OAAfA,EAAOzT,KACA,OAEDhB,KAAKid,aAAaxI,EAAO9D,MAAK,UAAU3Q,KAAK4e,YAAYnK,EAAOvR,QAG9E,YAAA0e,cAAA,SAAchN,GACV,OAAIA,EAAQ5T,KACDhB,KAAK4e,YAAYhK,EAAQoB,WAAY,EAAAhT,MAAMC,MAK1D,YAAA8e,gBAAA,SAAgBja,EAAYwN,GACxB,GAAsB,MAAlBA,EAAUtU,MAAkC,QAAlBsU,EAAUtU,KAAxC,CAGA,OAAQsU,EAAUtU,MACd,IAAK,OACL,IAAK,kBACL,IAAK,eACL,IAAK,cACL,IAAK,WACL,IAAK,gBACL,IAAK,UACL,IAAK,aACD8G,EAAM,yBAA2B,SACjC,MAEJ,IAAK,SACL,IAAK,cACDA,EAAM,yBAA2B,SACjC,MAEJ,IAAK,SACDA,EAAM,yBAA2B,SACjC,MAEJ,IAAK,SACL,IAAK,QACDA,EAAM,mBAAqB,YAC3B,MAEJ,IAAK,OACL,IAAK,aACL,IAAK,YACDA,EAAM,yBAA2B,OACjC,MAEJ,IAAK,QACDA,EAAM,mBAAqB,YAI/BwN,EAAUpS,QACV4E,EAAM,yBAA2B9H,KAAK4e,YAAYtJ,EAAUpS,UAGpE,YAAAyd,gBAAA,SAAgBld,GACZ,IAAIM,EAAS/D,KAAK2c,cAAc,KAQhC,OANA3c,KAAKghB,eAAevd,EAAMM,GAC1B/D,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GAElCN,EAAKmP,SACL7O,EAAOke,KAAOxe,EAAKmP,QAEhB7O,GAGX,YAAA6c,cAAA,SAAcnd,GACV,IAAIM,EAAS/D,KAAK2c,cAAc,OAShC,OAPA5Y,EAAO+D,MAAMoa,QAAU,eACvBne,EAAO+D,MAAMmM,SAAW,WACxBlQ,EAAO+D,MAAMqa,WAAa,MAE1BniB,KAAKghB,eAAevd,EAAMM,GAC1B/D,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GAE/BA,GAGX,YAAA8c,YAAA,SAAYpd,GACR,IAAIM,EAAS/D,KAAK2c,cAAc,OAUhC,OARA3c,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GAElC/D,KAAK8Y,UACL9Y,KAAK8Y,SAASsJ,kBAAkB3e,EAAKuH,YAAYpK,MAAK,SAAAwG,GAClDrD,EAAO8D,IAAMT,KAIdrD,GAGX,YAAA+c,aAAA,SAAard,GACT,OAAOzD,KAAK6c,gBAAgBpZ,EAAM,WAGtC,YAAAsd,aAAA,SAAatd,GACT,OAAOzD,KAAK6c,gBAAgBpZ,EAAM,WAGtC,YAAA4c,WAAA,SAAW5c,GACP,OAAOzD,KAAK4Z,aAAayI,eAAe5e,EAAKxB,OAGjD,YAAAqe,aAAA,SAAa7c,GACT,IAAI6I,EAAOtM,KAAK2c,cAAc,QAG9B,OAFArQ,EAAKxE,MAAMwa,WAAa7e,EAAK8e,KAC7BjW,EAAKkW,UAAY,MAAM/e,EAAKgf,KAAI,IACzBnW,GAGX,YAAAiU,UAAA,SAAU9c,GACN,IAAIif,EAAU1iB,KAAK2c,cAAc,QAiBjC,OAfA+F,EAAQF,UAAY,SAEjBxiB,KAAKL,QAAQ0Y,cACZsK,YAAW,WACP,IAAIna,EAuKpB,SAA2C/E,EAAmBzC,GAG1D,IAFA,IAAIgI,EAASvF,EAAKuF,OAED,MAAVA,KAAoBA,aAAkBhI,IACzCgI,EAASA,EAAOA,OAEpB,OAAUA,EA7KkB4Z,CAAyBnf,EAAM,EAAA4E,cAEpB,MAAxBG,EAAUG,MAAMwK,OAGnB3K,EAAUG,MAAMwK,KAAK0P,MAAK,SAACvT,EAAGC,GAAM,OAAAD,EAAE2E,SAAStE,MAAQJ,EAAE0E,SAAStE,SAClE+S,EAAQ5a,MAAMoa,QAAU,eACxB,EAAAY,cAAcJ,EAASla,EAAUG,MAAMwK,SACxC,GAGAuP,GAGX,YAAAvC,oBAAA,SAAoB1c,GAChB,IAAIM,EAAS/D,KAAK2c,cAAc,QAEhC,OADA5Y,EAAOnB,GAAKa,EAAK4B,KACVtB,GAGX,YAAAqc,UAAA,SAAU3c,GACN,IAAIM,EAAS/D,KAAK2c,cAAc,QAUhC,OARGlZ,EAAKb,KACJmB,EAAOnB,GAAKa,EAAKb,IAErB5C,KAAKohB,YAAY3d,EAAMM,GACvB/D,KAAKghB,eAAevd,EAAMM,GAE1B/D,KAAK2hB,oBAAoB5d,EAAO+D,MAAOrE,EAAKkF,OAErC5E,GAGX,YAAAyc,YAAA,SAAY/c,G,QACJM,EAAS/D,KAAK2c,cAAc,SAahC,OAXIlZ,EAAK8S,SACLxS,EAAOmW,YAAYla,KAAK+iB,mBAAmBtf,EAAK8S,WAEtC,QAAV,EAAA9S,EAAKkF,aAAK,eAAE2O,UACZvT,EAAOmW,YAAYla,KAAK2c,cAAc,UAAW,CAAEpS,YAAuB,QAAV,EAAA9G,EAAKkF,aAAK,eAAE2O,WAGhFtX,KAAKohB,YAAY3d,EAAMM,GACvB/D,KAAKghB,eAAevd,EAAMM,GAC1B/D,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GAE/BA,GAGX,YAAAgf,mBAAA,SAAmBxM,GAGf,IAFA,IAAMxS,EAAS/D,KAAK2c,cAAc,YAElB,MAAApG,EAAA,eAAS,CAApB,IAAI7I,EAAG,KACJsV,EAAUhjB,KAAK2c,cAAc,OACjCqG,EAAQlb,MAAM0O,MAAQxW,KAAKid,aAAavP,EAAI8I,OAC5CzS,EAAOmW,YAAY8I,GAGvB,OAAOjf,GAGX,YAAA0c,eAAA,SAAehd,GACX,IAAIM,EAAS/D,KAAK2c,cAAc,MAMhC,OAJA3c,KAAKohB,YAAY3d,EAAMM,GACvB/D,KAAKghB,eAAevd,EAAMM,GAC1B/D,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GAE/BA,GAGX,YAAA2c,gBAAA,SAAgBjd,GACZ,IAAIM,EAAS/D,KAAK2c,cAAc,MAQhC,OANA3c,KAAKohB,YAAY3d,EAAMM,GACvB/D,KAAKghB,eAAevd,EAAMM,GAC1B/D,KAAKqhB,kBAAkB5d,EAAKgF,SAAU1E,GAElCN,EAAK6I,OAAMvI,EAAOkf,QAAUxf,EAAK6I,MAE9BvI,GAGX,YAAAsd,kBAAA,SAAkBvZ,EAA+Bob,GAC7C,GAAa,MAATpb,EAGJ,IAAgB,UAAAwB,OAAOkT,oBAAoB1U,GAA3B,eAAmC,CAA9C,IAAI2U,EAAG,KACRyG,EAAMpb,MAAM2U,GAAO3U,EAAM2U,KAIjC,YAAA2E,YAAA,SAAY3gB,EAAoByiB,GACxBziB,EAAM0F,YACN+c,EAAM/c,UAAY1F,EAAM0F,YAGhC,YAAA8Y,eAAA,SAAerc,EAAYugB,GACvB,OAAUnjB,KAAKmG,UAAS,QAAQvD,EAAE,IAAIugB,GAG1C,YAAA/D,cAAA,SAAcgE,EAAmB1d,EAAgC2d,QAAA,IAAAA,MAAA,MAC7D,IAAItf,EAAYqf,EAAS,SAEzB,IAAK,IAAM3G,KAAO/W,EACd3B,GAAU,KAAK0Y,EAAG,KAAK/W,EAAO+W,GAAI,QAMtC,OAHI4G,IACAtf,GAAUsf,GAEPtf,EAAS,SAGpB,YAAAyb,iBAAA,SAAiB5c,EAAYugB,GACzB,OAAUnjB,KAAKmG,UAAS,QAAQvD,EAAE,IAAIugB,GAG1C,YAAA1D,mBAAA,SAAmBxd,EAAcW,EAAY0gB,GAA7C,WAMI,MAAO,IALMrhB,EAAKmN,QAAQ,SAAS,SAAA1I,GAC/B,IAAIyc,EAAMvU,SAASlI,EAAE6c,UAAU,GAAI,IAAM,EACzC,MAAO,YAAY,EAAK/D,iBAAiB5c,EAAIugB,GAAI,KAAKG,EAAS,QAG7C,KAG1B,YAAAhE,oBAAA,SAAoBlX,GAWhB,MAVc,CACV,KAAQ,OACR,OAAU,OACV,QAAW,UACX,YAAe,cACf,YAAe,cACf,WAAc,cACd,WAAc,eAGHA,IAAWA,GAG9B,YAAAgU,gBAAA,SAAgBjW,GACZ,OAAOA,aAAS,EAATA,EAAWiJ,QAAQ,SAAU,KAAKA,QAAQ,QAAS,QAElE,EAv+BA,GAy+BA,SAASgM,EAAeoI,EAAwB/e,GAC5C,IAAc,UAAAA,EAAA,eAAQ,CAAjB,IAAIe,EAAC,KACNge,EAAUtJ,YAAY1U,IAG9B,SAASwU,EAAkBvW,GACvBA,EAAK+e,UAAY,GAGrB,SAAS9G,EAAmB2H,GACxB,IAAII,EAAe3K,SAAS6D,cAAc,SAE1C,OADA8G,EAAajB,UAAYa,EAClBI,EAGX,SAASxJ,EAAcxW,EAAmBigB,GACtCjgB,EAAKyW,YAAYpB,SAAS6K,cAAcD,IAz/B/B,EAAA9K,gB,oFCjCb,yBAA8BnV,EAAmB0P,EAAsByQ,QAAA,IAAAA,MAAuB,KAE1F,IAAI9F,EAAIra,EAAKogB,QAAQ,KAEjBC,EAAMrgB,EAAKsgB,wBACXC,EAAMlG,EAAEiG,wBAERlW,GAAQiW,EAAIjW,KAAOmW,EAAInW,MAAQ+V,EAC/BK,EAAM9Q,EAAK+Q,MAAK,SAAAC,GAAK,MAAW,SAAXA,EAAErc,OAAoBqc,EAAElQ,SAAStE,MAAQ9B,KAElE,GAAU,MAAPoW,EAMH,OAHAxgB,EAAKqE,MAAMoa,QAAU,eACrBze,EAAKqE,MAAM0O,MAAYyN,EAAIhQ,SAAStE,MAAQ9B,EAAK,KAEzCoW,EAAI/P,QACR,IAAK,MACL,IAAK,YACDzQ,EAAKqE,MAAMsc,aAAe,mBAC1B,MAEJ,IAAK,SACL,IAAK,QACL,IAAK,aACD3gB,EAAKqE,MAAMsc,aAAe,qB,mGC1BtC,SAGA,SAEA,cAGI,WAAYpS,EAAqBjS,EAAckS,GAA/C,MACI,YAAMD,EAAKjS,IAAK,K,OAChB,EAAKmS,gBAAkBD,E,EAa/B,OAlBmC,iBAc/B,YAAA5P,SAAA,SAASpD,GACLqK,OAAOC,OAAOvJ,KAAM,EAAAqkB,mBAAmBplB,EAAMe,KAAK8B,SAASlC,YAC3DI,KAAK4a,cAAgB5a,KAAKkS,gBAAgBpL,mBAAmB7H,IAErE,EAlBA,CAAmC,EAAAsD,MAAtB,EAAA+hB,iB,wNCNb,aACA,SAwEA,SAAgB/Q,EAAe9P,EAAesB,GAM1C,IALA,IAAIhB,EAAoB,CACpBnB,GAAImC,EAAIlC,KAAKY,EAAM,SACnB8gB,UAAW,IAGD,MAAAxf,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,gBACDT,EAAOygB,WAAazf,EAAIlC,KAAKF,EAAG,OAChC,MACJ,IAAK,cACDoB,EAAOwgB,UAAU7f,KAAK+f,EAA6B9hB,EAAGoC,KAKlE,OAAOhB,EAGX,SAAgBmD,EAAuBzD,EAAesB,GAMlD,IALA,IAAIhB,EAA4B,CAC5BnB,GAAImC,EAAIlC,KAAKY,EAAM,iBACnBihB,OAAQ,IAGE,MAAA3f,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,OACDT,EAAOsB,KAAON,EAAIlC,KAAKF,EAAG,OAC1B,MACJ,IAAK,iBACDoB,EAAO4gB,eAAiB5f,EAAIlC,KAAKF,EAAG,OACpC,MACJ,IAAK,eACDoB,EAAO6gB,mBAAqB7f,EAAIlC,KAAKF,EAAG,OACxC,MACJ,IAAK,YACDoB,EAAO8gB,UAAY9f,EAAIlC,KAAKF,EAAG,OAC/B,MACJ,IAAK,MACDoB,EAAO2gB,OAAOhgB,KAAKqD,EAAoBpF,EAAGoC,KAKtD,OAAOhB,EAGX,SAAgBgE,EAAoBtE,EAAesB,GAK/C,IAJA,IAAIhB,EAAyB,CACzBiE,MAAOjD,EAAI6C,QAAQnE,EAAM,SAGf,MAAAsB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,QACDT,EAAO+J,MAAQ/I,EAAIlC,KAAKF,EAAG,OAC3B,MACJ,IAAK,aACDoB,EAAO+gB,QAAU/f,EAAI6C,QAAQjF,EAAG,OAChC,MACJ,IAAK,SACDoB,EAAOqE,OAASrD,EAAIlC,KAAKF,EAAG,OAC5B,MACJ,IAAK,UACDoB,EAAO9B,KAAO8C,EAAIlC,KAAKF,EAAG,OAC1B,MACJ,IAAK,QACDoB,EAAOghB,cAAgBhgB,EAAIlC,KAAKF,EAAG,OACnC,MACJ,IAAK,iBACDoB,EAAOihB,gBAAkBjgB,EAAIlC,KAAKF,EAAG,OACrC,MACJ,IAAK,MACDoB,EAAO8B,eAAiB,EAAAC,yBAAyBnD,EAAGoC,GACpD,MACJ,IAAK,MACDhB,EAAOwC,SAAW,EAAAC,mBAAmB7D,EAAGoC,IAKpD,OAAOhB,EAGX,SAAgB0gB,EAA6BhhB,EAAesB,GAKxD,IAJA,IAAIhB,EAAiC,CACjCiE,MAAOjD,EAAI6C,QAAQnE,EAAM,SAGf,MAAAsB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,gBACDT,EAAO+J,MAAQ/I,EAAI6C,QAAQjF,EAAG,OAC9B,MACJ,IAAK,MACDoB,EAAOkhB,eAAiBld,EAAoBpF,EAAGoC,IAK3D,OAAOhB,EAGX,SAAgBmhB,EAA4BzhB,EAAesB,GAEvD,IAAI0C,EAAO1C,EAAIjB,QAAQL,EAAM,QACzBiE,EAAQD,GAAQ1C,EAAIjB,QAAQ2D,EAAM,SAClCE,EAAYD,GAAS3C,EAAIjB,QAAQ4D,EAAO,aAE5C,OAAOC,EAAY,CACf/E,GAAImC,EAAIlC,KAAKY,EAAM,kBACnB0hB,YAAapgB,EAAIlC,KAAK8E,EAAW,MACjCG,MAAO/C,EAAIlC,KAAK6E,EAAO,UACvB,KA3IR,8BAAmCjE,EAAesB,GAO9C,IANA,IAAIhB,EAAkC,CAClCqhB,WAAY,GACZC,mBAAoB,GACpBC,eAAgB,IAGN,MAAAvgB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,MACDT,EAAOqhB,WAAW1gB,KAAK6O,EAAe5Q,EAAGoC,IACzC,MACJ,IAAK,cACDhB,EAAOshB,mBAAmB3gB,KAAKwC,EAAuBvE,EAAGoC,IACzD,MACJ,IAAK,eACDhB,EAAOuhB,eAAe5gB,KAAKwgB,EAA4BviB,EAAGoC,KAKtE,OAAOhB,GAGX,mBAoBA,2BA6BA,wBAqCA,iCAmBA,iC,0IClLA,aAuBA,SAAgBtB,EAASgB,EAAee,QAAA,IAAAA,MAAA,MAGpC,IAFA,IAAMT,EAAS,GAENoK,EAAI,EAAGwQ,EAAIlb,EAAK2K,WAAWC,OAAQF,EAAIwQ,EAAGxQ,IAAK,CACpD,IAAI3I,EAAI/B,EAAK2K,WAAWmX,KAAKpX,GAEzB3I,EAAE8I,UAAYkX,KAAKC,cAA8B,MAAbjhB,GAAsBgB,EAAchB,WAAaA,GACrFT,EAAOW,KAAKc,GAGpB,OAAOzB,EAGX,SAAgBlB,EAAKY,EAAee,GAChC,IAAK,IAAI2J,EAAI,EAAGwQ,EAAIlb,EAAKiiB,WAAWrX,OAAQF,EAAIwQ,EAAGxQ,IAAK,CACpD,IAAImB,EAAI7L,EAAKiiB,WAAWH,KAAKpX,GAE7B,GAAImB,EAAE9K,WAAaA,EACf,OAAO8K,EAAEK,MAGjB,OAAO,KA1CX,0BAA+BgW,EAAmB9jB,QAAA,IAAAA,OAAA,GAC1CA,IACA8jB,EAAYA,EAAUvW,QAAQ,aAAc,KAEhD,I,EAAMrL,GAAS,IAAI6hB,WAAYC,gBAAgBF,EAAW,mBACpDG,EAS2C,QAA1C,EAT6B/hB,EASzBgiB,qBAAqB,eAAe,UAAE,eAAExb,YAPnD,GAAIub,EACA,MAAM,IAAIE,MAAMF,GAEpB,OAAO/hB,GAOX,8BAAmCN,GAC/B,OAAO,IAAIwiB,eAAgBC,kBAAkBziB,IAGjD,aAaA,SAWA,8BACI,KAAAhB,SAAWA,EAaX,KAAAI,KAAOA,EAuBX,OAlCI,YAAAiB,QAAA,SAAQL,EAAee,GACnB,IAAK,IAAI2J,EAAI,EAAGwQ,EAAIlb,EAAK2K,WAAWC,OAAQF,EAAIwQ,EAAGxQ,IAAK,CACpD,IAAI3I,EAAI/B,EAAK2K,WAAWmX,KAAKpX,GAE7B,GAAkB,GAAd3I,EAAE8I,UAAkB9I,EAAchB,WAAaA,EAC/C,OAAOgB,EAGf,OAAO,MAKX,YAAAoC,QAAA,SAAQxC,EAAeoJ,EAAkBuD,QAAA,IAAAA,MAAA,MACrC,IAAItE,EAAMzN,KAAK6C,KAAKuC,EAAMoJ,GAC1B,OAAOf,EAAMmB,SAASnB,GAAOsE,GAGjC,YAAAoU,UAAA,SAAU/gB,EAAeoJ,EAAkBuD,QAAA,IAAAA,MAAA,MACvC,IAAItE,EAAMzN,KAAK6C,KAAKuC,EAAMoJ,GAC1B,OAAOf,EAAMqE,WAAWrE,GAAOsE,GAGnC,YAAA9L,SAAA,SAASb,EAAeoJ,EAAkBuD,GACtC,YADsC,IAAAA,MAAA,MAC/B,EAAAU,eAAezS,KAAK6C,KAAKuC,EAAMoJ,GAAWuD,IAGrD,YAAAiD,eAAA,SAAe5P,EAAeoJ,GAC1B,OAAO,EAAA4X,kBAAkBpmB,KAAK6C,KAAKuC,EAAMoJ,KAG7C,YAAAoC,WAAA,SAAWxL,EAAeoJ,EAAkBoD,GACxC,YADwC,IAAAA,MAAyB,EAAAf,YAAYhC,KACtE,EAAAwX,cAAcrmB,KAAK6C,KAAKuC,EAAMoJ,GAAWoD,IAExD,EArCA,GAAa,EAAA/R,YAuCb,IAAMymB,EAAkB,IAAIzmB,EAE5B,UAAeymB,G,4LCxFf,IAAMC,EAAeC,OAAO,mBA+F5B,SAAgBC,EAAkBxhB,EAAYvB,EAAagjB,GACnDA,EAAOzkB,OAEPyB,GADIijB,EAAOD,EAAOzkB,MACN0kB,MAAQA,EAAKC,QAAUD,EAAKC,QAAQ3hB,EAAEsF,aAAetF,EAAEsF,aAGvE,IAAK,IAAI4D,EAAI,EAAGwQ,EAAI1Z,EAAEygB,WAAWrX,OAAQF,EAAIwQ,EAAGxQ,IAAK,CACjD,IAAMtL,EAAOoC,EAAEygB,WAAWH,KAAKpX,GAGpB,OAFLwY,EAAOD,EAAOnK,MAAM1Z,EAAK2B,cAK/Bd,EAAOijB,EAAKA,MAAQA,EAAKC,QAAUD,EAAKC,QAAQ/jB,EAAK8M,OAAS9M,EAAK8M,OAGvE,IAASxB,EAAI,EAAGwQ,EAAI1Z,EAAEmJ,WAAWC,OAAQF,EAAIwQ,EAAGxQ,IAAM,CAClD,IACMwY,EADAljB,EAAOwB,EAAEmJ,WAAWmX,KAAKpX,GAGnB,OAFNwY,EAAOljB,EAAK6K,WAAakX,KAAKC,aAAeiB,EAAOjkB,SAASgB,EAAKe,WAAa,QAKrFd,EAAOijB,EAAKA,MAAQA,EAAKC,QAAQnjB,IAGrC,OAAOC,EAoBX,SAASmjB,EAAsBC,GAC3B,OAAOA,EAAMP,KAAkBO,EAAMP,GAAgB,CACjDtkB,KAAM,KACNsa,MAAO,GACP9X,SAAU,GACVhC,SAAU,KA5IlB,mBAAwB4C,GACpB,OAAO,SAASvC,GACC+jB,EAAsB/jB,EAAOikB,WACnCC,SAAW3hB,IAI1B,sB,IAAyB,sDACrB,OAAO,SAASvC,GACZ,IAAI4jB,EAASG,EAAsB/jB,EAAOikB,WAC1CL,EAAOjiB,SAAW,GAClB,IAAa,UAAAhC,EAAA,eAAU,CAAnB,IAAI+C,EAAC,KACDqQ,EAAKgR,EAAsBrhB,EAAEuhB,WACjCL,EAAOjiB,SAASoR,EAAGmR,UAAY,CAAEF,MAAOthB,EAAEuhB,UAAWL,OAAQ7Q,MAKzE,oBAAyB+Q,GACrB,YADqB,IAAAA,MAAA,MACd,SAAU9jB,EAAa6jB,GACbE,EAAsB/jB,GAC5Bb,KAAO,CAAE0kB,KAAI,EAAEC,QAAO,KAIrC,yBAA8BpY,EAAkBoY,GAC5C,YAD4C,IAAAA,MAAA,MACrC,SAAU9jB,EAAa6jB,GACbE,EAAsB/jB,GAC5ByZ,MAAM/N,GAAY,CAAEmY,KAAI,EAAEC,QAAO,KAIhD,uBAA4BI,EAAkBJ,GAC1C,OAAO,SAAU9jB,EAAa6jB,GACbE,EAAsB/jB,GAC5BL,SAASukB,GAAY,CAAEL,KAAI,EAAEC,QAAO,KAInD,0BAA+BK,GAC3B,IAAIP,EAAwB,CACxBzkB,KAAM,KACNsa,MAAO,GACP9Z,SAAU,GACVukB,SAAU,KACVviB,SAAU,MAGd,IAAI,IAAIqZ,KAAKmJ,EAAW,CACpB,IAAItY,EAAIsY,EAAUnJ,GAEV,SAALA,EACC4I,EAAOM,SAAWrY,EAEdA,EAAEuY,QACNR,EAAOnK,MAAM5N,EAAEuY,OAAS,CAAEP,KAAM7I,EAAG8I,QAAS,OAIpD,OAAOF,GAGX,8BAAgB/iB,EAA4BsB,EAAYvB,EAAWyjB,GAC/D,IACIT,EADQpd,OAAO8d,eAAe1jB,GACf6iB,GAMnB,IAJIY,aAAG,EAAHA,EAAKhlB,cACJuB,EAAe2jB,aAAepiB,GAGrB,MAAVyhB,EACA,OAAOhjB,EAEX+iB,EAAkBxhB,EAAGvB,EAAQgjB,GAE7B,IAAK,IAAIvY,EAAI,EAAGwQ,EAAI1Z,EAAER,SAAS4J,OAAQF,EAAIwQ,EAAGxQ,IAAM,CAChD,IAAI1K,EAAOwB,EAAER,SAAS8gB,KAAKpX,GACvBmZ,EAAQZ,EAAOjiB,SAAShB,EAAKe,WAEjC,GAAI8iB,EAAO,CACP,IAAIC,EAAMje,OAAOke,OAAOF,EAAMR,OAC9BnjB,EAAmBF,EAAM8jB,EAAKJ,GAC7BzjB,EAAee,SAASC,KAAK6iB,IAItC,OAAO7jB,GAGX,uB,8FC/FA,aACA,SAQA,iCAAsCD,EAAesB,GAGjD,IAFA,IAAIhB,EAA2B,GAEjB,MAAAgB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAOA,EAAE6B,WACL,IAAK,aACD,IAAIijB,EAAU1iB,EAAIjB,QAAQnB,EAAG,OAEzB8kB,IACA1jB,EAAO8B,eAAiB,EAAAC,yBAAyB2hB,EAAS1iB,IAC9D,MAEJ,IAAK,aACD,IAAI2iB,EAAU3iB,EAAIjB,QAAQnB,EAAG,OAEzB+kB,IACA3jB,EAAOwC,SAAW,EAAAC,mBAAmBkhB,EAAS3iB,KAK9D,OAAOhB,I,2GC9BX,SACA,SACA,SAEA,SAKA,2BAwBA,OAtBI,cADC,EAAAuM,cAAc,Y,yBAGf,cADC,EAAAA,cAAc,S,2BAGf,cADC,EAAAA,cAAc,cAAe,EAAAmC,iB,kCAG9B,cADC,EAAAnC,cAAc,UAAW,EAAAmC,iB,8BAPT,cADpB,EAAA3O,QAAQ,UACI6jB,GAAb,GAAa,EAAAA,WA0Bb,sBAA2BlkB,EAAesB,GAGtC,IAFA,IAAIhB,EAAS,EAAAJ,mBAAmBF,EAAM,IAAIkkB,EAAY,MAExC,MAAA5iB,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,MACDT,EAAO8B,eAAiB,EAAAC,yBAAyBnD,EAAGoC,GACpD,MAEJ,IAAK,MACDhB,EAAOwC,SAAW,EAAAC,mBAAmB7D,EAAGoC,GACxC,MAEJ,IAAK,OACDhB,EAAOsB,KAAON,EAAIlC,KAAKF,EAAG,OAC1B,MAEJ,IAAK,UACDoB,EAAOuB,QAAUP,EAAIlC,KAAKF,EAAG,OAC7B,MAEJ,IAAK,UACDoB,EAAOsC,QAAUtB,EAAIlC,KAAKF,EAAG,OAAO2D,MAAM,KAC1C,MAEJ,IAAK,OACDvC,EAAO6jB,KAAO7iB,EAAIlC,KAAKF,EAAG,OAC1B,MAEJ,IAAK,OACDoB,EAAOqC,KAAOrB,EAAIlC,KAAKF,EAAG,OAC1B,MAEJ,IAAK,eACDoB,EAAO8jB,cAAe,EACtB,MAEJ,IAAK,SACD9jB,EAAO+jB,QAAS,EAChB,MAEJ,IAAK,aACD/jB,EAAOgkB,YAAa,EACpB,MAEJ,IAAK,SACDhkB,EAAOikB,QAAS,EAChB,MAEJ,IAAK,aACDjkB,EAAOkkB,WAAaljB,EAAI6C,QAAQjF,EAAG,QAK/C,OAAOoB,I,kHCzFX,SAKA,SACA,SAEA,cAQI,WAAYiO,EAAqBjS,EAAckS,GAA/C,MACI,YAAMD,EAAKjS,IAAK,K,OAChB,EAAKmS,gBAAkBD,E,EAO/B,OAjBgC,iBAa5B,YAAA5P,SAAA,SAASpD,GACLqK,OAAOC,OAAOvJ,KAAMkoB,EAAgBjpB,EAAMe,KAAK8B,SAASlC,YACxDI,KAAKsa,UAAYta,KAAKkS,gBAAgBrN,gBAAgB5F,IAE9D,EAjBA,CAAgC,EAAAsD,MAwBhC,SAAgB2lB,EAAgBzkB,EAAesB,GAK3C,IAJA,IAAIhB,EAAS,CACTwB,OAAQ,IAGE,MAAAR,EAAItC,SAASgB,GAAb,eAAoB,CAA7B,IAAId,EAAC,KACN,OAAQA,EAAE6B,WACN,IAAK,cACDT,EAAOiU,SAAW,EAAAmQ,sBAAsBxlB,EAAGoC,GAC3C,MAEJ,IAAK,QACDhB,EAAOwB,OAAOb,KAAK,EAAAQ,WAAWvC,EAAGoC,KAK7C,OAAOhB,EAzCE,EAAAqkB,aAwBb,qB,8JC3BA,SAAgB9G,EAAY+G,EAAmBliB,GAC3C,OAASkiB,EAA4BA,EAAS,IAAIliB,EAA5BA,EAkB1B,SAAgBmiB,EAAS/C,GACrB,OAAQA,GAAwB,iBAATA,IAAsBgD,MAAMC,QAAQjD,GAxB/D,2BAAgCzhB,EAAsBqC,GAClD,OAAOrC,EAAQqC,UAAYmb,EAAYxd,EAAQqC,UAAWA,IAG9D,gBAIA,qBAA0BpG,GACtB,IAAI0oB,EAAK1oB,EAAK2oB,YAAY,KAAO,EAIjC,MAAO,CAHY,GAAND,EAAU,GAAK1oB,EAAKwjB,UAAU,EAAGkF,GACzB,GAANA,EAAU1oB,EAAOA,EAAKwjB,UAAUkF,KAKnD,iBAA+BE,EAAYC,GACvC,OAAOD,EAAME,QAAO,SAACvZ,EAAGlI,GAEpB,OADAkI,EAAEsZ,EAAGxhB,IAAMA,EACJkI,IACR,KAGP,aAIA,qBAAgBwM,EAAUhZ,G,UAAQ,oDAC9B,IAAKgmB,EAAQza,OACT,OAAOvL,EAEX,IAAMimB,EAASD,EAAQE,QAEvB,GAAIV,EAASxlB,IAAWwlB,EAASS,GAC7B,IAAK,IAAMtM,KAAOsM,EACd,GAAIT,EAASS,EAAOtM,IAAO,CACvB,IAAMhP,EAAiB,QAAX,EAAA3K,EAAO2Z,UAAI,QAAK3Z,EAAO2Z,GAAO,GAC1CX,EAAUrO,EAAKsb,EAAOtM,SAEtB3Z,EAAO2Z,GAAOsM,EAAOtM,GAKjC,OAAOX,EAAS,8BAAChZ,GAAWgmB,M,mGC3ChC,aAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEMG,EAAe,CACjB,CAAEjoB,KAAM,EAAAwB,kBAAkB0mB,eAAgBpmB,OAAQ,qBAClD,CAAE9B,KAAM,EAAAwB,kBAAkB2mB,mBAAoBrmB,OAAQ,qBAG1D,0BAKI,KAAAsmB,MAAgB,GAChB,KAAAC,SAAiC,GAoHrC,OA5GW,EAAA7oB,KAAP,SAAY8oB,EAAMrX,EAAwBtS,GACtC,IAAIwJ,EAAI,IAAI4P,EAIZ,OAFA5P,EAAEogB,QAAUtX,EAEL,EAAAnR,eAAeN,KAAK8oB,EAAM3pB,GAC5BiB,MAAK,SAAAoR,GAGF,OAFA7I,EAAErH,SAAWkQ,EAEN7I,EAAErH,SAAST,uBACnBT,MAAK,SAAAoB,GACJmH,EAAEnH,KAAOA,EAET,IAAMwnB,EAAQP,EAAavmB,KAAI,SAAA+mB,G,MACrBvL,EAAuC,QAAnC,EAAAlc,EAAKkiB,MAAK,SAAA9c,GAAK,OAAAA,EAAEpG,OAASyoB,EAAIzoB,eAAK,QAAIyoB,EACjD,OAAOtgB,EAAEugB,qBAAqBxL,EAAEpb,OAAQob,EAAEld,SAG9C,OAAOG,QAAQY,IAAIynB,MACpB5oB,MAAK,WAAM,OAAAuI,MAGtB,YAAApI,KAAA,SAAKC,GACD,YADC,IAAAA,MAAA,QACMhB,KAAK8B,SAASf,KAAKC,IAGtB,YAAA0oB,qBAAR,SAA6B3pB,EAAciB,GAA3C,WACI,GAAIhB,KAAKqpB,SAAStpB,GACd,OAAOoB,QAAQC,QAAQpB,KAAKqpB,SAAStpB,IAEzC,IAAKC,KAAK8B,SAAShC,IAAIC,GACnB,OAAOoB,QAAQC,QAAQ,MAE3B,IAAIuoB,EAAa,KAEjB,OAAQ3oB,GACJ,KAAK,EAAAwB,kBAAkB0mB,eACnBlpB,KAAKib,aAAe0O,EAAO,IAAI,EAAAvX,aAAapS,KAAK8B,SAAU/B,EAAMC,KAAKupB,SACtE,MAEJ,KAAK,EAAA/mB,kBAAkBonB,UACnB5pB,KAAK6a,cAAgB8O,EAAO,IAAI,EAAAxQ,cAAcnZ,KAAK8B,SAAU/B,GAC7D,MAEJ,KAAK,EAAAyC,kBAAkBqnB,UACnB7pB,KAAK0a,cAAgBiP,EAAO,IAAI,EAAArF,cAActkB,KAAK8B,SAAU/B,EAAMC,KAAKupB,SACxE,MAEJ,KAAK,EAAA/mB,kBAAkBsnB,OACnB9pB,KAAKoa,WAAauP,EAAO,IAAI,EAAAvB,WAAWpoB,KAAK8B,SAAU/B,EAAMC,KAAKupB,SAClE,MAEJ,KAAK,EAAA/mB,kBAAkBunB,OACnBJ,EAAO,IAAI,EAAAlQ,WAAWzZ,KAAK8B,SAAU/B,EAAMC,KAAKupB,SAChD,MAEJ,KAAK,EAAA/mB,kBAAkBwnB,OACnBL,EAAO,IAAI,EAAAhQ,WAAW3Z,KAAK8B,SAAU/B,EAAMC,KAAKupB,SAChD,MAEJ,KAAK,EAAA/mB,kBAAkB2mB,mBACnBnpB,KAAKiqB,kBAAoBN,EAAO,IAAI,EAAAla,kBAAkBzP,KAAK8B,SAAU/B,GAI7E,OAAY,MAAR4pB,EACOxoB,QAAQC,QAAQ,OAE3BpB,KAAKqpB,SAAStpB,GAAQ4pB,EACtB3pB,KAAKopB,MAAM1kB,KAAKilB,GAETA,EAAKnpB,OAAOI,MAAK,WACpB,GAAiB,MAAb+oB,EAAK3nB,MAAoC,GAApB2nB,EAAK3nB,KAAKqM,OAC/B,OAAOsb,EAEN,IAAAO,EAAU,EAAA3oB,UAAUooB,EAAK5pB,MAAK,GAC/BiC,EAAO2nB,EAAK3nB,KAAKU,KAAI,SAAA+mB,GACrB,OAAO,EAAKC,qBAAqB,GAAGQ,EAAST,EAAI3mB,OAAU2mB,EAAIzoB,SAGnE,OAAOG,QAAQY,IAAIC,GAAMpB,MAAK,WAAM,OAAA+oB,UAI5C,YAAAvH,kBAAA,SAAkBxf,GACd,OAAO5C,KAAKmqB,aAAanqB,KAAKib,aAAcrY,EAAI,QAC3ChC,MAAK,SAAAwG,GAAK,OAAAA,EAAIgjB,IAAIC,gBAAgBjjB,GAAK,SAGhD,YAAAiY,mBAAA,SAAmBzc,GACf,OAAO5C,KAAKmqB,aAAanqB,KAAK0a,cAAe9X,EAAI,QAC5ChC,MAAK,SAAAwG,GAAK,OAAAA,EAAIgjB,IAAIC,gBAAgBjjB,GAAK,SAGhD,YAAAmU,SAAA,SAAS3Y,EAAY6Z,GACjB,OAAOzc,KAAKmqB,aAAanqB,KAAK6a,cAAejY,EAAI,cAC5ChC,MAAK,SAAAwG,GAAK,OAAAA,EAAIgjB,IAAIC,gBAAgB,IAAIC,KAAK,CAACC,EAAYnjB,EAAGqV,MAAUrV,MAG9E,YAAAojB,YAAA,SAAYb,EAAY/mB,GACpB,IAAM6mB,EAAME,EAAK3nB,KAAKkiB,MAAK,SAAA9c,GAAK,OAAAA,EAAExE,IAAMA,KACxC,OAAO6mB,EAAM,EAAAloB,UAAUooB,EAAK5pB,MAAM,GAAK0pB,EAAI3mB,OAAS,MAGhD,YAAAqnB,aAAR,SAAqBR,EAAY/mB,EAAY6nB,GACzC,IAAM1qB,EAAOC,KAAKwqB,YAAYb,EAAM/mB,GACpC,OAAO7C,EAAOC,KAAK8B,SAAStB,KAAKT,EAAM0qB,GAActpB,QAAQC,QAAQ,OAE7E,EA1HA,GA4HA,SAAgBmpB,EAAYhS,EAAkBmS,GAK1C,IAJA,IACMC,EAAUD,EAAQtb,QAAQ,SAAU,IACpCwb,EAAU,IAAIrC,MAFR,IAIHpa,EAAI,EAAGA,EAJJ,GAIaA,IACrByc,EALQ,GAKMzc,EAAI,GAAKS,SAAS+b,EAAQxqB,OAAW,EAAJgO,EAAO,GAAI,IAE9D,IAASA,EAAI,EAAGA,EAAI,GAAIA,IACpBoK,EAAKpK,GAAKoK,EAAKpK,GAAKyc,EAAQzc,EARpB,IAUZ,OAAOoK,EAvIE,EAAAQ,eA4Hb,iB,ueChIA,IAAI8R,EAAgB,SAAS1hB,EAAGoG,GAI5B,OAHAsb,EAAgBvhB,OAAOwhB,gBAClB,CAAEC,UAAW,cAAgBxC,OAAS,SAAUpf,EAAGoG,GAAKpG,EAAE4hB,UAAYxb,IACvE,SAAUpG,EAAGoG,GAAK,IAAK,IAAIuO,KAAKvO,EAAOjG,OAAOyd,UAAUrK,eAAesO,KAAKzb,EAAGuO,KAAI3U,EAAE2U,GAAKvO,EAAEuO,MAC3E3U,EAAGoG,IAGrB,SAAS0b,EAAU9hB,EAAGoG,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAI2b,UAAU,uBAAyBC,OAAO5b,GAAK,iCAE7D,SAAS6b,IAAOprB,KAAKqrB,YAAcliB,EADnC0hB,EAAc1hB,EAAGoG,GAEjBpG,EAAE4d,UAAkB,OAANxX,EAAajG,OAAOke,OAAOjY,IAAM6b,EAAGrE,UAAYxX,EAAEwX,UAAW,IAAIqE,GAG5E,IAAIE,EAAW,WAQlB,OAPAA,EAAWhiB,OAAOC,QAAU,SAAkB4a,GAC1C,IAAK,IAAIzd,EAAGyH,EAAI,EAAGlJ,EAAIsmB,UAAUld,OAAQF,EAAIlJ,EAAGkJ,IAE5C,IAAK,IAAI2P,KADTpX,EAAI6kB,UAAUpd,GACO7E,OAAOyd,UAAUrK,eAAesO,KAAKtkB,EAAGoX,KAAIqG,EAAErG,GAAKpX,EAAEoX,IAE9E,OAAOqG,IAEKqH,MAAMxrB,KAAMurB,YAGzB,SAASE,EAAO/kB,EAAG/D,GACtB,IAAIwhB,EAAI,GACR,IAAK,IAAIrG,KAAKpX,EAAO4C,OAAOyd,UAAUrK,eAAesO,KAAKtkB,EAAGoX,IAAMnb,EAAEoM,QAAQ+O,GAAK,IAC9EqG,EAAErG,GAAKpX,EAAEoX,IACb,GAAS,MAALpX,GAAqD,mBAAjC4C,OAAOoiB,sBACtB,KAAIvd,EAAI,EAAb,IAAgB2P,EAAIxU,OAAOoiB,sBAAsBhlB,GAAIyH,EAAI2P,EAAEzP,OAAQF,IAC3DxL,EAAEoM,QAAQ+O,EAAE3P,IAAM,GAAK7E,OAAOyd,UAAU4E,qBAAqBX,KAAKtkB,EAAGoX,EAAE3P,MACvEgW,EAAErG,EAAE3P,IAAMzH,EAAEoX,EAAE3P,KAE1B,OAAOgW,EAGJ,SAASyH,EAAWC,EAAY/oB,EAAQ2Z,EAAKqP,GAChD,IAA2H3iB,EAAvH3D,EAAI+lB,UAAUld,OAAQ6P,EAAI1Y,EAAI,EAAI1C,EAAkB,OAATgpB,EAAgBA,EAAOxiB,OAAOyiB,yBAAyBjpB,EAAQ2Z,GAAOqP,EACrH,GAAuB,iBAAZE,SAAoD,mBAArBA,QAAQC,SAAyB/N,EAAI8N,QAAQC,SAASJ,EAAY/oB,EAAQ2Z,EAAKqP,QACpH,IAAK,IAAI3d,EAAI0d,EAAWxd,OAAS,EAAGF,GAAK,EAAGA,KAAShF,EAAI0iB,EAAW1d,MAAI+P,GAAK1Y,EAAI,EAAI2D,EAAE+U,GAAK1Y,EAAI,EAAI2D,EAAErG,EAAQ2Z,EAAKyB,GAAK/U,EAAErG,EAAQ2Z,KAASyB,GAChJ,OAAO1Y,EAAI,GAAK0Y,GAAK5U,OAAO4iB,eAAeppB,EAAQ2Z,EAAKyB,GAAIA,EAGzD,SAASiO,EAAQC,EAAYC,GAChC,OAAO,SAAUvpB,EAAQ2Z,GAAO4P,EAAUvpB,EAAQ2Z,EAAK2P,IAGpD,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZR,SAAoD,mBAArBA,QAAQS,SAAyB,OAAOT,QAAQS,SAASF,EAAaC,GAG7G,SAASE,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAI1rB,WAAU,SAAUC,EAAS2rB,GAC/C,SAASC,EAAUrd,GAAS,IAAMsd,EAAKH,EAAU1mB,KAAKuJ,IAAW,MAAOhN,GAAKoqB,EAAOpqB,IACpF,SAASuqB,EAASvd,GAAS,IAAMsd,EAAKH,EAAiB,MAAEnd,IAAW,MAAOhN,GAAKoqB,EAAOpqB,IACvF,SAASsqB,EAAKlpB,GAJlB,IAAe4L,EAIa5L,EAAOopB,KAAO/rB,EAAQ2C,EAAO4L,QAJ1CA,EAIyD5L,EAAO4L,MAJhDA,aAAiBkd,EAAIld,EAAQ,IAAIkd,GAAE,SAAUzrB,GAAWA,EAAQuO,OAIT/O,KAAKosB,EAAWE,GAClGD,GAAMH,EAAYA,EAAUtB,MAAMmB,EAASC,GAAc,KAAKxmB,WAI/D,SAASgnB,EAAYT,EAAS1oB,GACjC,IAAsGqX,EAAG+R,EAAGlJ,EAAG1Z,EAA3G6iB,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPrJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOsJ,KAAM,GAAItG,IAAK,IAChG,OAAO1c,EAAI,CAAErE,KAAMsnB,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXlH,SAA0B/b,EAAE+b,OAAOmH,UAAY,WAAa,OAAO3tB,OAAUyK,EACvJ,SAASijB,EAAKzoB,GAAK,OAAO,SAAU0J,GAAK,OACzC,SAAcif,GACV,GAAItS,EAAG,MAAM,IAAI4P,UAAU,mCAC3B,KAAOoC,OACH,GAAIhS,EAAI,EAAG+R,IAAMlJ,EAAY,EAARyJ,EAAG,GAASP,EAAU,OAAIO,EAAG,GAAKP,EAAS,SAAOlJ,EAAIkJ,EAAU,SAAMlJ,EAAE6G,KAAKqC,GAAI,GAAKA,EAAEjnB,SAAW+d,EAAIA,EAAE6G,KAAKqC,EAAGO,EAAG,KAAKT,KAAM,OAAOhJ,EAE3J,OADIkJ,EAAI,EAAGlJ,IAAGyJ,EAAK,CAAS,EAARA,EAAG,GAAQzJ,EAAExU,QACzBie,EAAG,IACP,KAAK,EAAG,KAAK,EAAGzJ,EAAIyJ,EAAI,MACxB,KAAK,EAAc,OAAXN,EAAEC,QAAgB,CAAE5d,MAAOie,EAAG,GAAIT,MAAM,GAChD,KAAK,EAAGG,EAAEC,QAASF,EAAIO,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKN,EAAEnG,IAAI0G,MAAOP,EAAEG,KAAKI,MAAO,SACxC,QACI,MAAkB1J,GAAZA,EAAImJ,EAAEG,MAAYpf,OAAS,GAAK8V,EAAEA,EAAE9V,OAAS,KAAkB,IAAVuf,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEN,EAAI,EAAG,SACjG,GAAc,IAAVM,EAAG,MAAczJ,GAAMyJ,EAAG,GAAKzJ,EAAE,IAAMyJ,EAAG,GAAKzJ,EAAE,IAAM,CAAEmJ,EAAEC,MAAQK,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYN,EAAEC,MAAQpJ,EAAE,GAAI,CAAEmJ,EAAEC,MAAQpJ,EAAE,GAAIA,EAAIyJ,EAAI,MAC7D,GAAIzJ,GAAKmJ,EAAEC,MAAQpJ,EAAE,GAAI,CAAEmJ,EAAEC,MAAQpJ,EAAE,GAAImJ,EAAEnG,IAAIziB,KAAKkpB,GAAK,MACvDzJ,EAAE,IAAImJ,EAAEnG,IAAI0G,MAChBP,EAAEG,KAAKI,MAAO,SAEtBD,EAAK3pB,EAAK+mB,KAAK2B,EAASW,GAC1B,MAAO3qB,GAAKirB,EAAK,CAAC,EAAGjrB,GAAI0qB,EAAI,EAAK,QAAU/R,EAAI6I,EAAI,EACtD,GAAY,EAARyJ,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEje,MAAOie,EAAG,GAAKA,EAAG,QAAK,EAAQT,MAAM,GArB9BF,CAAK,CAAChoB,EAAG0J,MAyBtD,IAAImf,EAAkBxkB,OAAOke,OAAS,SAAUuG,EAAGC,EAAGC,EAAGC,QACjDC,IAAPD,IAAkBA,EAAKD,GAC3B3kB,OAAO4iB,eAAe6B,EAAGG,EAAI,CAAEE,YAAY,EAAMtuB,IAAK,WAAa,OAAOkuB,EAAEC,OAC3E,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,IAGP,SAASI,EAAaL,EAAGD,GAC5B,IAAK,IAAIjQ,KAAKkQ,EAAa,YAANlQ,GAAoBxU,OAAOyd,UAAUrK,eAAesO,KAAK+C,EAAGjQ,IAAIgQ,EAAgBC,EAAGC,EAAGlQ,GAGxG,SAASwQ,EAASP,GACrB,IAAIrnB,EAAsB,mBAAX8f,QAAyBA,OAAOmH,SAAUK,EAAItnB,GAAKqnB,EAAErnB,GAAIyH,EAAI,EAC5E,GAAI6f,EAAG,OAAOA,EAAEhD,KAAK+C,GACrB,GAAIA,GAAyB,iBAAbA,EAAE1f,OAAqB,MAAO,CAC1CjI,KAAM,WAEF,OADI2nB,GAAK5f,GAAK4f,EAAE1f,SAAQ0f,OAAI,GACrB,CAAEpe,MAAOoe,GAAKA,EAAE5f,KAAMgf,MAAOY,KAG5C,MAAM,IAAI7C,UAAUxkB,EAAI,0BAA4B,mCAGjD,SAAS6nB,EAAOR,EAAG9oB,GACtB,IAAI+oB,EAAsB,mBAAXxH,QAAyBuH,EAAEvH,OAAOmH,UACjD,IAAKK,EAAG,OAAOD,EACf,IAAmB7P,EAAYvb,EAA3BwL,EAAI6f,EAAEhD,KAAK+C,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANvpB,GAAgBA,KAAM,MAAQiZ,EAAI/P,EAAE/H,QAAQ+mB,MAAMqB,EAAG9pB,KAAKwZ,EAAEvO,OAExE,MAAO8e,GAAS9rB,EAAI,CAAE8rB,MAAOA,GAC7B,QACI,IACQvQ,IAAMA,EAAEiP,OAASa,EAAI7f,EAAU,SAAI6f,EAAEhD,KAAK7c,GAElD,QAAU,GAAIxL,EAAG,MAAMA,EAAE8rB,OAE7B,OAAOD,EAIJ,SAASE,IACZ,IAAK,IAAIF,EAAK,GAAIrgB,EAAI,EAAGA,EAAIod,UAAUld,OAAQF,IAC3CqgB,EAAKA,EAAG1O,OAAOyO,EAAOhD,UAAUpd,KACpC,OAAOqgB,EAIJ,SAASG,IACZ,IAAK,IAAIjoB,EAAI,EAAGyH,EAAI,EAAGygB,EAAKrD,UAAUld,OAAQF,EAAIygB,EAAIzgB,IAAKzH,GAAK6kB,UAAUpd,GAAGE,OACxE,IAAI6P,EAAIqK,MAAM7hB,GAAIunB,EAAI,EAA3B,IAA8B9f,EAAI,EAAGA,EAAIygB,EAAIzgB,IACzC,IAAK,IAAImB,EAAIic,UAAUpd,GAAI0gB,EAAI,EAAGC,EAAKxf,EAAEjB,OAAQwgB,EAAIC,EAAID,IAAKZ,IAC1D/P,EAAE+P,GAAK3e,EAAEuf,GACjB,OAAO3Q,EAGJ,SAAS6Q,EAAcC,EAAIC,EAAMC,GACpC,GAAIA,GAA6B,IAArB3D,UAAUld,OAAc,IAAK,IAA4BmgB,EAAxBrgB,EAAI,EAAGwQ,EAAIsQ,EAAK5gB,OAAYF,EAAIwQ,EAAGxQ,KACxEqgB,GAAQrgB,KAAK8gB,IACRT,IAAIA,EAAKjG,MAAMxB,UAAUxI,MAAMyM,KAAKiE,EAAM,EAAG9gB,IAClDqgB,EAAGrgB,GAAK8gB,EAAK9gB,IAGrB,OAAO6gB,EAAGlP,OAAO0O,GAAMjG,MAAMxB,UAAUxI,MAAMyM,KAAKiE,IAG/C,SAASE,EAAQxgB,GACpB,OAAO3O,gBAAgBmvB,GAAWnvB,KAAK2O,EAAIA,EAAG3O,MAAQ,IAAImvB,EAAQxgB,GAG/D,SAASygB,EAAiBzC,EAASC,EAAYE,GAClD,IAAKtG,OAAO6I,cAAe,MAAM,IAAInE,UAAU,wCAC/C,IAAoD/c,EAAhD1D,EAAIqiB,EAAUtB,MAAMmB,EAASC,GAAc,IAAQ0C,EAAI,GAC3D,OAAOnhB,EAAI,GAAIuf,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWvf,EAAEqY,OAAO6I,eAAiB,WAAc,OAAOrvB,MAASmO,EACpH,SAASuf,EAAKzoB,GAASwF,EAAExF,KAAIkJ,EAAElJ,GAAK,SAAU0J,GAAK,OAAO,IAAIxN,SAAQ,SAAUmO,EAAGC,GAAK+f,EAAE5qB,KAAK,CAACO,EAAG0J,EAAGW,EAAGC,IAAM,GAAKggB,EAAOtqB,EAAG0J,QAC9H,SAAS4gB,EAAOtqB,EAAG0J,GAAK,KACVuP,EADqBzT,EAAExF,GAAG0J,IACnBgB,iBAAiBwf,EAAUhuB,QAAQC,QAAQ8c,EAAEvO,MAAMhB,GAAG/N,KAAK4uB,EAASzC,GAAU0C,EAAOH,EAAE,GAAG,GAAIpR,GADpE,MAAOvb,GAAK8sB,EAAOH,EAAE,GAAG,GAAI3sB,GAC3E,IAAcub,EACd,SAASsR,EAAQ7f,GAAS4f,EAAO,OAAQ5f,GACzC,SAASod,EAAOpd,GAAS4f,EAAO,QAAS5f,GACzC,SAAS8f,EAAOnU,EAAG3M,GAAS2M,EAAE3M,GAAI2gB,EAAEtG,QAASsG,EAAEjhB,QAAQkhB,EAAOD,EAAE,GAAG,GAAIA,EAAE,GAAG,KAGzE,SAASI,EAAiB3B,GAC7B,IAAI5f,EAAG2P,EACP,OAAO3P,EAAI,GAAIuf,EAAK,QAASA,EAAK,SAAS,SAAU/qB,GAAK,MAAMA,KAAO+qB,EAAK,UAAWvf,EAAEqY,OAAOmH,UAAY,WAAc,OAAO3tB,MAASmO,EAC1I,SAASuf,EAAKzoB,EAAGqW,GAAKnN,EAAElJ,GAAK8oB,EAAE9oB,GAAK,SAAU0J,GAAK,OAAQmP,GAAKA,GAAK,CAAEnO,MAAOwf,EAAQpB,EAAE9oB,GAAG0J,IAAKwe,KAAY,WAANloB,GAAmBqW,EAAIA,EAAE3M,GAAKA,GAAO2M,GAGxI,SAASqU,EAAc5B,GAC1B,IAAKvH,OAAO6I,cAAe,MAAM,IAAInE,UAAU,wCAC/C,IAAiC/c,EAA7B6f,EAAID,EAAEvH,OAAO6I,eACjB,OAAOrB,EAAIA,EAAEhD,KAAK+C,IAAMA,EAAqCO,EAASP,GAA2B5f,EAAI,GAAIuf,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWvf,EAAEqY,OAAO6I,eAAiB,WAAc,OAAOrvB,MAASmO,GAC9M,SAASuf,EAAKzoB,GAAKkJ,EAAElJ,GAAK8oB,EAAE9oB,IAAM,SAAU0J,GAAK,OAAO,IAAIxN,SAAQ,SAAUC,EAAS2rB,IACvF,SAAgB3rB,EAAS2rB,EAAQ5jB,EAAGwF,GAAKxN,QAAQC,QAAQuN,GAAG/N,MAAK,SAAS+N,GAAKvN,EAAQ,CAAEuO,MAAOhB,EAAGwe,KAAMhkB,MAAS4jB,GADJ0C,CAAOruB,EAAS2rB,GAA7Bpe,EAAIof,EAAE9oB,GAAG0J,IAA8Bwe,KAAMxe,EAAEgB,YAI7I,SAASigB,EAAqBC,EAAQC,GAEzC,OADIxmB,OAAO4iB,eAAkB5iB,OAAO4iB,eAAe2D,EAAQ,MAAO,CAAElgB,MAAOmgB,IAAiBD,EAAOC,IAAMA,EAClGD,EAGX,IAAIE,EAAqBzmB,OAAOke,OAAS,SAAUuG,EAAGpf,GAClDrF,OAAO4iB,eAAe6B,EAAG,UAAW,CAAEK,YAAY,EAAMze,MAAOhB,KAC9D,SAASof,EAAGpf,GACbof,EAAW,QAAIpf,GAGZ,SAASqhB,EAAaC,GACzB,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIlsB,EAAS,GACb,GAAW,MAAPksB,EAAa,IAAK,IAAIhC,KAAKgC,EAAe,YAANhC,GAAmB3kB,OAAOyd,UAAUrK,eAAesO,KAAKiF,EAAKhC,IAAIH,EAAgB/pB,EAAQksB,EAAKhC,GAEtI,OADA8B,EAAmBhsB,EAAQksB,GACpBlsB,EAGJ,SAASosB,EAAgBF,GAC5B,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAEG,QAASH,GAG/C,SAASI,EAAuBC,EAAUC,EAAOC,EAAMlV,GAC1D,GAAa,MAATkV,IAAiBlV,EAAG,MAAM,IAAI4P,UAAU,iDAC5C,GAAqB,mBAAVqF,EAAuBD,IAAaC,IAAUjV,GAAKiV,EAAME,IAAIH,GAAW,MAAM,IAAIpF,UAAU,4EACvG,MAAgB,MAATsF,EAAelV,EAAa,MAATkV,EAAelV,EAAE0P,KAAKsF,GAAYhV,EAAIA,EAAE3L,MAAQ4gB,EAAMzwB,IAAIwwB,GAGjF,SAASI,EAAuBJ,EAAUC,EAAO5gB,EAAO6gB,EAAMlV,GACjE,GAAa,MAATkV,EAAc,MAAM,IAAItF,UAAU,kCACtC,GAAa,MAATsF,IAAiBlV,EAAG,MAAM,IAAI4P,UAAU,iDAC5C,GAAqB,mBAAVqF,EAAuBD,IAAaC,IAAUjV,GAAKiV,EAAME,IAAIH,GAAW,MAAM,IAAIpF,UAAU,2EACvG,MAAiB,MAATsF,EAAelV,EAAE0P,KAAKsF,EAAU3gB,GAAS2L,EAAIA,EAAE3L,MAAQA,EAAQ4gB,EAAMI,IAAIL,EAAU3gB,GAASA,I,QC7OxGvQ,EAAOD,QAAUM,ICCbmxB,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAU3xB,QAG3C,IAAIC,EAASwxB,EAAyBE,GAAY,CAGjD3xB,QAAS,IAOV,OAHA4xB,EAAoBD,GAAU1xB,EAAQA,EAAOD,QAAS0xB,GAG/CzxB,EAAOD,Q,OCnBf0xB,EAAoB1nB,EAAI,CAAChK,EAAS6xB,KACjC,IAAI,IAAIvU,KAAOuU,EACXH,EAAoB9C,EAAEiD,EAAYvU,KAASoU,EAAoB9C,EAAE5uB,EAASsd,IAC5EnT,OAAO4iB,eAAe/sB,EAASsd,EAAK,CAAE2R,YAAY,EAAMtuB,IAAKkxB,EAAWvU,MCJ3EoU,EAAoB9C,EAAI,CAACxG,EAAKZ,IAAUrd,OAAOyd,UAAUrK,eAAesO,KAAKzD,EAAKZ,GCClFkK,EAAoB3S,EAAK/e,IACH,oBAAXqnB,QAA0BA,OAAOyK,aAC1C3nB,OAAO4iB,eAAe/sB,EAASqnB,OAAOyK,YAAa,CAAEthB,MAAO,WAE7DrG,OAAO4iB,eAAe/sB,EAAS,aAAc,CAAEwQ,OAAO,KCF7BkhB,EAAoB,M","file":"docx-preview.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"JSZip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"JSZip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"JSZip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__792__) {\nreturn ","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n\r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        return JSZip.loadAsync(input).then(zip => new OpenXmlPackage(zip, options));\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        return this.load(relsPath)\r\n            .then(txt => txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null);\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    load(): Promise<any> {\r\n        return Promise.all([\r\n            this._package.loadRelationships(this.path).then(rels => {\r\n                this.rels = rels;\r\n            }),\r\n            this._package.load(this.path).then(text => {\r\n                const xmlDoc = this._package.parseXmlDocument(text); \r\n\r\n                if (this._package.options.keepOrigin) {\r\n                    this._xmlDocument = xmlDoc;\r\n                }\r\n\r\n                this.parseXml(xmlDoc.firstElementChild);\r\n            })\r\n        ]);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\"\r\n}\r\n\r\nexport function parseRelationships(root: Element, xmlParser: XmlParser): Relationship[] {\r\n    return xmlParser.elements(root).map(e => <Relationship>{\r\n        id: xmlParser.attr(e, \"Id\"),\r\n        type: xmlParser.attr(e, \"Type\"),\r\n        target: xmlParser.attr(e, \"Target\"),\r\n        targetMode: xmlParser.attr(e, \"TargetMode\")\r\n    });\r\n}","import { DocxContainer, DocxElement, IDomNumbering, NumberingPicBullet } from './document/dom';\r\nimport * as utils from './utils';\r\nimport { WmlBody, WmlDocument } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport globalXmlParser from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlHyperlink } from './document/hyperlink';\r\nimport { WmlTableCell } from './document/table-cell';\r\nimport { WmlTable } from './document/table';\r\nimport { WmlDrawing, DmlPicture } from './document/drawing';\r\nimport { WmlTableRow } from './document/table-row';\r\nimport { deserializeElement } from './parser/xml-serialize';\r\nimport { WmlFooter } from './footer/footer';\r\nimport { WmlHeader } from './header/header';\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport class DocumentParser {\r\n    // removes XML declaration \r\n    skipDeclaration: boolean = true;\r\n\r\n    // ignores page and table sizes\r\n    ignoreWidth: boolean = false;\r\n    debug: boolean = false;\r\n    keepOrigin: boolean = false;\r\n\r\n    private deserialize<T>(elem: Element, output: T): T {\r\n        return deserializeElement(elem, output, { keepOrigin: this.keepOrigin });\r\n    }\r\n\r\n    parseDocumentFile(xmlDoc: Element): WmlDocument {\r\n        var xbody = globalXmlParser.element(xmlDoc, \"body\");\r\n\r\n        const result = new WmlDocument();\r\n        result.body = this.deserialize(xbody, new WmlBody());\r\n        this.parseBodyElements(xbody, result.body);\r\n        return result;\r\n    }\r\n\r\n    parseFooter(xmlDoc: Element): WmlFooter {\r\n        return this.parseBodyElements(xmlDoc, new WmlFooter());\r\n    }\r\n\r\n    parseHeader(xmlDoc: Element): WmlHeader {\r\n        return this.parseBodyElements(xmlDoc, new WmlHeader());\r\n    }\r\n\r\n    parseBodyElements<T extends DocxContainer>(elem: Element, output: T): T {\r\n        for(let e of globalXmlParser.elements(elem)) {\r\n            switch (e.localName) {\r\n                case \"p\":\r\n                    output.children.push(this.parseParagraph(e));\r\n                    break;\r\n\r\n                case \"tbl\":\r\n                    output.children.push(this.parseTable(e));\r\n                    break;\r\n            }   \r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    parseStylesFile(xstyles: Element): IDomStyle[] {\r\n        var result = [];\r\n\r\n        xml.foreach(xstyles, n => {\r\n            switch (n.localName) {\r\n                case \"style\":\r\n                    result.push(this.parseStyle(n));\r\n                    break;\r\n\r\n                case \"docDefaults\":\r\n                    result.push(this.parseDefaultStyles(n));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseDefaultStyles(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: null,\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: []\r\n        };\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"rPrDefault\":\r\n                    var rPr = globalXmlParser.element(c, \"rPr\");\r\n\r\n                    if (rPr)\r\n                        result.styles.push({\r\n                            target: \"span\",\r\n                            values: this.parseDefaultProperties(rPr, {})\r\n                        });\r\n                    break;\r\n\r\n                case \"pPrDefault\":\r\n                    var pPr = globalXmlParser.element(c, \"pPr\");\r\n\r\n                    if (pPr) {\r\n                        result.styles.push({\r\n                            target: \"p\",\r\n                            values: this.parseDefaultProperties(pPr, {})\r\n                        });\r\n                        result.paragraphProps = parseParagraphProperties(pPr, globalXmlParser);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseStyle(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: xml.stringAttr(node, \"styleId\"),\r\n            isDefault: xml.boolAttr(node, \"default\"),\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: [],\r\n            linked: null\r\n        };\r\n\r\n        switch (xml.stringAttr(node, \"type\")) {\r\n            case \"paragraph\": result.target = \"p\"; break;\r\n            case \"table\": result.target = \"table\"; break;\r\n            case \"character\": result.target = \"span\"; break;\r\n        }\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"basedOn\":\r\n                    result.basedOn = xml.className(n, \"val\");\r\n                    break;\r\n\r\n                case \"name\":\r\n                    result.name = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"link\":\r\n                    result.linked = xml.className(n, \"val\");\r\n                    break;\r\n                \r\n                case \"next\":\r\n                    result.next = xml.className(n, \"val\");\r\n                    break;\r\n    \r\n                case \"aliases\":\r\n                    result.aliases = xml.stringAttr(n, \"val\").split(\",\");\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    result.styles.push({\r\n                        target: \"p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.paragraphProps = parseParagraphProperties(n, globalXmlParser);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.styles.push({\r\n                        target: \"span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.runProps = parseRunProperties(n, globalXmlParser);\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.styles.push({\r\n                        target: \"td\", //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblStylePr\":\r\n                    for (let s of this.parseTableStyle(n))\r\n                        result.styles.push(s);\r\n                    break;\r\n\r\n                case \"rsid\":\r\n                case \"qFormat\":\r\n                case \"hidden\":\r\n                case \"semiHidden\":\r\n                case \"unhideWhenUsed\":\r\n                case \"autoRedefine\":\r\n                case \"uiPriority\":\r\n                    //TODO: ignore\r\n                    break;\r\n\r\n                default:\r\n                    this.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableStyle(node: Element): IDomSubStyle[] {\r\n        var result = [];\r\n\r\n        var type = xml.stringAttr(node, \"type\");\r\n        var selector = \"\";\r\n\r\n        switch (type) {\r\n            case \"firstRow\": selector = \"tr.first-row td\"; break;\r\n            case \"lastRow\": selector = \"tr.last-row td\"; break;\r\n            case \"firstCol\": selector = \"td.first-col\"; break;\r\n            case \"lastCol\": selector = \"td.last-col\"; break;\r\n            case \"band1Vert\": selector = \"td.odd-col\"; break;\r\n            case \"band2Vert\": selector = \"td.even-col\"; break;\r\n            case \"band1Horz\": selector = \"tr.odd-row\"; break;\r\n            case \"band2Horz\": selector = \"tr.even-row\"; break;\r\n            default: return [];\r\n        }\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    result.push({\r\n                        target: selector + \" p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.push({\r\n                        target: selector + \" span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.push({\r\n                        target: selector, //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingFile(xnums: Element): IDomNumbering[] {\r\n        var result = [];\r\n        var mapping = {};\r\n        var bullets = [];\r\n\r\n        xml.foreach(xnums, n => {\r\n            switch (n.localName) {\r\n                case \"abstractNum\":\r\n                    this.parseAbstractNumbering(n, bullets)\r\n                        .forEach(x => result.push(x));\r\n                    break;\r\n\r\n                case \"numPicBullet\":\r\n                    bullets.push(this.parseNumberingPicBullet(n));\r\n                    break;\r\n\r\n                case \"num\":\r\n                    var numId = xml.stringAttr(n, \"numId\");\r\n                    var abstractNumId = xml.elementStringAttr(n, \"abstractNumId\", \"val\");\r\n                    mapping[abstractNumId] = numId;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        result.forEach(x => x.id = mapping[x.id]);\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n        var pict = globalXmlParser.element(elem, \"pict\");\r\n        var shape = pict && globalXmlParser.element(pict, \"shape\");\r\n        var imagedata = shape && globalXmlParser.element(shape, \"imagedata\");\r\n\r\n        return imagedata ? {\r\n            id: xml.intAttr(elem, \"numPicBulletId\"),\r\n            src: xml.stringAttr(imagedata, \"id\"),\r\n            style: xml.stringAttr(shape, \"style\")\r\n        } : null;\r\n    }\r\n\r\n    parseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n        var result = [];\r\n        var id = xml.stringAttr(node, \"abstractNumId\");\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"lvl\":\r\n                    result.push(this.parseNumberingLevel(id, n, bullets));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n        var result: IDomNumbering = {\r\n            id: id,\r\n            level: xml.intAttr(node, \"ilvl\"),\r\n            style: {}\r\n        };\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    this.parseDefaultProperties(n, result.style);\r\n                    break;\r\n\r\n                case \"lvlPicBulletId\":\r\n                    var id = xml.intAttr(n, \"val\");\r\n                    result.bullet = bullets.filter(x => x.id == id)[0];\r\n                    break;\r\n\r\n                case \"lvlText\":\r\n                    result.levelText = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"numFmt\":\r\n                    result.format = xml.stringAttr(n, \"val\");\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    parseParagraph(node: Element): WmlParagraph {\r\n        const result = this.deserialize(node, new WmlParagraph());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n\r\n                case \"hyperlink\":\r\n                    result.children.push(this.parseHyperlink(c, result));\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    this.parseParagraphProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n        this.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n            if(parseParagraphProperty(c, paragraph.props, globalXmlParser))\r\n                return true;\r\n\r\n            switch (c.localName) {\r\n                case \"pStyle\":\r\n                    utils.addElementClass(paragraph, xml.className(c, \"val\"));\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    utils.addElementClass(paragraph, values.classNameOfCnfStyle(c));\r\n                    break;\r\n\r\n                case \"framePr\":\r\n                    this.parseFrame(c, paragraph);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseFrame(node: Element, paragraph: WmlParagraph) {\r\n        var dropCap = xml.stringAttr(node, \"dropCap\");\r\n\r\n        if (dropCap == \"drop\")\r\n            paragraph.cssStyle[\"float\"] = \"left\";\r\n    }\r\n\r\n    parseHyperlink(node: Element, parent?: DocxElement): WmlHyperlink {\r\n        var result = this.deserialize(node, new WmlHyperlink(parent));\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRun(node: Element, parent?: DocxElement): WmlRun {\r\n        var result = this.deserialize(node, new WmlRun(parent));\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"drawing\":\r\n                    let d = this.parseDrawing(c);\r\n\r\n                    if (d)\r\n                        result.children = [d];\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    this.parseRunProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRunProperties(elem: Element, run: WmlRun) {\r\n\r\n        Object.assign(run.props, parseRunProperties(elem, globalXmlParser));\r\n\r\n        this.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"rStyle\":\r\n                    run.className = xml.className(c, \"val\");\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDrawing(node: Element): DocxElement {\r\n        for (var n of globalXmlParser.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"inline\":\r\n                case \"anchor\":\r\n                    return this.parseDrawingWrapper(n);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseDrawingWrapper(node: Element): DocxElement {\r\n        var result = new WmlDrawing();\r\n        var isAnchor = node.localName == \"anchor\";\r\n\r\n        //TODO\r\n        // result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n        // result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n        // result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n        // result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n        let wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null; \r\n        let simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n        let posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n        let posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n        for (var n of globalXmlParser.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"simplePos\":\r\n                    if (simplePos) {\r\n                        posX.offset = xml.sizeAttr(n, \"x\", SizeType.Emu);\r\n                        posY.offset = xml.sizeAttr(n, \"y\", SizeType.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"extent\":\r\n                    result.cssStyle[\"width\"] = xml.sizeAttr(n, \"cx\", SizeType.Emu);\r\n                    result.cssStyle[\"height\"] = xml.sizeAttr(n, \"cy\", SizeType.Emu);\r\n                    break;\r\n\r\n                case \"positionH\":\r\n                case \"positionV\":\r\n                    if (!simplePos) {\r\n                        let pos = n.localName == \"positionH\" ? posX : posY;\r\n                        var alignNode = globalXmlParser.element(n, \"align\");\r\n                        var offsetNode = globalXmlParser.element(n, \"posOffset\");\r\n\r\n                        if (alignNode)\r\n                            pos.align = alignNode.textContent;\r\n\r\n                        if (offsetNode)\r\n                            pos.offset = xml.sizeValue(offsetNode, SizeType.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"wrapTopAndBottom\":\r\n                    wrapType = \"wrapTopAndBottom\";\r\n                    break;\r\n                \r\n                case \"wrapNone\":\r\n                    wrapType = \"wrapNone\";\r\n                    break;\r\n\r\n                case \"graphic\":\r\n                    var g = this.parseGraphic(n);\r\n\r\n                    if (g)\r\n                        result.children.push(g);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (wrapType == \"wrapTopAndBottom\") {\r\n            result.cssStyle['display'] = 'block';\r\n\r\n            if (posX.align) {\r\n                result.cssStyle['text-align'] = posX.align;\r\n                result.cssStyle['width'] = \"100%\";\r\n            }\r\n        }\r\n        else if(wrapType == \"wrapNone\") {\r\n            result.cssStyle['display'] = 'block';\r\n            result.cssStyle['position'] = 'relative';\r\n            result.cssStyle[\"width\"] = \"0px\";\r\n            result.cssStyle[\"height\"] = \"0px\";\r\n\r\n            if(posX.offset)\r\n                result.cssStyle[\"left\"] = posX.offset;\r\n            if(posY.offset)\r\n                result.cssStyle[\"top\"] = posY.offset;\r\n        }\r\n        else if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n            result.cssStyle[\"float\"] = posX.align;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseGraphic(elem: Element): DocxElement {\r\n        var graphicData = globalXmlParser.element(elem, \"graphicData\");\r\n\r\n        for (let n of globalXmlParser.elements(graphicData)) {\r\n            switch (n.localName) {\r\n                case \"pic\":\r\n                    return this.parsePicture(n);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parsePicture(elem: Element): DmlPicture {\r\n        var result = new DmlPicture();\r\n        var blipFill = globalXmlParser.element(elem, \"blipFill\");\r\n        var blip = globalXmlParser.element(blipFill, \"blip\");\r\n\r\n        result.resourceId = xml.stringAttr(blip, \"embed\");\r\n\r\n        var spPr = globalXmlParser.element(elem, \"spPr\");\r\n        var xfrm = globalXmlParser.element(spPr, \"xfrm\");\r\n\r\n        result.cssStyle[\"position\"] = \"relative\";\r\n\r\n        for (var n of globalXmlParser.elements(xfrm)) {\r\n            switch (n.localName) {\r\n                case \"ext\":\r\n                    result.cssStyle[\"width\"] = xml.sizeAttr(n, \"cx\", SizeType.Emu);\r\n                    result.cssStyle[\"height\"] = xml.sizeAttr(n, \"cy\", SizeType.Emu);\r\n                    break;\r\n\r\n                case \"off\":\r\n                    result.cssStyle[\"left\"] = xml.sizeAttr(n, \"x\", SizeType.Emu);\r\n                    result.cssStyle[\"top\"] = xml.sizeAttr(n, \"y\", SizeType.Emu);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTable(node: Element): WmlTable {\r\n        var result = this.deserialize(node, new WmlTable());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tr\":\r\n                    result.children.push(this.parseTableRow(c));\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                    this.parseTableProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableProperties(elem: Element, table: WmlTable) {\r\n        table.cssStyle = {};\r\n        table.cellStyle = {};\r\n\r\n        this.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n            switch (c.localName) {\r\n                case \"tblStyle\":\r\n                    table.className = xml.className(c, \"val\");\r\n                    break;\r\n\r\n                case \"tblLook\":\r\n                    utils.addElementClass(table, values.classNameOftblLook(c));\r\n                    break;\r\n\r\n                case \"tblpPr\":\r\n                    this.parseTablePosition(c, table);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        switch (table.cssStyle[\"text-align\"]) {\r\n            case \"center\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                table.cssStyle[\"margin-right\"] = \"auto\";\r\n                break;\r\n\r\n            case \"right\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    parseTablePosition(node: Element, table: WmlTable) {\r\n        var topFromText = xml.sizeAttr(node, \"topFromText\");\r\n        var bottomFromText = xml.sizeAttr(node, \"bottomFromText\");\r\n        var rightFromText = xml.sizeAttr(node, \"rightFromText\");\r\n        var leftFromText = xml.sizeAttr(node, \"leftFromText\");\r\n\r\n        table.cssStyle[\"float\"] = 'left';\r\n        table.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n        table.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n        table.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n        table.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n    }\r\n\r\n    parseTableRow(node: Element): WmlTableRow {\r\n        var result = this.deserialize(node, new WmlTableRow());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tc\":\r\n                    result.children.push(this.parseTableCell(c));\r\n                    break;\r\n\r\n                case \"trPr\":\r\n                    this.parseTableRowProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n        row.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"cnfStyle\":\r\n                    row.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseTableCell(node: Element): WmlTableCell {\r\n        var result = this.deserialize(node, new WmlTableCell());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tbl\":\r\n                    result.children.push(this.parseTable(c));\r\n                    break;\r\n\r\n                case \"p\":\r\n                    result.children.push(this.parseParagraph(c));\r\n                    break;\r\n\r\n                case \"tcPr\":\r\n                    this.parseTableCellProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n        cell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"gridSpan\":\r\n                    cell.span = xml.intAttr(c, \"val\", null);\r\n                    break;\r\n\r\n                case \"vMerge\": //TODO\r\n                    cell.verticalMerge = xml.sizeAttr(c, \"val\");\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    cell.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n        style = style || {};\r\n\r\n\r\n        xml.foreach(elem, c => {\r\n            switch (c.localName) {\r\n                case \"jc\":\r\n                    style[\"text-align\"] = values.valueOfJc(c);\r\n                    break;\r\n\r\n                case \"color\":\r\n                    style[\"color\"] = xml.colorAttr(c, \"val\", null, autos.color);\r\n                    break;\r\n\r\n                case \"sz\":\r\n                    style[\"font-size\"] = style[\"min-height\"] = xml.sizeAttr(c, \"val\", SizeType.FontSize);\r\n                    break;\r\n\r\n                case \"shd\":\r\n                    style[\"background-color\"] = xml.colorAttr(c, \"fill\", null, autos.shd);\r\n                    break;\r\n\r\n                case \"highlight\":\r\n                    style[\"background-color\"] = xml.colorAttr(c, \"val\", null, autos.highlight);\r\n                    break;\r\n\r\n                case \"tcW\":\r\n                    if (this.ignoreWidth)\r\n                        break;\r\n\r\n                case \"tblW\":\r\n                    style[\"width\"] = values.valueOfSize(c, \"w\");\r\n                    break;\r\n\r\n                case \"trHeight\":\r\n                    this.parseTrHeight(c, style);\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    style[\"text-decoration\"] = values.valueOfStrike(c);\r\n                    break;\r\n\r\n                case \"b\":\r\n                    style[\"font-weight\"] = values.valueOfBold(c);\r\n                    break;\r\n\r\n                case \"i\":\r\n                    style[\"font-style\"] = \"italic\";\r\n                    break;\r\n\r\n                case \"u\":\r\n                    this.parseUnderline(c, style);\r\n                    break;\r\n\r\n                case \"ind\":\r\n                case \"tblInd\":\r\n                    this.parseIndentation(c, style);\r\n                    break;\r\n\r\n                case \"rFonts\":\r\n                    this.parseFont(c, style);\r\n                    break;\r\n\r\n                case \"tblBorders\":\r\n                    this.parseBorderProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblCellSpacing\":\r\n                    style[\"border-spacing\"] = values.valueOfMargin(c);\r\n                    style[\"border-collapse\"] = \"separate\";\r\n                    break;\r\n\r\n                case \"pBdr\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n                \r\n                case \"bdr\":\r\n                    style[\"border\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"tcBorders\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n\r\n                case \"noWrap\":\r\n                    //TODO\r\n                    //style[\"white-space\"] = \"nowrap\";\r\n                    break;\r\n\r\n                case \"tblCellMar\":\r\n                case \"tcMar\":\r\n                    this.parseMarginProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblLayout\":\r\n                    style[\"table-layout\"] = values.valueOfTblLayout(c);\r\n                    break;\r\n\r\n                case \"vAlign\":\r\n                    style[\"vertical-align\"] = xml.stringAttr(c, \"val\");\r\n                    break;\r\n\r\n                case \"lang\":\r\n                case \"noProof\": //ignore spellcheck\r\n                case \"webHidden\": // maybe web-hidden should be implemented\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    if (handler != null && !handler(c))\r\n                        this.debug && console.warn(`DOCX: Unknown document element: ${c.localName}`);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return style;\r\n    }\r\n\r\n    parseUnderline(node: Element, style: Record<string, string>) {\r\n        var val = xml.stringAttr(node, \"val\");\r\n\r\n        if (val == null || val == \"none\")\r\n            return;\r\n\r\n        switch (val) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n        }\r\n\r\n        var col = xml.colorAttr(node, \"color\");\r\n\r\n        if (col)\r\n            style[\"text-decoration-color\"] = col;\r\n    }\r\n\r\n    parseFont(node: Element, style: Record<string, string>) {\r\n        var ascii = xml.stringAttr(node, \"ascii\");\r\n\r\n        if (ascii)\r\n            style[\"font-family\"] = ascii;\r\n    }\r\n\r\n    parseIndentation(node: Element, style: Record<string, string>) {\r\n        var firstLine = xml.sizeAttr(node, \"firstLine\");\r\n        var left = xml.sizeAttr(node, \"left\");\r\n        var start = xml.sizeAttr(node, \"start\");\r\n        var right = xml.sizeAttr(node, \"right\");\r\n        var end = xml.sizeAttr(node, \"end\");\r\n\r\n        if (firstLine) style[\"text-indent\"] = firstLine;\r\n        if (left || start) style[\"margin-left\"] = left || start;\r\n        if (right || end) style[\"margin-right\"] = right || end;\r\n    }\r\n\r\n    parseMarginProperties(node: Element, output: Record<string, string>) {\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"left\":\r\n                    output[\"padding-left\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"right\":\r\n                    output[\"padding-right\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"padding-top\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"padding-bottom\"] = values.valueOfMargin(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    parseTrHeight(node: Element, output: Record<string, string>) {\r\n        switch (xml.stringAttr(node, \"hRule\")) {\r\n            case \"exact\":\r\n                output[\"height\"] = xml.sizeAttr(node, \"val\");\r\n                break;\r\n\r\n            case \"atLeast\":\r\n            default:\r\n                output[\"height\"] = xml.sizeAttr(node, \"val\");\r\n                // min-height doesn't work for tr\r\n                //output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n                break;\r\n        }\r\n    }\r\n\r\n    parseBorderProperties(node: Element, output: Record<string, string>) {\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"start\":\r\n                case \"left\":\r\n                    output[\"border-left\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"end\":\r\n                case \"right\":\r\n                    output[\"border-right\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"border-top\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"border-bottom\"] = values.valueOfBorder(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nenum SizeType {\r\n    FontSize,\r\n    Dxa,\r\n    Emu,\r\n    Border,\r\n    Percent\r\n}\r\n\r\nclass xml {\r\n    static foreach(node: Element, cb: (n: Element) => void) {\r\n        for (var i = 0; i < node.childNodes.length; i++) {\r\n            let n = node.childNodes[i];\r\n\r\n            if (n.nodeType == 1)\r\n                cb(<Element>n);\r\n        }\r\n    }\r\n\r\n    static elementStringAttr(elem: Element, nodeName, attrName: string) {\r\n        var n = globalXmlParser.element(elem, nodeName)\r\n        return n ? xml.stringAttr(n, attrName) : null;\r\n    }\r\n\r\n    static stringAttr(node: Element, attrName: string) {\r\n        return globalXmlParser.attr(node, attrName);\r\n    }\r\n\r\n    static colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n        var v = xml.stringAttr(node, attrName);\r\n\r\n        switch (v) {\r\n            case \"yellow\":\r\n                return v;\r\n\r\n            case \"auto\":\r\n                return autoColor;\r\n        }\r\n\r\n        return v ? `#${v}` : defValue;\r\n    }\r\n\r\n    static boolAttr(node: Element, attrName: string, defValue: boolean = false) {\r\n        return globalXmlParser.boolAttr(node, attrName, defValue);\r\n    }\r\n\r\n    static intAttr(node: Element, attrName: string, defValue: number = 0) {\r\n        var val = xml.stringAttr(node, attrName);\r\n        return val ? parseInt(xml.stringAttr(node, attrName)) : defValue;\r\n    }\r\n\r\n    static sizeAttr(node: Element, attrName: string, type: SizeType = SizeType.Dxa) {\r\n        return xml.convertSize(xml.stringAttr(node, attrName), type);\r\n    }\r\n\r\n    static sizeValue(node: Element, type: SizeType = SizeType.Dxa) {\r\n        return xml.convertSize(node.textContent, type);\r\n    }\r\n\r\n    static convertSize(val: string, type: SizeType = SizeType.Dxa) {\r\n        if (val == null || val.indexOf(\"pt\") > -1)\r\n            return val;\r\n\r\n        var intVal = parseInt(val);\r\n\r\n        switch (type) {\r\n            case SizeType.Dxa: return (0.05 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Emu: return (intVal / 12700).toFixed(2) + \"pt\";\r\n            case SizeType.FontSize: return (0.5 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Border: return (0.125 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Percent: return (0.02 * intVal).toFixed(2) + \"%\";\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static className(node: Element, attrName: string) {\r\n        var val = xml.stringAttr(node, attrName);\r\n\r\n        return val && val.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and');\r\n    }\r\n}\r\n\r\nclass values {\r\n    static valueOfBold(c: Element) {\r\n        return xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\"\r\n    }\r\n\r\n    static valueOfSize(c: Element, attr: string) {\r\n        var type: SizeType = SizeType.Dxa;\r\n\r\n        switch (xml.stringAttr(c, \"type\")) {\r\n            case \"dxa\": break;\r\n            case \"pct\": type = SizeType.Percent; break;\r\n        }\r\n\r\n        return xml.sizeAttr(c, attr, type);\r\n    }\r\n\r\n    static valueOfStrike(c: Element) {\r\n        return xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n    }\r\n\r\n    static valueOfMargin(c: Element) {\r\n        return xml.sizeAttr(c, \"w\");\r\n    }\r\n\r\n    static valueOfBorder(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        if (type == \"nil\")\r\n            return \"none\";\r\n\r\n        var color = xml.colorAttr(c, \"color\");\r\n        var size = xml.sizeAttr(c, \"sz\", SizeType.Border);\r\n\r\n        return `${size} solid ${color == \"auto\" ? \"black\" : color}`;\r\n    }\r\n\r\n    static valueOfTblLayout(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n        return type == \"fixed\" ? \"fixed\" : \"auto\";\r\n    }\r\n\r\n    static classNameOfCnfStyle(c: Element) {\r\n        let className = \"\";\r\n        let val = xml.stringAttr(c, \"val\");\r\n        //FirstRow, LastRow, FirstColumn, LastColumn, Band1Vertical, Band2Vertical, Band1Horizontal, Band2Horizontal, NE Cell, NW Cell, SE Cell, SW Cell.\r\n\r\n        if (val[0] == \"1\") className += \" first-row\";\r\n        if (val[1] == \"1\") className += \" last-row\";\r\n        if (val[2] == \"1\") className += \" first-col\";\r\n        if (val[3] == \"1\") className += \" last-col\";\r\n        if (val[4] == \"1\") className += \" odd-col\";\r\n        if (val[5] == \"1\") className += \" even-col\";\r\n        if (val[6] == \"1\") className += \" odd-row\";\r\n        if (val[7] == \"1\") className += \" even-row\";\r\n        if (val[8] == \"1\") className += \" ne-cell\";\r\n        if (val[9] == \"1\") className += \" nw-cell\";\r\n        if (val[10] == \"1\") className += \" se-cell\";\r\n        if (val[11] == \"1\") className += \" sw-cell\";\r\n\r\n        return className.trim();\r\n    }\r\n\r\n    static valueOfJc(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"start\":\r\n            case \"left\": return \"left\";\r\n            case \"center\": return \"center\";\r\n            case \"end\":\r\n            case \"right\": return \"right\";\r\n            case \"both\": return \"justify\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static addSize(a: string, b: string): string {\r\n        if (a == null) return b;\r\n        if (b == null) return a;\r\n\r\n        return `calc(${a} + ${b})`; //TODO\r\n    }\r\n\r\n    static classNameOftblLook(c: Element) {\r\n        let className = \"\";\r\n\r\n        if (xml.boolAttr(c, \"firstColumn\")) className += \" first-col\";\r\n        if (xml.boolAttr(c, \"firstRow\")) className += \" first-row\";\r\n        if (xml.boolAttr(c, \"lastColumn\")) className += \" lat-col\";\r\n        if (xml.boolAttr(c, \"lastRow\")) className += \" last-row\";\r\n        if (xml.boolAttr(c, \"noHBand\")) className += \" no-hband\";\r\n        if (xml.boolAttr(c, \"noVBand\")) className += \" no-vband\";\r\n\r\n        return className.trim();\r\n    }\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    let result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element(\"bookmarkStart\")\r\nexport class WmlBookmarkStart extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n    @fromAttribute(\"name\")\r\n    name: string;\r\n    @fromAttribute(\"colFirst\")\r\n    colFirst: number;\r\n    @fromAttribute(\"colLast\")\r\n    colLast: number;\r\n}\r\n\r\n@element(\"bookmarkEnd\")\r\nexport class WmlBookmarkEnd extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element('br')\r\nexport class WmlBreak extends DocxElement {\r\n    @fromAttribute(\"type\")\r\n    type: \"page\" | \"column\" | \"textWrapping\";\r\n    \r\n    @fromAttribute(\"clear\")\r\n    clear: \"all\" | \"left\" | \"right\" | \"none\";\r\n}\r\n\r\n@element('lastRenderedPageBreak')\r\nexport class WmlLastRenderedPageBreak extends DocxElement {\r\n}","import { attr } from \"../parser/xml-parser\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\";\r\n\r\nexport interface Length {\r\n    value: number;\r\n    type: LengthType\r\n}\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface Underline {\r\n    color: string;\r\n    type: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: null }\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n    if (!val) {\r\n        return null;\r\n    }\r\n\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val.endsWith('pt')) {\r\n        return { value: parseFloat(val), type: 'pt' };\r\n    }\r\n\r\n    if (val.endsWith('%')) {\r\n        return { value: parseFloat(val), type: '%' };\r\n    }\r\n\r\n    return { value: parseInt(val) * usage.mul, type: usage.unit };\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseElementValue(elem: Element): string {\r\n    return attr(elem, \"val\");\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlDocument } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    documentElement: WmlDocument\r\n\r\n    parseXml(root: Element) {\r\n        this.documentElement = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","import { element, fromElement } from \"../parser/xml-serialize\";\r\nimport { DocxContainer, DocxElement } from \"./dom\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\n\r\n@element(\"document\")\r\nexport class WmlDocument extends DocxElement {\r\n    body: WmlBody;\r\n}\r\n\r\n@element(\"body\")\r\nexport class WmlBody extends DocxContainer {\r\n    @fromElement(\"sectPr\", parseSectionProperties)\r\n    sectionProps: SectionProperties;\r\n}","export class DocxElement {\r\n    className: string = null;\r\n    cssStyle: Record<string, string> = {};\r\n\r\n    constructor(public parent?: DocxElement) {\r\n    }\r\n}\r\n\r\nexport class DocxContainer extends DocxElement {\r\n    children: DocxElement[] = [];\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    style: Record<string, string>;\r\n    levelText?: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element('drawing')\r\nexport class WmlDrawing extends DocxContainer {\r\n\r\n}\r\n\r\nexport class DmlPicture extends DocxContainer {\r\n    resourceId: string;\r\n    stretch: any;\r\n    offset: any;\r\n    size: any;\r\n}\r\n\r\nexport function parseDmlPicture(elem: Element, output: DmlPicture, xml: XmlParser = globalXmlParser) {\r\n    const blipFill = xml.element(elem, \"blipFill\");\r\n    const blip = xml.element(blipFill, \"blip\");\r\n\r\n    output.resourceId = xml.attr(blip, \"embed\");\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { convertBoolean, convertLength } from \"./common\";\r\nimport { DocxContainer, DocxElement } from \"./dom\";\r\n\r\n@element('fldChar')\r\nexport class WmlFieldChar extends DocxElement {\r\n    @fromAttribute('fldCharType')\r\n    type: 'begin' | 'end' | 'separate'; \r\n}\r\n\r\n@element('fldSimple')\r\nexport class WmlFieldSimple extends DocxContainer {\r\n    @fromAttribute(\"dirty\", convertBoolean)\r\n    dirty: boolean;\r\n\r\n    @fromAttribute(\"fldLock\", convertBoolean)\r\n    lock: boolean;\r\n\r\n    @fromAttribute(\"instr\")\r\n    instruction: string;\r\n}","import globalXmlParser from \"../parser/xml-parser\";\r\nimport { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element('hyperlink')\r\nexport class WmlHyperlink extends DocxContainer {\r\n    @fromAttribute('anchor')\r\n    anchor?: string;\r\n\r\n    protected parse(elem: Element) {\r\n        this.anchor = globalXmlParser.attr(elem, \"anchor\");\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Indentation {\r\n    start: Length;\r\n    end: Length;\r\n    hanging: Length;\r\n    firstLine: Length;\r\n}\r\n\r\nexport function parseIndentation(elem: Element, xml: XmlParser): Indentation {\r\n    return {\r\n        start: xml.lengthAttr(elem, \"start\"),\r\n        end: xml.lengthAttr(elem, \"end\"),\r\n        hanging: xml.lengthAttr(elem, \"hanging\"),\r\n        firstLine: xml.lengthAttr(elem, \"firstLine\"),\r\n    } as Indentation;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: Length;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    const lineRule = xml.attr(elem, \"lineRule\");\r\n\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.lengthAttr(elem, \"line\", lineRule === 'auto' ? LengthUsage.LineHeight : LengthUsage.Dxa),\r\n        lineRule\r\n    } as LineSpacing;\r\n}","import { DocxContainer } from \"./dom\";\r\nimport { Length, ns } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\nimport { children, element } from \"../parser/xml-serialize\";\r\nimport { WmlBookmarkEnd, WmlBookmarkStart } from \"./bookmarks\";\r\nimport { WmlFieldSimple } from \"./fields\";\r\nimport { Indentation, parseIndentation } from \"./indentation\";\r\n\r\n@element(\"p\")\r\n@children(WmlBookmarkStart, WmlBookmarkEnd, WmlFieldSimple)\r\nexport class WmlParagraph extends DocxContainer {\r\n    props: ParagraphProperties = {} as ParagraphProperties;\r\n}\r\n\r\nexport interface ParagraphProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    indentation: Indentation;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n    styleId: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            break;\r\n\r\n        case \"ind\":\r\n            props.indentation = parseIndentation(elem, xml);\r\n            return false;\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleId = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { children, element } from \"../parser/xml-serialize\";\r\nimport { Border, parseBorder } from \"./border\";\r\nimport { WmlBreak, WmlLastRenderedPageBreak } from \"./breaks\";\r\nimport { Length, LengthUsage, Underline } from \"./common\";\r\nimport { DocxContainer } from \"./dom\";\r\nimport { WmlDrawing } from \"./drawing\";\r\nimport { WmlFieldChar } from \"./fields\";\r\nimport { WmlInstructionText, WmlSymbol, WmlTab, WmlText } from \"./text\";\r\n\r\n@element('r')\r\n@children(WmlText, WmlSymbol, WmlTab, WmlBreak, WmlInstructionText, WmlFieldChar, WmlLastRenderedPageBreak, WmlDrawing)\r\nexport class WmlRun extends DocxContainer {\r\n    id?: string;\r\n    styleName: string;\r\n    props: RunProperties = <RunProperties>{};\r\n}\r\n\r\nexport interface RunProperties {\r\n    styleName: string;\r\n    fontSize: Length;\r\n    color: string;\r\n    bold: boolean;\r\n    italics: boolean;\r\n    caps: boolean;\r\n    smallCaps: boolean;\r\n    strike: boolean;\r\n    doubleStrike: boolean;\r\n    outline: boolean;\r\n    imprint: boolean;\r\n    underline: Underline;\r\n    border: Border;\r\n    fonts: RunFonts;\r\n    shading: Shading;\r\n    highlight: string;\r\n    spacing: Length;\r\n    stretch: number;\r\n    verticalAlignment: 'baseline' | 'superscript' | 'subscript' | string;\r\n}\r\n\r\nexport interface Shading {\r\n    foreground: string,\r\n    background: string,\r\n    type: string\r\n}\r\n\r\nexport interface RunFonts {\r\n    ascii: string;\r\n    hAscii: string;\r\n    cs: string;\r\n    eastAsia: string;\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    switch (elem.localName) {\r\n        case 'rStyle': \r\n            props.styleName = xml.attr(elem, 'val');\r\n            break;\r\n\r\n        case 'bdr': \r\n            props.border = parseBorder(elem, xml);\r\n            break;\r\n\r\n        case 'rFonts': \r\n            props.fonts = parseRunFonts(elem, xml);\r\n            break;\r\n\r\n        case 'shd': \r\n            props.shading = parseShading(elem, xml);\r\n            break;\r\n\r\n        case 'highlight': \r\n            props.highlight = xml.attr(elem, 'val');\r\n            break;\r\n        \r\n        case 'spacing':\r\n            props.spacing = xml.lengthAttr(elem, 'val');\r\n            break;\r\n\r\n        case 'w':\r\n            props.stretch = xml.percentageAttr(elem, 'val');\r\n            break;\r\n\r\n            case \"color\": \r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        case \"b\":\r\n            props.bold = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"strike\":\r\n            props.strike = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"dstrike\":\r\n            props.doubleStrike = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"i\":\r\n            props.italics = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"u\":\r\n            props.underline = {\r\n                color: xml.attr(elem, \"color\"),\r\n                type: xml.attr(elem, 'val')\r\n            };\r\n            break;\r\n            \r\n        case 'caps':\r\n            props.caps = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'smallCaps':\r\n            props.smallCaps = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'imprint':\r\n            props.imprint = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'outline':\r\n            props.outline = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'vertAlign':\r\n            props.verticalAlignment = xml.attr(elem, 'val');\r\n            break;\r\n        \r\n        case 'emboss':\r\n        case 'shadow':\r\n        case 'vanish':\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseRunFonts(elem: Element, xml: XmlParser): RunFonts {\r\n    return {\r\n        ascii: xml.attr(elem, 'ascii'),\r\n        hAscii: xml.attr(elem, 'hAscii'),\r\n        cs: xml.attr(elem, 'cs'),\r\n        eastAsia: xml.attr(elem, 'eastAsia'),\r\n    };\r\n}\r\n\r\nexport function parseShading(elem: Element, xml: XmlParser): Shading {\r\n    return {\r\n        type: xml.attr(elem, 'val'),\r\n        foreground: xml.attr(elem, 'color'),\r\n        background: xml.attr(elem, 'fill')\r\n    };\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length, \r\n    height: Length, \r\n    orientation: \"landscape\" | string \r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\", \r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string;\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n            \r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tc\")\r\nexport class WmlTableCell extends DocxContainer {\r\n    span?: number;\r\n    verticalMerge: string;\r\n}","import { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tr\")\r\nexport class WmlTableRow extends DocxContainer {\r\n}","import globalXmlParser, { attr, elements, XmlParser } from \"../parser/xml-parser\";\r\nimport { element, fromElement } from \"../parser/xml-serialize\";\r\nimport { Length } from \"./common\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tbl\")\r\nexport class WmlTable extends DocxContainer {\r\n    @fromElement(\"tblGrid\", parseTableColumns)\r\n    columns?: TableColumn[];\r\n    @fromElement(\"tblPr\", parseTableProperties)\r\n    props: TableProperties;\r\n\r\n    cellStyle?: Record<string, string>;\r\n}\r\n\r\nexport interface TableColumn {\r\n    width?: Length;\r\n}\r\n\r\nexport interface TableProperties {\r\n    alignment: string;\r\n    caption: string;\r\n    tableLook: TableLook;\r\n}\r\n\r\nexport function parseTableProperties(elem: Element): TableProperties {\r\n    const result = {} as TableProperties;\r\n\r\n    for (const e of elements(elem)) {\r\n        switch(e.localName) {\r\n            case \"jc\":\r\n                result.alignment = attr(e, \"val\");\r\n                break;\r\n                \r\n            case \"tblCaption\":\r\n                result.caption = attr(e, \"val\");\r\n                break;\r\n\r\n            case \"tblLook\":\r\n                result.tableLook = parseTableLook(e);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport interface TableLook {\r\n    firstColumn: boolean;\r\n    firstRow: boolean;\r\n    lastColumn: boolean;\r\n    lastRow: boolean;\r\n    noHBand: boolean;\r\n    noVBand: boolean;\r\n}\r\n\r\nexport function parseTableLook(elem: Element, xml: XmlParser = globalXmlParser): TableLook {\r\n    //TODO\r\n    const intVal = xml.intAttr(elem, \"val\");\r\n\r\n    return {\r\n        firstColumn: xml.boolAttr(elem, 'firstColumn'),\r\n        firstRow: xml.boolAttr(elem, 'firstRow'),\r\n        lastColumn: xml.boolAttr(elem, 'lastColumn'),\r\n        lastRow: xml.boolAttr(elem, 'lastRow'),\r\n        noHBand: xml.boolAttr(elem, 'noHBand'),\r\n        noVBand: xml.boolAttr(elem, 'noVBand')\r\n    }\r\n}\r\n\r\nexport function parseTableColumns(elem: Element, xml: XmlParser = globalXmlParser): TableColumn[] {\r\n    return xml.elements(elem, 'gridCol').map(e => (<TableColumn>{\r\n        width: xml.lengthAttr(e, \"w\")\r\n    }));\r\n}","import { element, fromAttribute, fromText } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element('t')\r\nexport class WmlText extends DocxElement {\r\n    @fromText()\r\n    text: string;\r\n}\r\n\r\n@element('sym')\r\nexport class WmlSymbol extends DocxElement {\r\n    @fromAttribute('font')\r\n    font: string;\r\n    @fromAttribute('char')\r\n    char: string;\r\n}\r\n\r\n@element('tab')\r\nexport class WmlTab extends DocxElement {\r\n}\r\n\r\n@element(\"instrText\")\r\nexport class WmlInstructionText extends DocxElement {\r\n    @fromText()\r\n    text: string;\r\n}","import { WordDocument } from './word-document';\r\nimport { DocumentParser } from './document-parser';\r\nimport { HtmlRenderer } from './html-renderer';\r\nimport { __extends } from 'tslib';\r\n\r\nexport interface Options {\r\n    trimXmlDeclaration: boolean;\r\n    inWrapper: boolean;\r\n    ignoreWidth: boolean;\r\n    ignoreHeight: boolean;\r\n    ignoreFonts: boolean;\r\n    breakPages: boolean;\r\n    ignoreLastRenderedPageBreak: boolean;\r\n    debug: boolean;\r\n    experimental: boolean;\r\n    className: string;\r\n    keepOrigin: boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    trimXmlDeclaration: false,\r\n    keepOrigin: false,\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n}\r\n\r\nexport function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null) {\r\n    var parser = new DocumentParser();\r\n    var renderer = new HtmlRenderer(window.document);\r\n\r\n    var options: Options = { \r\n        ...defaults,\r\n        ...userOptions\r\n    };\r\n\r\n    Object.assign(parser, options);\r\n    Object.assign(renderer, options);\r\n\r\n    return WordDocument.load(data, parser, options).then(doc => {\r\n        renderer.render(doc, bodyContainer, styleContainer, options);\r\n        return doc;\r\n    })\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    fontKey: string,\r\n    refId: string\r\n}\r\n\r\nexport function parseFonts(root: Element, xmlParser: XmlParser): FontDeclaration[] {\r\n    return xmlParser.elements(root).map(el => parseFont(el, xmlParser));\r\n}\r\n\r\nexport function parseFont(elem: Element, xmlParser: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xmlParser.attr(elem, \"name\")\r\n    };\r\n\r\n    for (let el of xmlParser.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xmlParser.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xmlParser.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n                result.fontKey = xmlParser.attr(el, \"fontKey\");\r\n                result.refId = xmlParser.attr(el, \"id\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlFooter } from \"./footer\";\r\n\r\nexport class FooterPart extends Part {\r\n    footerElement: WmlFooter;\r\n    \r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    parseXml(root: Element) {\r\n        this.footerElement = this._documentParser.parseFooter(root);\r\n    }\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element } from \"../parser/xml-serialize\";\r\n\r\n@element(\"ftr\")\r\nexport class WmlFooter extends DocxContainer {\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlHeader } from \"./header\";\r\n\r\nexport class HeaderPart extends Part {\r\n    headerElement: WmlHeader;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.headerElement = this._documentParser.parseHeader(root);\r\n    }\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element } from \"../parser/xml-serialize\";\r\n\r\n@element(\"hdr\")\r\nexport class WmlHeader extends DocxContainer {\r\n}","import { WordDocument } from './word-document';\r\nimport { IDomNumbering, DocxContainer, DocxElement } from './document/dom';\r\nimport { Length, Underline } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { WmlParagraph, ParagraphProperties } from './document/paragraph';\r\nimport { appendClass, keyBy, mergeDeep } from './utils';\r\nimport { updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { SectionProperties } from './document/section';\r\nimport { WmlRun, RunFonts, RunProperties, Shading } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { NumberingPartProperties } from './numbering/numbering';\r\nimport { Border } from './document/border';\r\nimport { TableColumn, WmlTable } from './document/table';\r\nimport { WmlTableRow } from './document/table-row';\r\nimport { WmlTableCell } from './document/table-cell';\r\nimport { WmlHyperlink } from './document/hyperlink';\r\nimport { WmlDrawing, DmlPicture } from './document/drawing';\r\nimport { WmlBreak, WmlLastRenderedPageBreak } from './document/breaks';\r\nimport { WmlSymbol, WmlTab, WmlText } from './document/text';\r\nimport { LineSpacing } from './document/line-spacing';\r\nimport { WmlStyle } from './styles/style';\r\nimport { WmlHeader } from './header/header';\r\nimport { WmlFooter } from './footer/footer';\r\nimport { WmlBody } from './document/document';\r\n\r\nconst knownColors = ['black','blue','cyan','darkBlue','darkCyan','darkGray','darkGreen','darkMagenta','darkRed','darkYellow','green','lightGray','magenta','none','red','white','yellow'];\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport class HtmlRenderer {\r\n\r\n    inWrapper: boolean = true;\r\n    className: string = \"docx\";\r\n    document: WordDocument;\r\n    options: Options;\r\n    domStyleMap: Record<string, IDomStyle>;\r\n    styleMap: Record<string, WmlStyle>;\r\n    keepOrigin: boolean = false;\r\n    renderHeaders: boolean = true;\r\n    renderFooters: boolean = true;\r\n\r\n    constructor(private htmlDocument: HTMLDocument) {\r\n    }\r\n\r\n    render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        this.domStyleMap = null;\r\n\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        removeAllElements(styleContainer);\r\n        removeAllElements(bodyContainer);\r\n\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n        \r\n        if (document.stylesPart != null) {\r\n            this.domStyleMap = this.processDomStyles(document.stylesPart.domStyles);\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docx document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.domStyles));\r\n        }\r\n\r\n        if (document.numberingPart) {\r\n            appendComment(styleContainer, \"docx document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n\r\n        if(!options.ignoreFonts && document.fontTablePart)\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n\r\n        var sectionElements = this.renderSections(document.documentPart.documentElement.body);\r\n\r\n        if (this.inWrapper) {\r\n            var wrapper = this.renderWrapper();\r\n            appentElements(wrapper, sectionElements);\r\n            bodyContainer.appendChild(wrapper);\r\n        }\r\n        else {\r\n            appentElements(bodyContainer, sectionElements);\r\n        }\r\n    }\r\n\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n        for(let f of fontsPart.fonts.filter(x => x.refId)) {\r\n            this.document.loadFont(f.refId, f.fontKey).then(fontData => {\r\n                var cssTest = `@font-face {\r\n                    font-family: \"${f.name}\";\r\n                    src: url(${fontData});\r\n                }`;\r\n\r\n                appendComment(styleContainer, `Font ${f.name}`);\r\n                styleContainer.appendChild(createStyleElement(cssTest));\r\n            });\r\n        }\r\n    }\r\n\r\n    processClassName(className: string) {\r\n        if (!className)\r\n            return this.className;\r\n\r\n        return `${this.className}_${className}`;\r\n    }\r\n\r\n    processStyles(styles: WmlStyle[]) {\r\n        const styleMap = keyBy(styles, s => s.id);\r\n\r\n        for(let style of styles.filter(s => s.basedOn)) {\r\n            const baseStyle = styleMap[style.basedOn];\r\n        \r\n            if(baseStyle) {\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        return styleMap;\r\n    }\r\n\r\n    processDomStyles(styles: IDomStyle[]) {\r\n        var domStylesMap: Record<string, IDomStyle> = {};\r\n\r\n        for (let style of styles.filter(x => x.id != null)) {\r\n            domStylesMap[style.id] = style;\r\n        }\r\n\r\n        for (let style of styles.filter(x => x.basedOn)) {\r\n            var baseStyle = domStylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                for (let styleValues of style.styles) {\r\n                    var baseValues = baseStyle.styles.filter(x => x.target == styleValues.target);\r\n\r\n                    if (baseValues && baseValues.length > 0)\r\n                        this.copyStyleProperties(baseValues[0].values, styleValues.values);\r\n                }\r\n            }\r\n            else if (this.options.debug)\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processClassName(this.escapeClassName(style.id));\r\n        }\r\n\r\n        return domStylesMap;\r\n    }\r\n\r\n    processElement(element: DocxElement) {\r\n        if (\"children\" in element) {\r\n            for (var e of (element as DocxContainer).children) {\r\n                e.className = this.processClassName(e.className);\r\n                e.parent = element;\r\n\r\n                if (e instanceof WmlTable) {\r\n                    this.processTable(e);\r\n                }\r\n                else {\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processTable(table: WmlTable) {\r\n        for (var r of table.children) {\r\n            for (var c of (r as DocxContainer).children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input)\r\n            return output;\r\n\r\n        if (output == null) output = {};\r\n        if (attrs == null) attrs = Object.getOwnPropertyNames(input);\r\n\r\n        for (var key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    private createElement(tagName, props = undefined) {\r\n        return Object.assign(this.htmlDocument.createElement(tagName), props);\r\n    }\r\n\r\n    private renderContainer(elem: DocxContainer, tagName: string): HTMLElement {\r\n        const result = this.createElement(tagName);\r\n        this.renderElements(elem.children, elem, result);\r\n        return result;\r\n    }\r\n\r\n    createSection(className: string, props: SectionProperties) {\r\n        var elem = this.createElement(\"section\", { className });\r\n        \r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = this.renderLength(props.pageMargins.left);\r\n                elem.style.paddingRight = this.renderLength(props.pageMargins.right);\r\n                elem.style.paddingTop = this.renderLength(props.pageMargins.top);\r\n                elem.style.paddingBottom = this.renderLength(props.pageMargins.bottom);\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth)\r\n                    elem.style.width = this.renderLength(props.pageSize.width);\r\n                if (!this.options.ignoreHeight)\r\n                    elem.style.minHeight = this.renderLength(props.pageSize.height);\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = this.renderLength(props.columns.space);\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    renderSections(document: WmlBody): HTMLElement[] {\r\n        const result = [];\r\n\r\n        this.processElement(document);\r\n\r\n        for(let section of this.splitBySection(document.children)) {\r\n            const sectionProps = section.sectProps || document.sectionProps;\r\n            var sectionElement = this.createSection(this.className, sectionProps);\r\n\r\n            // if(this.renderHeaders && sectionProps.headerRefs) {\r\n            //     for(const headerRef of sectionProps.headerRefs) {\r\n            //     }\r\n            // }\r\n\r\n            this.renderElements(section.elements, document, sectionElement);\r\n\r\n            // if(this.renderFooters && sectionProps.footerRefs) {\r\n            //     for(const headerRef of sectionProps.footerRefs) {\r\n            //         const partPath = this.document.getPathById(this.document.documentPart, headerRef.id);\r\n            //         const part = this.document.partsMap[partPath] as FooterPart;\r\n\r\n            //         this.processElement(part.footerElement);\r\n            //         sectionElement.appendChild(this.renderElement(part.footerElement, null))\r\n            //     }\r\n            // }\r\n\r\n            result.push(sectionElement);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isPageBreakElement(elem: DocxElement): boolean {\r\n        if (elem instanceof WmlLastRenderedPageBreak)\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n\r\n        return elem instanceof WmlBreak && elem.type === \"page\";  \r\n    }\r\n\r\n    splitBySection(elements: DocxElement[]): { sectProps: SectionProperties, elements: DocxElement[] }[] {\r\n        var current = { sectProps: null, elements: [] };\r\n        var result = [current];\r\n\r\n        for(let elem of elements) {\r\n            if (elem instanceof WmlParagraph) {\r\n                const styleName = elem.props.styleId;\r\n                const s = this.styleMap && styleName ? this.styleMap[styleName] : null;\r\n            \r\n                if(s?.paragraphProps?.pageBreakBefore) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n            }\r\n\r\n            current.elements.push(elem);\r\n\r\n            if(elem instanceof WmlParagraph)\r\n            {\r\n                const p = elem as WmlParagraph;\r\n\r\n                var sectProps = p.props.sectionProps;\r\n                var pBreakIndex = -1;\r\n                var rBreakIndex = -1;\r\n                \r\n                if(this.options.breakPages && p.children.length > 0) {\r\n                    pBreakIndex = p.children.findIndex((r: DocxContainer) => {\r\n                        rBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n    \r\n                if(sectProps || pBreakIndex != -1) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n\r\n                if(pBreakIndex != -1) {\r\n                    let breakRun = p.children[pBreakIndex] as WmlRun;\r\n                    let splitRun = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if(pBreakIndex < p.children.length - 1 || splitRun) {\r\n                        var children = elem.children;\r\n                        var newParagraph = Object.assign(new WmlParagraph(), elem, { children: children.slice(pBreakIndex) });\r\n                        elem.children = children.slice(0, pBreakIndex);\r\n                        current.elements.push(newParagraph);\r\n\r\n                        if(splitRun) {\r\n                            let runChildren = breakRun.children;\r\n                            let newRun =  Object.assign(new WmlRun(), breakRun, { children: runChildren.slice(0, rBreakIndex) });\r\n                            elem.children.push(newRun);\r\n                            breakRun.children = runChildren.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let currentSectProps = null;\r\n\r\n        for (let i = result.length - 1; i >= 0; i--) {\r\n            if (result[i].sectProps == null) {\r\n                result[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = result[i].sectProps\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderLength(l: Length): string {\r\n        return l ? `${l.value.toFixed(2)}${l.type ?? ''}` : null;\r\n    }\r\n\r\n    renderColor(c: string, autoColor: string = 'black'): string {\r\n        if (/[a-f0-9]{6}/i.test(c))\r\n            return `#${c}`;\r\n\r\n        return c === 'auto' ? autoColor : c;\r\n    }\r\n\r\n    renderWrapper() {\r\n        var wrapper = document.createElement(\"div\");\r\n\r\n        wrapper.className = `${this.className}-wrapper`\r\n\r\n        return wrapper;\r\n    }\r\n\r\n    renderDefaultStyle() {\r\n        var c = this.className;\r\n        var styleText = `\r\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n.${c}-wrapper section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n.${c} { color: black; }\r\nsection.${c} { box-sizing: border-box; }\r\n.${c} table { border-collapse: collapse; }\r\n.${c} table td, .${c} table th { vertical-align: top; }\r\n.${c} p { margin: 0pt; }\r\n`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n                    \r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n    \r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(styles: IDomNumbering[], styleContainer: HTMLElement) {\r\n        var styleText = \"\";\r\n        var rootCounters = [];\r\n\r\n        for (var num of styles) {\r\n            var selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            var listStyleType = \"none\";\r\n\r\n            if (num.levelText && (num.format == \"decimal\" || num.format == \"lowerLetter\" || num.format == \"lowerRoman\")) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counter\r\n                    });\r\n                }\r\n                else {\r\n                    rootCounters.push(counter);\r\n                }\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter\r\n                });\r\n            }\r\n            else if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    var text = `.${this.className}-wrapper { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            }\r\n            else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.style\r\n            });\r\n        }\r\n\r\n        if (rootCounters.length > 0) {\r\n            styleText += this.styleToString(`.${this.className}-wrapper`, {\r\n                \"counter-reset\": rootCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        var styleText = \"\";\r\n        var stylesMap = this.domStyleMap;\r\n\r\n        for (let style of styles) {\r\n            var subStyles =  style.styles;\r\n\r\n            if(style.linked) {\r\n                var linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if(this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (var subStyle of subStyles) {\r\n                var selector = \"\";\r\n\r\n                if (style.target == subStyle.target)\r\n                    selector += `${style.target}.${style.cssName}`;\r\n                else if (style.target)\r\n                    selector += `${style.target}.${style.cssName} ${subStyle.target}`;\r\n                else\r\n                    selector += `.${style.cssName} ${subStyle.target}`;\r\n\r\n                if (style.isDefault && style.target)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                if (style.paragraphProps && subStyle.target == \"p\") {\r\n                    this.renderParagraphProperties(subStyle.values, style.paragraphProps);\r\n                }\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderElement(elem: DocxElement, parent: DocxElement): Node {\r\n        if (elem instanceof WmlParagraph) {\r\n            return this.renderParagraph(elem);\r\n        } else if (elem instanceof WmlBookmarkStart) {\r\n            return this.renderBookmarkStart(elem);\r\n        } else if (elem instanceof WmlRun) {\r\n            return this.renderRun(elem);\r\n        } else if (elem instanceof WmlText) {\r\n            return this.renderText(elem);\r\n        } else if (elem instanceof WmlSymbol) {\r\n            return this.renderSymbol(elem);\r\n        } else if (elem instanceof WmlTab) {\r\n            return this.renderTab(elem);\r\n        } else if (elem instanceof WmlTable) {\r\n            return this.renderTable(elem);\r\n        } else if (elem instanceof WmlTableRow) {\r\n            return this.renderTableRow(elem);\r\n        } else if (elem instanceof WmlTableCell) {\r\n            return this.renderTableCell(elem);\r\n        } else if (elem instanceof WmlHyperlink) {\r\n            return this.renderHyperlink(elem);\r\n        } else if (elem instanceof WmlDrawing) {\r\n            return this.renderDrawing(elem);\r\n        } else if (elem instanceof DmlPicture) {\r\n            return this.renderImage(elem);\r\n        } else if (elem instanceof WmlHeader) {\r\n            return this.renderHeader(elem);\r\n        } else if (elem instanceof WmlFooter) {\r\n            return this.renderFooter(elem);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderChildren(elem: DocxContainer, into?: HTMLElement): Node[] {\r\n        return this.renderElements(elem.children, elem, into);\r\n    }\r\n\r\n    renderElements(elems: DocxElement[], parent: DocxElement, into?: HTMLElement): Node[] {\r\n        if(elems == null)\r\n            return null;\r\n\r\n        var result = elems.map(e => {\r\n            let n = this.renderElement(e, parent);\r\n\r\n            if(n && this.keepOrigin)\r\n                (n as any).$$docxElement = e;\r\n\r\n            return n;\r\n        }).filter(e => e != null);\r\n\r\n        if(into)\r\n            for(let c of result)\r\n                into.appendChild(c);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderParagraph(elem: WmlParagraph) {\r\n        var result = this.renderContainer(elem, \"p\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderParagraphProperties(result.style, elem.props);\r\n\r\n        const style = elem.props.styleId && this.styleMap?.[elem.props.styleId]; \r\n        const numbering = elem.props.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            var numberingClass = this.numberingClass(numbering.id, numbering.level ?? 0);\r\n            result.className = appendClass(result.className, numberingClass);\r\n        }\r\n\r\n        if (elem.props.styleId) {\r\n            var styleClassName = this.processClassName(this.escapeClassName(elem.props.styleId));\r\n            result.className = appendClass(result.className, styleClassName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderParagraphProperties(style: any, props: ParagraphProperties) {\r\n        for (const p in props) {\r\n            const v = props[p];\r\n\r\n            switch(p as keyof(ParagraphProperties)) {\r\n                case \"lineSpacing\":\r\n                    this.renderLineSpacing(style, v);\r\n                    break;\r\n\r\n                case \"textAlignment\":\r\n                    this.renderTextAligment(style, v);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTextAligment(style: any, v: any) {\r\n        const valuesMap = {\r\n            \"auto\": \"baseline\",\r\n            \"baseline\": \"baseline\",\r\n            \"top\": \"top\",\r\n            \"center\": \"middle\",\r\n            \"bottom\": \"bottom\"\r\n        }\r\n\r\n        if(v in valuesMap)\r\n            style['vertical-align'] = valuesMap[v];\r\n    }\r\n\r\n    renderLineSpacing(style: any, spacing: LineSpacing) {   \r\n        if (spacing.after) {\r\n            style[\"margin-bottom\"] = this.renderLength(spacing.after)\r\n        }\r\n\r\n        if (spacing.before) {\r\n            style[\"margin-top\"] = this.renderLength(spacing.before)\r\n        }\r\n\r\n        switch(spacing.lineRule) {\r\n            case 'atLeast':\r\n                style['line-height'] = `calc(100% - ${this.renderLength(spacing.line)})`;\r\n                break;\r\n            case 'auto':\r\n                style['line-height'] = this.renderLength(spacing.line);\r\n                break;\r\n            case 'exactly':\r\n                //TODO: setting min-height maybe not needed\r\n                style['line-height'] = style['min-height'] = this.renderLength(spacing.line);\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        for (const p in props) {\r\n            const v = props[p];\r\n\r\n            switch (p as keyof(RunProperties)) {\r\n                case 'highlight':\r\n                    style['background'] = this.renderColor(v);\r\n                    break;\r\n\r\n                case 'shading':\r\n                    style['background'] = this.renderShading(v);\r\n                    break;\r\n\r\n                case 'border':\r\n                    style['border'] = this.renderBorder(v);\r\n                    break;\r\n\r\n                case 'color':\r\n                    style[\"color\"] = this.renderColor(v);\r\n                    break;\r\n\r\n                case 'fontSize':\r\n                    style[\"font-size\"] = this.renderLength(v);\r\n                    break;\r\n\r\n                case 'bold':\r\n                    style[\"font-weight\"] = v ? 'bold' : 'normal';\r\n                    break;\r\n\r\n                case 'italics':\r\n                    style[\"font-style\"] = v ? 'italic' : 'normal';\r\n                    break;\r\n\r\n                case 'smallCaps':\r\n                    style[\"font-size\"] = v ? 'smaller' : 'none';\r\n                case 'caps':\r\n                    style[\"text-transform\"] = v ? 'uppercase' : 'none';\r\n                    break;\r\n                    \r\n                case 'strike':\r\n                    style[\"text-decoration\"] = v ? 'line-through' : 'none';\r\n                    break;\r\n\r\n                case 'fonts':\r\n                    style[\"font-family\"] = this.renderRunFonts(v);\r\n                    break;\r\n    \r\n                case 'underline':\r\n                    this.renderUnderline(style, v);\r\n                    break;\r\n                \r\n                case 'verticalAlignment':\r\n                    this.renderRunVerticalAlignment(style, v);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderRunVerticalAlignment(style: any, align: string) {\r\n        switch(align) {\r\n            case 'subscript': \r\n                style['vertical-align'] = 'sub';\r\n                style['font-size'] = 'small';\r\n                break;\r\n\r\n            case 'superscript': \r\n                style['vertical-align'] = 'super';\r\n                style['font-size'] = 'small';\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderRunFonts(fonts: RunFonts) {\r\n        return [fonts.ascii, fonts.hAscii, fonts.cs, fonts.eastAsia].filter(x => x).map(x => `'${x}'`).join(',');\r\n    }\r\n\r\n    renderBorder(border: Border) {\r\n        if (border.type == 'nil')\r\n            return 'none';\r\n\r\n        return `${this.renderLength(border.size)} solid ${this.renderColor(border.color)}`;\r\n    }\r\n    \r\n    renderShading(shading: Shading) {\r\n        if (shading.type == 'clear')\r\n            return this.renderColor(shading.background, autos.shd);\r\n        \r\n        return this.renderColor(shading.background, autos.shd);\r\n    }\r\n    \r\n    renderUnderline(style: any, underline: Underline) {\r\n        if (underline.type == null || underline.type == \"none\")\r\n            return;\r\n\r\n        switch (underline.type) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n        }\r\n\r\n        if (underline.color)\r\n            style[\"text-decoration-color\"] = this.renderColor(underline.color);\r\n    }\r\n\r\n    renderHyperlink(elem: WmlHyperlink) {\r\n        var result = this.createElement(\"a\");\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.anchor)\r\n            result.href = elem.anchor;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderDrawing(elem: WmlDrawing) {\r\n        var result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderImage(elem: DmlPicture) {\r\n        let result = this.createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            this.document.loadDocumentImage(elem.resourceId).then(x => {\r\n                result.src = x;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderHeader(elem: WmlHeader) {\r\n        return this.renderContainer(elem, \"header\");\r\n    }\r\n\r\n    renderFooter(elem: WmlHeader) {\r\n        return this.renderContainer(elem, \"footer\");\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        var span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    renderTab(elem: WmlTab) {\r\n        var tabSpan = this.createElement(\"span\");\r\n     \r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if(this.options.experimental) {\r\n            setTimeout(() => {\r\n                var paragraph = findParent<WmlParagraph>(elem, WmlParagraph);\r\n                \r\n                if(paragraph.props.tabs == null)\r\n                    return;\r\n\r\n                paragraph.props.tabs.sort((a, b) => a.position.value - b.position.value);\r\n                tabSpan.style.display = \"inline-block\";\r\n                updateTabStop(tabSpan, paragraph.props.tabs);\r\n            }, 0);\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        var result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    renderRun(elem: WmlRun) {\r\n        var result = this.createElement(\"span\");\r\n\r\n        if(elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        //this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderRunProperties(result.style, elem.props);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n        if (elem.columns)\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n\r\n        if (elem.props?.caption) {\r\n            result.appendChild(this.createElement(\"caption\", { textContent: elem.props?.caption }));\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: TableColumn[]) {\r\n        const result = this.createElement(\"colGroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n            colElem.style.width = this.renderLength(col.width);\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableRow(elem: WmlTableRow) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement(\"td\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span) result.colSpan = elem.span;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n        if (style == null)\r\n            return;\r\n\r\n        for (let key of Object.getOwnPropertyNames(style)) {\r\n            ouput.style[key] = style[key];\r\n        }\r\n    }\r\n\r\n    renderClass(input: DocxElement, ouput: HTMLElement) {\r\n        if (input.className)\r\n            ouput.className = input.className;\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText) \r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, id: string, numformat: string) {\r\n        var result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return '\"' + result + '\"';\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        var mapping = {\r\n            \"none\": \"none\",\r\n            \"bullet\": \"disc\",\r\n            \"decimal\": \"decimal\",\r\n            \"lowerLetter\": \"lower-alpha\",\r\n            \"upperLetter\": \"upper-alpha\",\r\n            \"lowerRoman\": \"lower-roman\",\r\n            \"upperRoman\": \"upper-roman\",\r\n        };\r\n\r\n        return mapping[format] || format;\r\n    }\r\n\r\n    escapeClassName(className: string) {\r\n        return className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and');\r\n    }\r\n}\r\n\r\nfunction appentElements(container: HTMLElement, children: HTMLElement[]) {\r\n    for (let c of children)\r\n        container.appendChild(c);\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\nfunction createStyleElement(cssText: string) {\r\n    var styleElement = document.createElement(\"style\");\r\n    styleElement.innerHTML = cssText;\r\n    return styleElement;\r\n}\r\n\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends DocxElement>(elem: DocxElement, type: any): T {\r\n    var parent = elem.parent;\r\n\r\n    while (parent != null && !(parent instanceof type))\r\n        parent = parent.parent;\r\n    \r\n    return <T>parent;\r\n}","import { ParagraphTab } from \"./document/paragraph\";\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], pixelToPoint: number = 72 / 96) {\r\n\r\n    let p = elem.closest(\"p\");\r\n\r\n    let tbb = elem.getBoundingClientRect();\r\n    let pbb = p.getBoundingClientRect();\r\n\r\n    let left = (tbb.left - pbb.left) * pixelToPoint;\r\n    let tab = tabs.find(t => t.style != \"clear\" && t.position.value > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    elem.style.display = \"inline-block\";\r\n    elem.style.width = `${(tab.position.value - left)}pt`;    \r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.borderBottom = \"1px black dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.borderBottom = \"1px black solid\";\r\n            break;\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertPercentage, convertBoolean  } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n    \r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport function elements(elem: Element, localName: string = null): Element[] {\r\n    const result = [];\r\n\r\n    for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n        let c = elem.childNodes.item(i);\r\n\r\n        if (c.nodeType == Node.ELEMENT_NODE && (localName == null || (c as Element).localName == localName))\r\n            result.push(c);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function attr(elem: Element, localName: string): string {\r\n    for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n        let a = elem.attributes.item(i);\r\n\r\n        if (a.localName == localName)\r\n            return a.value;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport class XmlParser {\r\n    elements = elements;\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    attr = attr;\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    percentageAttr(node: Element, attrName: string): number {\r\n        return convertPercentage(this.attr(node, attrName));\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","const schemaSymbol = Symbol(\"open-xml-schema\");\r\n\r\nexport type ValueConverter = (val: string) => any;\r\n\r\nexport type ElementConverter = (val: Element) => any;\r\n\r\nexport function element(name: string) {\r\n    return function(target: any) {\r\n        var schema = getPrototypeXmlSchema(target.prototype);\r\n        schema.elemName = name;\r\n    }\r\n}\r\n\r\nexport function children(...elements: any[]) {\r\n    return function(target) {\r\n        var schema = getPrototypeXmlSchema(target.prototype);\r\n        schema.children = {};\r\n        for(let c of elements) {\r\n            let cs = getPrototypeXmlSchema(c.prototype);\r\n            schema.children[cs.elemName] = { proto: c.prototype, schema: cs };\r\n        }\r\n    }\r\n}\r\n\r\nexport function fromText(convert: ValueConverter = null) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.text = { prop, convert };\r\n    }\r\n}\r\n\r\nexport function fromAttribute(attrName: string, convert: ValueConverter = null) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.attrs[attrName] = { prop, convert };\r\n    }\r\n}\r\n\r\nexport function fromElement(elemName: string, convert: ElementConverter) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.elements[elemName] = { prop, convert };\r\n    }   \r\n}\r\n\r\nexport function buildXmlSchema(schemaObj: any): OpenXmlSchema {\r\n    var schema: OpenXmlSchema = {\r\n        text: null,\r\n        attrs: {},\r\n        elements: {},\r\n        elemName: null,\r\n        children: null\r\n    };\r\n\r\n    for(let p in schemaObj) {\r\n        let v = schemaObj[p];\r\n\r\n        if(p == \"$elem\") {\r\n            schema.elemName = v;\r\n        }\r\n        else if(v.$attr) {\r\n            schema.attrs[v.$attr] = { prop: p, convert: null };\r\n        }\r\n    }\r\n\r\n    return schema;\r\n}\r\n\r\nexport function deserializeElement<T = any>(n: Element, output: T, ops: DeserializeOptions): T {\r\n    var proto = Object.getPrototypeOf(output);\r\n    var schema = proto[schemaSymbol];\r\n\r\n    if (ops?.keepOrigin) {\r\n        (output as any).$$xmlElement = n;\r\n    }  \r\n\r\n    if (schema == null)\r\n        return output;\r\n\r\n    deserializeSchema(n, output, schema);\r\n\r\n    for (let i = 0, l = n.children.length; i < l; i ++) {\r\n        let elem = n.children.item(i);\r\n        let child = schema.children[elem.localName];\r\n\r\n        if (child) {\r\n            let obj = Object.create(child.proto);\r\n            deserializeElement(elem, obj, ops);\r\n            (output as any).children.push(obj);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport function deserializeSchema(n: Element, output: any, schema: OpenXmlSchema) {\r\n    if (schema.text) {\r\n        let prop = schema.text;\r\n        output[prop.prop] = prop.convert ? prop.convert(n.textContent) : n.textContent; \r\n    }\r\n\r\n    for (let i = 0, l = n.attributes.length; i < l; i++) {\r\n        const attr = n.attributes.item(i);\r\n        const prop = schema.attrs[attr.localName];\r\n\r\n        if(prop == null)\r\n            continue;\r\n\r\n        output[prop.prop] = prop.convert ? prop.convert(attr.value) : attr.value; \r\n    }\r\n\r\n    for (let i = 0, l = n.childNodes.length; i < l; i ++) {\r\n        const elem = n.childNodes.item(i) as Element;\r\n        const prop = elem.nodeType === Node.ELEMENT_NODE ? schema.elements[elem.localName] : null;\r\n\r\n        if (prop == null)\r\n            continue;\r\n\r\n        output[prop.prop] = prop.convert(elem); \r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport interface DeserializeOptions {\r\n    keepOrigin: boolean\r\n}\r\n\r\nexport interface OpenXmlSchema {\r\n    elemName: string;\r\n    text: OpenXmlSchemaProperty;\r\n    attrs: Record<string, OpenXmlSchemaProperty>;\r\n    elements: Record<string, any>;\r\n    children: Record<string, any>;\r\n}\r\n\r\nexport interface OpenXmlSchemaProperty {\r\n    prop: string;\r\n    convert: ValueConverter;\r\n}\r\n\r\nfunction getPrototypeXmlSchema(proto: any): OpenXmlSchema {\r\n    return proto[schemaSymbol] || (proto[schemaSymbol] = {\r\n        text: null,\r\n        attrs: {},\r\n        children: {},\r\n        elements: {}\r\n    });\r\n}","import { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface DocumentDefaults {\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport function parseDocumentDefaults(elem: Element, xml: XmlParser) {\r\n    let result = <DocumentDefaults>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch(e.localName) {\r\n            case \"pPrDefault\": \r\n                let pPrElem = xml.element(e, 'pPr');\r\n                \r\n                if (pPrElem)\r\n                    result.paragraphProps = parseParagraphProperties(pPrElem, xml);\r\n                break;\r\n\r\n            case \"rPrDefault\":\r\n                let rPrElem = xml.element(e, 'rPr');\r\n                \r\n                if (rPrElem)\r\n                    result.runProps = parseRunProperties(rPrElem, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { convertBoolean } from \"../document/common\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { deserializeElement, element, fromAttribute } from \"../parser/xml-serialize\";\r\n\r\nexport type StyleType = 'character' | 'numbering' | 'paragraph' | 'table';\r\n\r\n@element(\"style\")\r\nexport class WmlStyle {\r\n    @fromAttribute(\"styleId\")\r\n    id: string;\r\n    @fromAttribute(\"type\")\r\n    type: StyleType;\r\n    @fromAttribute(\"customStyle\", convertBoolean)\r\n    customStyle: boolean\r\n    @fromAttribute(\"default\", convertBoolean)\r\n    default: boolean;\r\n\r\n    name: string;\r\n    basedOn: string;\r\n    aliases: string[];\r\n    link: string;\r\n\r\n    next: string;\r\n    locked: boolean;\r\n    autoRedefine: boolean;\r\n    hidden: boolean;\r\n    semiHidden: boolean;\r\n    uiPriority: number;\r\n\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport function parseStyle(elem: Element, xml: XmlParser): WmlStyle {\r\n    let result = deserializeElement(elem, new WmlStyle(), null);\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n    \r\n            case \"name\":\r\n                result.name = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"basedOn\":\r\n                result.basedOn = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"aliases\":\r\n                result.aliases = xml.attr(e, 'val').split(',');\r\n                break;\r\n\r\n            case \"link\":\r\n                result.link = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"next\":\r\n                result.next = xml.attr(e, 'val');\r\n                break;\r\n        \r\n            case \"autoRedefine\":\r\n                result.autoRedefine = true;\r\n                break;\r\n\r\n            case \"hidden\":\r\n                result.hidden = true;\r\n                break;\r\n\r\n            case \"semiHidden\":\r\n                result.semiHidden = true;\r\n                break;\r\n    \r\n            case \"locked\":\r\n                result.locked = true;\r\n                break;\r\n\r\n            case \"uiPriority\":\r\n                result.uiPriority = xml.intAttr(e, 'val');;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { keyBy } from \"../utils\";\r\nimport { DocumentDefaults, parseDocumentDefaults } from \"./document-defaults\";\r\nimport { parseStyle, WmlStyle, StyleType } from \"./style\";\r\n\r\nexport class StylesPart extends Part implements StylesPartProperties {\r\n    defaults: DocumentDefaults;\r\n    styles: WmlStyle[];\r\n    \r\n    domStyles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseStylesPart(root, this._package.xmlParser));\r\n        this.domStyles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}\r\n\r\nexport interface StylesPartProperties {\r\n    defaults: DocumentDefaults;\r\n    styles: WmlStyle[];\r\n}\r\n\r\nexport function parseStylesPart(elem: Element, xml: XmlParser): StylesPartProperties {\r\n    let result = {\r\n        styles: []\r\n    } as StylesPartProperties;\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"docDefaults\":\r\n                result.defaults = parseDocumentDefaults(e, xml);\r\n                break;\r\n\r\n            case \"style\":\r\n                result.styles.push(parseStyle(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { DocxElement } from \"./document/dom\";\r\n\r\nexport function addElementClass(element: DocxElement, className: string): string {\r\n    return element.className = appendClass(element.className, className);\r\n}\r\n\r\nexport function appendClass(classList: string, className: string): string {\r\n    return (!classList) ? className : `${classList} ${className}`\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart } from \"./footer/footer-part\";\r\nimport { HeaderPart } from \"./header/header-part\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\n\r\nconst topLevelRels = [\r\n    { type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n    { type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n]\r\n\r\nexport class WordDocument {\r\n    private _package: OpenXmlPackage;\r\n    private _parser: DocumentParser;\r\n\r\n    rels: Relationship[];\r\n    parts: Part[] = [];\r\n    partsMap: Record<string, Part> = {};\r\n\r\n    documentPart: DocumentPart;\r\n    fontTablePart: FontTablePart;\r\n    numberingPart: NumberingPart;\r\n    stylesPart: StylesPart;\r\n    extendedPropsPart: ExtendedPropsPart;\r\n\r\n    static load(blob, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n        var d = new WordDocument();\r\n\r\n        d._parser = parser;\r\n\r\n        return OpenXmlPackage.load(blob, options)\r\n            .then(pkg => {\r\n                d._package = pkg;\r\n\r\n                return d._package.loadRelationships();\r\n            }).then(rels => {\r\n                d.rels = rels;\r\n\r\n                const tasks = topLevelRels.map(rel => {\r\n                    const r = rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n                    return d.loadRelationshipPart(r.target, r.type);\r\n                });\r\n\r\n                return Promise.all(tasks);\r\n            }).then(() => d);\r\n    }\r\n\r\n    save(type = \"blob\"): Promise<any> {\r\n        return this._package.save(type);\r\n    }\r\n\r\n    private loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n        if (this.partsMap[path])\r\n            return Promise.resolve(this.partsMap[path]);\r\n\r\n        if (!this._package.get(path))\r\n            return Promise.resolve(null);\r\n\r\n        let part: Part = null;\r\n\r\n        switch (type) {\r\n            case RelationshipTypes.OfficeDocument:\r\n                this.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.FontTable:\r\n                this.fontTablePart = part = new FontTablePart(this._package, path);\r\n                break;\r\n\r\n            case RelationshipTypes.Numbering:\r\n                this.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Styles:\r\n                this.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Footer:\r\n                part = new FooterPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Header:\r\n                part = new HeaderPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.ExtendedProperties:\r\n                this.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n                break;\r\n        }\r\n\r\n        if (part == null)\r\n            return Promise.resolve(null);\r\n\r\n        this.partsMap[path] = part;\r\n        this.parts.push(part);\r\n\r\n        return part.load().then(() => {\r\n            if (part.rels == null || part.rels.length == 0)\r\n                return part;\r\n\r\n            let [folder] = splitPath(part.path);\r\n            let rels = part.rels.map(rel => {\r\n                return this.loadRelationshipPart(`${folder}${rel.target}`, rel.type)\r\n            });\r\n\r\n            return Promise.all(rels).then(() => part);\r\n        });\r\n    }\r\n\r\n    loadDocumentImage(id: string): PromiseLike<string> {\r\n        return this.loadResource(this.documentPart, id, \"blob\")\r\n            .then(x => x ? URL.createObjectURL(x) : null);\r\n    }\r\n\r\n    loadNumberingImage(id: string): PromiseLike<string> {\r\n        return this.loadResource(this.numberingPart, id, \"blob\")\r\n            .then(x => x ? URL.createObjectURL(x) : null);\r\n    }\r\n\r\n    loadFont(id: string, key: string): PromiseLike<string> {\r\n        return this.loadResource(this.fontTablePart, id, \"uint8array\")\r\n            .then(x => x ? URL.createObjectURL(new Blob([deobfuscate(x, key)])) : x);\r\n    }\r\n\r\n    getPathById(part: Part, id: string): string {\r\n        const rel = part.rels.find(x => x.id == id);\r\n        return rel ? splitPath(part.path)[0] + rel.target : null;\r\n    }\r\n\r\n    private loadResource(part: Part, id: string, outputType: OutputType) {\r\n        const path = this.getPathById(part, id);\r\n        return path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n    }\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n    const len = 16;\r\n    const trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n    const numbers = new Array(len);\r\n\r\n    for (let i = 0; i < len; i++)\r\n        numbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n    for (let i = 0; i < 32; i++)\r\n        data[i] = data[i] ^ numbers[i % len]\r\n\r\n    return data;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__792__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"sourceRoot":""}