{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/breaks.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/document.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/drawing.ts","webpack://docx/./src/document/fields.ts","webpack://docx/./src/document/hyperlink.ts","webpack://docx/./src/document/indentation.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/document/table-cell.ts","webpack://docx/./src/document/table-row.ts","webpack://docx/./src/document/table.ts","webpack://docx/./src/document/text.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/footer/footer-part.ts","webpack://docx/./src/footer/footer.ts","webpack://docx/./src/header/header-part.ts","webpack://docx/./src/header/header.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/parser/xml-serialize.ts","webpack://docx/./src/styles/document-defaults.ts","webpack://docx/./src/styles/style.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/word-document.ts","webpack://docx/./node_modules/tslib/tslib.es6.js","webpack://docx/external umd \"JSZip\"","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"JSZip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"JSZip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"JSZip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__290__) {\nreturn ","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n\r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        return JSZip.loadAsync(input).then(zip => new OpenXmlPackage(zip, options));\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        return this.load(relsPath)\r\n            .then(txt => txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null);\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    load(): Promise<any> {\r\n        return Promise.all([\r\n            this._package.loadRelationships(this.path).then(rels => {\r\n                this.rels = rels;\r\n            }),\r\n            this._package.load(this.path).then(text => {\r\n                const xmlDoc = this._package.parseXmlDocument(text); \r\n\r\n                if (this._package.options.keepOrigin) {\r\n                    this._xmlDocument = xmlDoc;\r\n                }\r\n\r\n                this.parseXml(xmlDoc.firstElementChild);\r\n            })\r\n        ]);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\"\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import { DocxContainer, DocxElement, IDomNumbering, NumberingPicBullet } from './document/dom';\r\nimport * as utils from './utils';\r\nimport { WmlBody, WmlDocument } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport globalXmlParser from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlHyperlink } from './document/hyperlink';\r\nimport { WmlTableCell } from './document/table-cell';\r\nimport { WmlTable } from './document/table';\r\nimport { WmlDrawing, DmlPicture } from './document/drawing';\r\nimport { WmlTableRow } from './document/table-row';\r\nimport { deserializeElement } from './parser/xml-serialize';\r\nimport { WmlFooter } from './footer/footer';\r\nimport { WmlHeader } from './header/header';\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport class DocumentParser {\r\n    // removes XML declaration \r\n    skipDeclaration: boolean = true;\r\n\r\n    // ignores page and table sizes\r\n    ignoreWidth: boolean = false;\r\n    debug: boolean = false;\r\n    keepOrigin: boolean = false;\r\n\r\n    private deserialize<T>(elem: Element, output: T): T {\r\n        return deserializeElement(elem, output, { keepOrigin: this.keepOrigin });\r\n    }\r\n\r\n    parseDocumentFile(xmlDoc: Element): WmlDocument {\r\n        var xbody = globalXmlParser.element(xmlDoc, \"body\");\r\n\r\n        const result = new WmlDocument();\r\n        result.body = this.deserialize(xbody, new WmlBody());\r\n        this.parseBodyElements(xbody, result.body);\r\n        return result;\r\n    }\r\n\r\n    parseFooter(xmlDoc: Element): WmlFooter {\r\n        return this.parseBodyElements(xmlDoc, new WmlFooter());\r\n    }\r\n\r\n    parseHeader(xmlDoc: Element): WmlHeader {\r\n        return this.parseBodyElements(xmlDoc, new WmlHeader());\r\n    }\r\n\r\n    parseBodyElements<T extends DocxContainer>(elem: Element, output: T): T {\r\n        for(let e of globalXmlParser.elements(elem)) {\r\n            switch (e.localName) {\r\n                case \"p\":\r\n                    output.children.push(this.parseParagraph(e));\r\n                    break;\r\n\r\n                case \"tbl\":\r\n                    output.children.push(this.parseTable(e));\r\n                    break;\r\n            }   \r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    parseStylesFile(xstyles: Element): IDomStyle[] {\r\n        var result = [];\r\n\r\n        xml.foreach(xstyles, n => {\r\n            switch (n.localName) {\r\n                case \"style\":\r\n                    result.push(this.parseStyle(n));\r\n                    break;\r\n\r\n                case \"docDefaults\":\r\n                    result.push(this.parseDefaultStyles(n));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseDefaultStyles(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: null,\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: []\r\n        };\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"rPrDefault\":\r\n                    var rPr = globalXmlParser.element(c, \"rPr\");\r\n\r\n                    if (rPr)\r\n                        result.styles.push({\r\n                            target: \"span\",\r\n                            values: this.parseDefaultProperties(rPr, {})\r\n                        });\r\n                    break;\r\n\r\n                case \"pPrDefault\":\r\n                    var pPr = globalXmlParser.element(c, \"pPr\");\r\n\r\n                    if (pPr) {\r\n                        result.styles.push({\r\n                            target: \"p\",\r\n                            values: this.parseDefaultProperties(pPr, {})\r\n                        });\r\n                        result.paragraphProps = parseParagraphProperties(pPr, globalXmlParser);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseStyle(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: xml.stringAttr(node, \"styleId\"),\r\n            isDefault: xml.boolAttr(node, \"default\"),\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: [],\r\n            linked: null\r\n        };\r\n\r\n        switch (xml.stringAttr(node, \"type\")) {\r\n            case \"paragraph\": result.target = \"p\"; break;\r\n            case \"table\": result.target = \"table\"; break;\r\n            case \"character\": result.target = \"span\"; break;\r\n        }\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"basedOn\":\r\n                    result.basedOn = xml.className(n, \"val\");\r\n                    break;\r\n\r\n                case \"name\":\r\n                    result.name = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"link\":\r\n                    result.linked = xml.className(n, \"val\");\r\n                    break;\r\n                \r\n                case \"next\":\r\n                    result.next = xml.className(n, \"val\");\r\n                    break;\r\n    \r\n                case \"aliases\":\r\n                    result.aliases = xml.stringAttr(n, \"val\").split(\",\");\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    result.styles.push({\r\n                        target: \"p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.paragraphProps = parseParagraphProperties(n, globalXmlParser);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.styles.push({\r\n                        target: \"span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.runProps = parseRunProperties(n, globalXmlParser);\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.styles.push({\r\n                        target: \"td\", //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblStylePr\":\r\n                    for (let s of this.parseTableStyle(n))\r\n                        result.styles.push(s);\r\n                    break;\r\n\r\n                case \"rsid\":\r\n                case \"qFormat\":\r\n                case \"hidden\":\r\n                case \"semiHidden\":\r\n                case \"unhideWhenUsed\":\r\n                case \"autoRedefine\":\r\n                case \"uiPriority\":\r\n                    //TODO: ignore\r\n                    break;\r\n\r\n                default:\r\n                    this.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableStyle(node: Element): IDomSubStyle[] {\r\n        var result = [];\r\n\r\n        var type = xml.stringAttr(node, \"type\");\r\n        var selector = \"\";\r\n\r\n        switch (type) {\r\n            case \"firstRow\": selector = \"tr.first-row td\"; break;\r\n            case \"lastRow\": selector = \"tr.last-row td\"; break;\r\n            case \"firstCol\": selector = \"td.first-col\"; break;\r\n            case \"lastCol\": selector = \"td.last-col\"; break;\r\n            case \"band1Vert\": selector = \"td.odd-col\"; break;\r\n            case \"band2Vert\": selector = \"td.even-col\"; break;\r\n            case \"band1Horz\": selector = \"tr.odd-row\"; break;\r\n            case \"band2Horz\": selector = \"tr.even-row\"; break;\r\n            default: return [];\r\n        }\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    result.push({\r\n                        target: selector + \" p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.push({\r\n                        target: selector + \" span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.push({\r\n                        target: selector, //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingFile(xnums: Element): IDomNumbering[] {\r\n        var result = [];\r\n        var mapping = {};\r\n        var bullets = [];\r\n\r\n        xml.foreach(xnums, n => {\r\n            switch (n.localName) {\r\n                case \"abstractNum\":\r\n                    this.parseAbstractNumbering(n, bullets)\r\n                        .forEach(x => result.push(x));\r\n                    break;\r\n\r\n                case \"numPicBullet\":\r\n                    bullets.push(this.parseNumberingPicBullet(n));\r\n                    break;\r\n\r\n                case \"num\":\r\n                    var numId = xml.stringAttr(n, \"numId\");\r\n                    var abstractNumId = xml.elementStringAttr(n, \"abstractNumId\", \"val\");\r\n                    mapping[abstractNumId] = numId;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        result.forEach(x => x.id = mapping[x.id]);\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n        var pict = globalXmlParser.element(elem, \"pict\");\r\n        var shape = pict && globalXmlParser.element(pict, \"shape\");\r\n        var imagedata = shape && globalXmlParser.element(shape, \"imagedata\");\r\n\r\n        return imagedata ? {\r\n            id: xml.intAttr(elem, \"numPicBulletId\"),\r\n            src: xml.stringAttr(imagedata, \"id\"),\r\n            style: xml.stringAttr(shape, \"style\")\r\n        } : null;\r\n    }\r\n\r\n    parseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n        var result = [];\r\n        var id = xml.stringAttr(node, \"abstractNumId\");\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"lvl\":\r\n                    result.push(this.parseNumberingLevel(id, n, bullets));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n        var result: IDomNumbering = {\r\n            id: id,\r\n            level: xml.intAttr(node, \"ilvl\"),\r\n            style: {}\r\n        };\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    this.parseDefaultProperties(n, result.style);\r\n                    break;\r\n\r\n                case \"lvlPicBulletId\":\r\n                    var id = xml.intAttr(n, \"val\");\r\n                    result.bullet = bullets.filter(x => x.id == id)[0];\r\n                    break;\r\n\r\n                case \"lvlText\":\r\n                    result.levelText = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"numFmt\":\r\n                    result.format = xml.stringAttr(n, \"val\");\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    parseParagraph(node: Element): WmlParagraph {\r\n        const result = this.deserialize(node, new WmlParagraph());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n\r\n                case \"hyperlink\":\r\n                    result.children.push(this.parseHyperlink(c, result));\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    this.parseParagraphProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n        this.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n            if(parseParagraphProperty(c, paragraph.props, globalXmlParser))\r\n                return true;\r\n\r\n            switch (c.localName) {\r\n                case \"pStyle\":\r\n                    utils.addElementClass(paragraph, xml.className(c, \"val\"));\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    utils.addElementClass(paragraph, values.classNameOfCnfStyle(c));\r\n                    break;\r\n\r\n                case \"framePr\":\r\n                    this.parseFrame(c, paragraph);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseFrame(node: Element, paragraph: WmlParagraph) {\r\n        var dropCap = xml.stringAttr(node, \"dropCap\");\r\n\r\n        if (dropCap == \"drop\")\r\n            paragraph.cssStyle[\"float\"] = \"left\";\r\n    }\r\n\r\n    parseHyperlink(node: Element, parent?: DocxElement): WmlHyperlink {\r\n        var result = this.deserialize(node, new WmlHyperlink(parent));\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRun(node: Element, parent?: DocxElement): WmlRun {\r\n        var result = this.deserialize(node, new WmlRun(parent));\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"drawing\":\r\n                    let d = this.parseDrawing(c);\r\n\r\n                    if (d)\r\n                        result.children = [d];\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    this.parseRunProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRunProperties(elem: Element, run: WmlRun) {\r\n\r\n        Object.assign(run.props, parseRunProperties(elem, globalXmlParser));\r\n\r\n        this.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"rStyle\":\r\n                    run.className = xml.className(c, \"val\");\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDrawing(node: Element): DocxElement {\r\n        for (var n of globalXmlParser.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"inline\":\r\n                case \"anchor\":\r\n                    return this.parseDrawingWrapper(n);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseDrawingWrapper(node: Element): DocxElement {\r\n        var result = new WmlDrawing();\r\n        var isAnchor = node.localName == \"anchor\";\r\n\r\n        //TODO\r\n        // result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n        // result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n        // result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n        // result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n        let wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null; \r\n        let simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n        let posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n        let posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n        for (var n of globalXmlParser.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"simplePos\":\r\n                    if (simplePos) {\r\n                        posX.offset = xml.sizeAttr(n, \"x\", SizeType.Emu);\r\n                        posY.offset = xml.sizeAttr(n, \"y\", SizeType.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"extent\":\r\n                    result.cssStyle[\"width\"] = xml.sizeAttr(n, \"cx\", SizeType.Emu);\r\n                    result.cssStyle[\"height\"] = xml.sizeAttr(n, \"cy\", SizeType.Emu);\r\n                    break;\r\n\r\n                case \"positionH\":\r\n                case \"positionV\":\r\n                    if (!simplePos) {\r\n                        let pos = n.localName == \"positionH\" ? posX : posY;\r\n                        var alignNode = globalXmlParser.element(n, \"align\");\r\n                        var offsetNode = globalXmlParser.element(n, \"posOffset\");\r\n\r\n                        if (alignNode)\r\n                            pos.align = alignNode.textContent;\r\n\r\n                        if (offsetNode)\r\n                            pos.offset = xml.sizeValue(offsetNode, SizeType.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"wrapTopAndBottom\":\r\n                    wrapType = \"wrapTopAndBottom\";\r\n                    break;\r\n                \r\n                case \"wrapNone\":\r\n                    wrapType = \"wrapNone\";\r\n                    break;\r\n\r\n                case \"graphic\":\r\n                    var g = this.parseGraphic(n);\r\n\r\n                    if (g)\r\n                        result.children.push(g);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (wrapType == \"wrapTopAndBottom\") {\r\n            result.cssStyle['display'] = 'block';\r\n\r\n            if (posX.align) {\r\n                result.cssStyle['text-align'] = posX.align;\r\n                result.cssStyle['width'] = \"100%\";\r\n            }\r\n        }\r\n        else if(wrapType == \"wrapNone\") {\r\n            result.cssStyle['display'] = 'block';\r\n            result.cssStyle['position'] = 'relative';\r\n            result.cssStyle[\"width\"] = \"0px\";\r\n            result.cssStyle[\"height\"] = \"0px\";\r\n\r\n            if(posX.offset)\r\n                result.cssStyle[\"left\"] = posX.offset;\r\n            if(posY.offset)\r\n                result.cssStyle[\"top\"] = posY.offset;\r\n        }\r\n        else if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n            result.cssStyle[\"float\"] = posX.align;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseGraphic(elem: Element): DocxElement {\r\n        var graphicData = globalXmlParser.element(elem, \"graphicData\");\r\n\r\n        for (let n of globalXmlParser.elements(graphicData)) {\r\n            switch (n.localName) {\r\n                case \"pic\":\r\n                    return this.parsePicture(n);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parsePicture(elem: Element): DmlPicture {\r\n        var result = new DmlPicture();\r\n        var blipFill = globalXmlParser.element(elem, \"blipFill\");\r\n        var blip = globalXmlParser.element(blipFill, \"blip\");\r\n\r\n        result.resourceId = xml.stringAttr(blip, \"embed\");\r\n\r\n        var spPr = globalXmlParser.element(elem, \"spPr\");\r\n        var xfrm = globalXmlParser.element(spPr, \"xfrm\");\r\n\r\n        result.cssStyle[\"position\"] = \"relative\";\r\n\r\n        for (var n of globalXmlParser.elements(xfrm)) {\r\n            switch (n.localName) {\r\n                case \"ext\":\r\n                    result.cssStyle[\"width\"] = xml.sizeAttr(n, \"cx\", SizeType.Emu);\r\n                    result.cssStyle[\"height\"] = xml.sizeAttr(n, \"cy\", SizeType.Emu);\r\n                    break;\r\n\r\n                case \"off\":\r\n                    result.cssStyle[\"left\"] = xml.sizeAttr(n, \"x\", SizeType.Emu);\r\n                    result.cssStyle[\"top\"] = xml.sizeAttr(n, \"y\", SizeType.Emu);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTable(node: Element): WmlTable {\r\n        var result = this.deserialize(node, new WmlTable());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tr\":\r\n                    result.children.push(this.parseTableRow(c));\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                    this.parseTableProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableProperties(elem: Element, table: WmlTable) {\r\n        table.cssStyle = {};\r\n        table.cellStyle = {};\r\n\r\n        this.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n            switch (c.localName) {\r\n                case \"tblStyle\":\r\n                    table.className = xml.className(c, \"val\");\r\n                    break;\r\n\r\n                case \"tblLook\":\r\n                    utils.addElementClass(table, values.classNameOftblLook(c));\r\n                    break;\r\n\r\n                case \"tblpPr\":\r\n                    this.parseTablePosition(c, table);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        switch (table.cssStyle[\"text-align\"]) {\r\n            case \"center\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                table.cssStyle[\"margin-right\"] = \"auto\";\r\n                break;\r\n\r\n            case \"right\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    parseTablePosition(node: Element, table: WmlTable) {\r\n        var topFromText = xml.sizeAttr(node, \"topFromText\");\r\n        var bottomFromText = xml.sizeAttr(node, \"bottomFromText\");\r\n        var rightFromText = xml.sizeAttr(node, \"rightFromText\");\r\n        var leftFromText = xml.sizeAttr(node, \"leftFromText\");\r\n\r\n        table.cssStyle[\"float\"] = 'left';\r\n        table.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n        table.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n        table.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n        table.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n    }\r\n\r\n    parseTableRow(node: Element): WmlTableRow {\r\n        var result = this.deserialize(node, new WmlTableRow());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tc\":\r\n                    result.children.push(this.parseTableCell(c));\r\n                    break;\r\n\r\n                case \"trPr\":\r\n                    this.parseTableRowProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n        row.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"cnfStyle\":\r\n                    row.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseTableCell(node: Element): WmlTableCell {\r\n        var result = this.deserialize(node, new WmlTableCell());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tbl\":\r\n                    result.children.push(this.parseTable(c));\r\n                    break;\r\n\r\n                case \"p\":\r\n                    result.children.push(this.parseParagraph(c));\r\n                    break;\r\n\r\n                case \"tcPr\":\r\n                    this.parseTableCellProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n        cell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"gridSpan\":\r\n                    cell.span = xml.intAttr(c, \"val\", null);\r\n                    break;\r\n\r\n                case \"vMerge\": //TODO\r\n                    cell.verticalMerge = xml.sizeAttr(c, \"val\");\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    cell.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n        style = style || {};\r\n\r\n\r\n        xml.foreach(elem, c => {\r\n            switch (c.localName) {\r\n                case \"jc\":\r\n                    style[\"text-align\"] = values.valueOfJc(c);\r\n                    break;\r\n\r\n                case \"color\":\r\n                    style[\"color\"] = xml.colorAttr(c, \"val\", null, autos.color);\r\n                    break;\r\n\r\n                case \"sz\":\r\n                    style[\"font-size\"] = style[\"min-height\"] = xml.sizeAttr(c, \"val\", SizeType.FontSize);\r\n                    break;\r\n\r\n                case \"shd\":\r\n                    style[\"background-color\"] = xml.colorAttr(c, \"fill\", null, autos.shd);\r\n                    break;\r\n\r\n                case \"highlight\":\r\n                    style[\"background-color\"] = xml.colorAttr(c, \"val\", null, autos.highlight);\r\n                    break;\r\n\r\n                case \"tcW\":\r\n                    if (this.ignoreWidth)\r\n                        break;\r\n\r\n                case \"tblW\":\r\n                    style[\"width\"] = values.valueOfSize(c, \"w\");\r\n                    break;\r\n\r\n                case \"trHeight\":\r\n                    this.parseTrHeight(c, style);\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    style[\"text-decoration\"] = values.valueOfStrike(c);\r\n                    break;\r\n\r\n                case \"b\":\r\n                    style[\"font-weight\"] = values.valueOfBold(c);\r\n                    break;\r\n\r\n                case \"i\":\r\n                    style[\"font-style\"] = \"italic\";\r\n                    break;\r\n\r\n                case \"u\":\r\n                    this.parseUnderline(c, style);\r\n                    break;\r\n\r\n                case \"ind\":\r\n                case \"tblInd\":\r\n                    this.parseIndentation(c, style);\r\n                    break;\r\n\r\n                case \"rFonts\":\r\n                    this.parseFont(c, style);\r\n                    break;\r\n\r\n                case \"tblBorders\":\r\n                    this.parseBorderProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblCellSpacing\":\r\n                    style[\"border-spacing\"] = values.valueOfMargin(c);\r\n                    style[\"border-collapse\"] = \"separate\";\r\n                    break;\r\n\r\n                case \"pBdr\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n                \r\n                case \"bdr\":\r\n                    style[\"border\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"tcBorders\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n\r\n                case \"noWrap\":\r\n                    //TODO\r\n                    //style[\"white-space\"] = \"nowrap\";\r\n                    break;\r\n\r\n                case \"tblCellMar\":\r\n                case \"tcMar\":\r\n                    this.parseMarginProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblLayout\":\r\n                    style[\"table-layout\"] = values.valueOfTblLayout(c);\r\n                    break;\r\n\r\n                case \"vAlign\":\r\n                    style[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n                    break;\r\n\r\n                case \"spacing\":\r\n                    if (elem.localName == \"pPr\")\r\n                        this.parseSpacing(c, style);\r\n                    break;\r\n\r\n                case \"lang\":\r\n                case \"noProof\": //ignore spellcheck\r\n                case \"webHidden\": // maybe web-hidden should be implemented\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    if (handler != null && !handler(c))\r\n                        this.debug && console.warn(`DOCX: Unknown document element: ${c.localName}`);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return style;\r\n    }\r\n\r\n    parseUnderline(node: Element, style: Record<string, string>) {\r\n        var val = xml.stringAttr(node, \"val\");\r\n\r\n        if (val == null || val == \"none\")\r\n            return;\r\n\r\n        switch (val) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n        }\r\n\r\n        var col = xml.colorAttr(node, \"color\");\r\n\r\n        if (col)\r\n            style[\"text-decoration-color\"] = col;\r\n    }\r\n\r\n    parseFont(node: Element, style: Record<string, string>) {\r\n        var ascii = xml.stringAttr(node, \"ascii\");\r\n\r\n        if (ascii)\r\n            style[\"font-family\"] = ascii;\r\n    }\r\n\r\n    parseIndentation(node: Element, style: Record<string, string>) {\r\n        var firstLine = xml.sizeAttr(node, \"firstLine\");\r\n        var left = xml.sizeAttr(node, \"left\");\r\n        var start = xml.sizeAttr(node, \"start\");\r\n        var right = xml.sizeAttr(node, \"right\");\r\n        var end = xml.sizeAttr(node, \"end\");\r\n\r\n        if (firstLine) style[\"text-indent\"] = firstLine;\r\n        if (left || start) style[\"margin-left\"] = left || start;\r\n        if (right || end) style[\"margin-right\"] = right || end;\r\n    }\r\n\r\n    parseSpacing(node: Element, style: Record<string, string>) {\r\n        var before = xml.sizeAttr(node, \"before\");\r\n        var after = xml.sizeAttr(node, \"after\");\r\n        var line = xml.intAttr(node, \"line\", null);\r\n        var lineRule = xml.stringAttr(node, \"lineRule\");\r\n\r\n        if (before) style[\"margin-top\"] = before;\r\n        if (after) style[\"margin-bottom\"] = after;\r\n        \r\n        if (line !== null) {\r\n            switch(lineRule) {\r\n                case \"auto\": \r\n                    style[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n                    break;\r\n\r\n                case \"atLeast\":\r\n                    style[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n                    break;\r\n\r\n                default:\r\n                    style[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    parseMarginProperties(node: Element, output: Record<string, string>) {\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"left\":\r\n                    output[\"padding-left\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"right\":\r\n                    output[\"padding-right\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"padding-top\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"padding-bottom\"] = values.valueOfMargin(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    parseTrHeight(node: Element, output: Record<string, string>) {\r\n        switch (xml.stringAttr(node, \"hRule\")) {\r\n            case \"exact\":\r\n                output[\"height\"] = xml.sizeAttr(node, \"val\");\r\n                break;\r\n\r\n            case \"atLeast\":\r\n            default:\r\n                output[\"height\"] = xml.sizeAttr(node, \"val\");\r\n                // min-height doesn't work for tr\r\n                //output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n                break;\r\n        }\r\n    }\r\n\r\n    parseBorderProperties(node: Element, output: Record<string, string>) {\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"start\":\r\n                case \"left\":\r\n                    output[\"border-left\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"end\":\r\n                case \"right\":\r\n                    output[\"border-right\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"border-top\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"border-bottom\"] = values.valueOfBorder(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nenum SizeType {\r\n    FontSize,\r\n    Dxa,\r\n    Emu,\r\n    Border,\r\n    Percent\r\n}\r\n\r\nclass xml {\r\n    static foreach(node: Element, cb: (n: Element) => void) {\r\n        for (var i = 0; i < node.childNodes.length; i++) {\r\n            let n = node.childNodes[i];\r\n\r\n            if (n.nodeType == 1)\r\n                cb(<Element>n);\r\n        }\r\n    }\r\n\r\n    static elementStringAttr(elem: Element, nodeName, attrName: string) {\r\n        var n = globalXmlParser.element(elem, nodeName)\r\n        return n ? xml.stringAttr(n, attrName) : null;\r\n    }\r\n\r\n    static stringAttr(node: Element, attrName: string) {\r\n        return globalXmlParser.attr(node, attrName);\r\n    }\r\n\r\n    static colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n        var v = xml.stringAttr(node, attrName);\r\n\r\n        switch (v) {\r\n            case \"yellow\":\r\n                return v;\r\n\r\n            case \"auto\":\r\n                return autoColor;\r\n        }\r\n\r\n        return v ? `#${v}` : defValue;\r\n    }\r\n\r\n    static boolAttr(node: Element, attrName: string, defValue: boolean = false) {\r\n        return globalXmlParser.boolAttr(node, attrName, defValue);\r\n    }\r\n\r\n    static intAttr(node: Element, attrName: string, defValue: number = 0) {\r\n        var val = xml.stringAttr(node, attrName);\r\n        return val ? parseInt(xml.stringAttr(node, attrName)) : defValue;\r\n    }\r\n\r\n    static sizeAttr(node: Element, attrName: string, type: SizeType = SizeType.Dxa) {\r\n        return xml.convertSize(xml.stringAttr(node, attrName), type);\r\n    }\r\n\r\n    static sizeValue(node: Element, type: SizeType = SizeType.Dxa) {\r\n        return xml.convertSize(node.textContent, type);\r\n    }\r\n\r\n    static convertSize(val: string, type: SizeType = SizeType.Dxa) {\r\n        if (val == null || /.+p[xt]$/.test(val))\r\n            return val;\r\n\r\n        var intVal = parseInt(val);\r\n\r\n        switch (type) {\r\n            case SizeType.Dxa: return (0.05 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Emu: return (intVal / 12700).toFixed(2) + \"pt\";\r\n            case SizeType.FontSize: return (0.5 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Border: return (0.125 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Percent: return (0.02 * intVal).toFixed(2) + \"%\";\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static className(node: Element, attrName: string) {\r\n        var val = xml.stringAttr(node, attrName);\r\n\r\n        return val && val.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and');\r\n    }\r\n}\r\n\r\nclass values {\r\n    static valueOfBold(c: Element) {\r\n        return xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\"\r\n    }\r\n\r\n    static valueOfSize(c: Element, attr: string) {\r\n        var type: SizeType = SizeType.Dxa;\r\n\r\n        switch (xml.stringAttr(c, \"type\")) {\r\n            case \"dxa\": break;\r\n            case \"pct\": type = SizeType.Percent; break;\r\n        }\r\n\r\n        return xml.sizeAttr(c, attr, type);\r\n    }\r\n\r\n    static valueOfStrike(c: Element) {\r\n        return xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n    }\r\n\r\n    static valueOfMargin(c: Element) {\r\n        return xml.sizeAttr(c, \"w\");\r\n    }\r\n\r\n    static valueOfBorder(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        if (type == \"nil\")\r\n            return \"none\";\r\n\r\n        var color = xml.colorAttr(c, \"color\");\r\n        var size = xml.sizeAttr(c, \"sz\", SizeType.Border);\r\n\r\n        return `${size} solid ${color == \"auto\" ? \"black\" : color}`;\r\n    }\r\n\r\n    static valueOfTblLayout(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n        return type == \"fixed\" ? \"fixed\" : \"auto\";\r\n    }\r\n\r\n    static classNameOfCnfStyle(c: Element) {\r\n        let className = \"\";\r\n        let val = xml.stringAttr(c, \"val\");\r\n        //FirstRow, LastRow, FirstColumn, LastColumn, Band1Vertical, Band2Vertical, Band1Horizontal, Band2Horizontal, NE Cell, NW Cell, SE Cell, SW Cell.\r\n\r\n        if (val[0] == \"1\") className += \" first-row\";\r\n        if (val[1] == \"1\") className += \" last-row\";\r\n        if (val[2] == \"1\") className += \" first-col\";\r\n        if (val[3] == \"1\") className += \" last-col\";\r\n        if (val[4] == \"1\") className += \" odd-col\";\r\n        if (val[5] == \"1\") className += \" even-col\";\r\n        if (val[6] == \"1\") className += \" odd-row\";\r\n        if (val[7] == \"1\") className += \" even-row\";\r\n        if (val[8] == \"1\") className += \" ne-cell\";\r\n        if (val[9] == \"1\") className += \" nw-cell\";\r\n        if (val[10] == \"1\") className += \" se-cell\";\r\n        if (val[11] == \"1\") className += \" sw-cell\";\r\n\r\n        return className.trim();\r\n    }\r\n\r\n    static valueOfJc(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"start\":\r\n            case \"left\": return \"left\";\r\n            case \"center\": return \"center\";\r\n            case \"end\":\r\n            case \"right\": return \"right\";\r\n            case \"both\": return \"justify\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static valueOfTextAlignment(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"auto\":\r\n            case \"baseline\": return \"baseline\";\r\n            case \"top\": return \"top\";\r\n            case \"center\": return \"middle\";\r\n            case \"bottom\": return \"bottom\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static addSize(a: string, b: string): string {\r\n        if (a == null) return b;\r\n        if (b == null) return a;\r\n\r\n        return `calc(${a} + ${b})`; //TODO\r\n    }\r\n\r\n    static classNameOftblLook(c: Element) {\r\n        let className = \"\";\r\n\r\n        if (xml.boolAttr(c, \"firstColumn\")) className += \" first-col\";\r\n        if (xml.boolAttr(c, \"firstRow\")) className += \" first-row\";\r\n        if (xml.boolAttr(c, \"lastColumn\")) className += \" lat-col\";\r\n        if (xml.boolAttr(c, \"lastRow\")) className += \" last-row\";\r\n        if (xml.boolAttr(c, \"noHBand\")) className += \" no-hband\";\r\n        if (xml.boolAttr(c, \"noVBand\")) className += \" no-vband\";\r\n\r\n        return className.trim();\r\n    }\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element(\"bookmarkStart\")\r\nexport class WmlBookmarkStart extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n    @fromAttribute(\"name\")\r\n    name: string;\r\n    @fromAttribute(\"colFirst\")\r\n    colFirst: number;\r\n    @fromAttribute(\"colLast\")\r\n    colLast: number;\r\n}\r\n\r\n@element(\"bookmarkEnd\")\r\nexport class WmlBookmarkEnd extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element('br')\r\nexport class WmlBreak extends DocxElement {\r\n    @fromAttribute(\"type\")\r\n    type: \"page\" | \"column\" | \"textWrapping\" = \"textWrapping\";\r\n    \r\n    @fromAttribute(\"clear\")\r\n    clear: \"all\" | \"left\" | \"right\" | \"none\";\r\n}\r\n\r\n@element('lastRenderedPageBreak')\r\nexport class WmlLastRenderedPageBreak extends DocxElement {\r\n}","import { attr } from \"../parser/xml-parser\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\";\r\n\r\nexport interface Length {\r\n    value: number;\r\n    type: LengthType\r\n}\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface Underline {\r\n    color: string;\r\n    type: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: null }\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n    if (!val) {\r\n        return null;\r\n    }\r\n\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val.endsWith('pt')) {\r\n        return { value: parseFloat(val), type: 'pt' };\r\n    }\r\n\r\n    if (val.endsWith('%')) {\r\n        return { value: parseFloat(val), type: '%' };\r\n    }\r\n\r\n    return { value: parseInt(val) * usage.mul, type: usage.unit };\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseElementValue(elem: Element): string {\r\n    return attr(elem, \"val\");\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlDocument } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    documentElement: WmlDocument\r\n\r\n    parseXml(root: Element) {\r\n        this.documentElement = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","import { element, fromElement } from \"../parser/xml-serialize\";\r\nimport { DocxContainer, DocxElement } from \"./dom\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\n\r\n@element(\"document\")\r\nexport class WmlDocument extends DocxElement {\r\n    body: WmlBody;\r\n}\r\n\r\n@element(\"body\")\r\nexport class WmlBody extends DocxContainer {\r\n    @fromElement(\"sectPr\", parseSectionProperties)\r\n    sectionProps: SectionProperties;\r\n}","export class DocxElement {\r\n    className: string = null;\r\n    cssStyle: Record<string, string> = {};\r\n\r\n    constructor(public parent?: DocxElement) {\r\n    }\r\n}\r\n\r\nexport class DocxContainer extends DocxElement {\r\n    children: DocxElement[] = [];\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    style: Record<string, string>;\r\n    levelText?: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element('drawing')\r\nexport class WmlDrawing extends DocxContainer {\r\n\r\n}\r\n\r\nexport class DmlPicture extends DocxContainer {\r\n    resourceId: string;\r\n    stretch: any;\r\n    offset: any;\r\n    size: any;\r\n}\r\n\r\nexport function parseDmlPicture(elem: Element, output: DmlPicture, xml: XmlParser = globalXmlParser) {\r\n    const blipFill = xml.element(elem, \"blipFill\");\r\n    const blip = xml.element(blipFill, \"blip\");\r\n\r\n    output.resourceId = xml.attr(blip, \"embed\");\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { convertBoolean, convertLength } from \"./common\";\r\nimport { DocxContainer, DocxElement } from \"./dom\";\r\n\r\n@element('fldChar')\r\nexport class WmlFieldChar extends DocxElement {\r\n    @fromAttribute('fldCharType')\r\n    type: 'begin' | 'end' | 'separate'; \r\n}\r\n\r\n@element('fldSimple')\r\nexport class WmlFieldSimple extends DocxContainer {\r\n    @fromAttribute(\"dirty\", convertBoolean)\r\n    dirty: boolean;\r\n\r\n    @fromAttribute(\"fldLock\", convertBoolean)\r\n    lock: boolean;\r\n\r\n    @fromAttribute(\"instr\")\r\n    instruction: string;\r\n}","import globalXmlParser from \"../parser/xml-parser\";\r\nimport { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element('hyperlink')\r\nexport class WmlHyperlink extends DocxContainer {\r\n    @fromAttribute('anchor')\r\n    anchor?: string;\r\n\r\n    protected parse(elem: Element) {\r\n        this.anchor = globalXmlParser.attr(elem, \"anchor\");\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Indentation {\r\n    start: Length;\r\n    end: Length;\r\n    hanging: Length;\r\n    firstLine: Length;\r\n}\r\n\r\nexport function parseIndentation(elem: Element, xml: XmlParser): Indentation {\r\n    return {\r\n        start: xml.lengthAttr(elem, \"start\"),\r\n        end: xml.lengthAttr(elem, \"end\"),\r\n        hanging: xml.lengthAttr(elem, \"hanging\"),\r\n        firstLine: xml.lengthAttr(elem, \"firstLine\"),\r\n    } as Indentation;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: Length;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    const lineRule = xml.attr(elem, \"lineRule\");\r\n\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.lengthAttr(elem, \"line\", lineRule === 'auto' ? LengthUsage.LineHeight : LengthUsage.Dxa),\r\n        lineRule\r\n    } as LineSpacing;\r\n}","import { DocxContainer } from \"./dom\";\r\nimport { Length, ns } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\nimport { children, element } from \"../parser/xml-serialize\";\r\nimport { WmlBookmarkEnd, WmlBookmarkStart } from \"./bookmarks\";\r\nimport { WmlFieldSimple } from \"./fields\";\r\nimport { Indentation, parseIndentation } from \"./indentation\";\r\n\r\n@element(\"p\")\r\n@children(WmlBookmarkStart, WmlBookmarkEnd, WmlFieldSimple)\r\nexport class WmlParagraph extends DocxContainer {\r\n    props: ParagraphProperties = {} as ParagraphProperties;\r\n}\r\n\r\nexport interface ParagraphProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    indentation: Indentation;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n    styleId: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            break;\r\n\r\n        case \"ind\":\r\n            props.indentation = parseIndentation(elem, xml);\r\n            return false;\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleId = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { children, element } from \"../parser/xml-serialize\";\r\nimport { Border, parseBorder } from \"./border\";\r\nimport { WmlBreak, WmlLastRenderedPageBreak } from \"./breaks\";\r\nimport { Length, LengthUsage, Underline } from \"./common\";\r\nimport { DocxContainer } from \"./dom\";\r\nimport { WmlDrawing } from \"./drawing\";\r\nimport { WmlFieldChar } from \"./fields\";\r\nimport { WmlInstructionText, WmlSymbol, WmlTab, WmlText } from \"./text\";\r\n\r\n@element('r')\r\n@children(WmlText, WmlSymbol, WmlTab, WmlBreak, WmlInstructionText, WmlFieldChar, WmlLastRenderedPageBreak, WmlDrawing)\r\nexport class WmlRun extends DocxContainer {\r\n    id?: string;\r\n    styleName: string;\r\n    props: RunProperties = <RunProperties>{};\r\n}\r\n\r\nexport interface RunProperties {\r\n    styleName: string;\r\n    fontSize: Length;\r\n    color: string;\r\n    bold: boolean;\r\n    italics: boolean;\r\n    caps: boolean;\r\n    smallCaps: boolean;\r\n    strike: boolean;\r\n    doubleStrike: boolean;\r\n    outline: boolean;\r\n    imprint: boolean;\r\n    underline: Underline;\r\n    border: Border;\r\n    fonts: RunFonts;\r\n    shading: Shading;\r\n    highlight: string;\r\n    spacing: Length;\r\n    stretch: number;\r\n    verticalAlignment: 'baseline' | 'superscript' | 'subscript' | string;\r\n}\r\n\r\nexport interface Shading {\r\n    foreground: string,\r\n    background: string,\r\n    type: string\r\n}\r\n\r\nexport interface RunFonts {\r\n    ascii: string;\r\n    hAscii: string;\r\n    cs: string;\r\n    eastAsia: string;\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    switch (elem.localName) {\r\n        case 'rStyle': \r\n            props.styleName = xml.attr(elem, 'val');\r\n            break;\r\n\r\n        case 'bdr': \r\n            props.border = parseBorder(elem, xml);\r\n            break;\r\n\r\n        case 'rFonts': \r\n            props.fonts = parseRunFonts(elem, xml);\r\n            break;\r\n\r\n        case 'shd': \r\n            props.shading = parseShading(elem, xml);\r\n            break;\r\n\r\n        case 'highlight': \r\n            props.highlight = xml.attr(elem, 'val');\r\n            break;\r\n        \r\n        case 'spacing':\r\n            props.spacing = xml.lengthAttr(elem, 'val');\r\n            break;\r\n\r\n        case 'w':\r\n            props.stretch = xml.percentageAttr(elem, 'val');\r\n            break;\r\n\r\n            case \"color\": \r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        case \"b\":\r\n            props.bold = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"strike\":\r\n            props.strike = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"dstrike\":\r\n            props.doubleStrike = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"i\":\r\n            props.italics = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"u\":\r\n            props.underline = {\r\n                color: xml.attr(elem, \"color\"),\r\n                type: xml.attr(elem, 'val')\r\n            };\r\n            break;\r\n            \r\n        case 'caps':\r\n            props.caps = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'smallCaps':\r\n            props.smallCaps = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'imprint':\r\n            props.imprint = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'outline':\r\n            props.outline = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'vertAlign':\r\n            props.verticalAlignment = xml.attr(elem, 'val');\r\n            break;\r\n        \r\n        case 'emboss':\r\n        case 'shadow':\r\n        case 'vanish':\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseRunFonts(elem: Element, xml: XmlParser): RunFonts {\r\n    return {\r\n        ascii: xml.attr(elem, 'ascii'),\r\n        hAscii: xml.attr(elem, 'hAscii'),\r\n        cs: xml.attr(elem, 'cs'),\r\n        eastAsia: xml.attr(elem, 'eastAsia'),\r\n    };\r\n}\r\n\r\nexport function parseShading(elem: Element, xml: XmlParser): Shading {\r\n    return {\r\n        type: xml.attr(elem, 'val'),\r\n        foreground: xml.attr(elem, 'color'),\r\n        background: xml.attr(elem, 'fill')\r\n    };\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length, \r\n    height: Length, \r\n    orientation: \"landscape\" | string \r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\", \r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string;\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n            \r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tc\")\r\nexport class WmlTableCell extends DocxContainer {\r\n    span?: number;\r\n    verticalMerge: string;\r\n}","import { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tr\")\r\nexport class WmlTableRow extends DocxContainer {\r\n}","import globalXmlParser, { attr, elements, XmlParser } from \"../parser/xml-parser\";\r\nimport { element, fromElement } from \"../parser/xml-serialize\";\r\nimport { Length } from \"./common\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tbl\")\r\nexport class WmlTable extends DocxContainer {\r\n    @fromElement(\"tblGrid\", parseTableColumns)\r\n    columns?: TableColumn[];\r\n    @fromElement(\"tblPr\", parseTableProperties)\r\n    props: TableProperties;\r\n\r\n    cellStyle?: Record<string, string>;\r\n}\r\n\r\nexport interface TableColumn {\r\n    width?: Length;\r\n}\r\n\r\nexport interface TableProperties {\r\n    alignment: string;\r\n    caption: string;\r\n    tableLook: TableLook;\r\n}\r\n\r\nexport function parseTableProperties(elem: Element): TableProperties {\r\n    const result = {} as TableProperties;\r\n\r\n    for (const e of elements(elem)) {\r\n        switch(e.localName) {\r\n            case \"jc\":\r\n                result.alignment = attr(e, \"val\");\r\n                break;\r\n                \r\n            case \"tblCaption\":\r\n                result.caption = attr(e, \"val\");\r\n                break;\r\n\r\n            case \"tblLook\":\r\n                result.tableLook = parseTableLook(e);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport interface TableLook {\r\n    firstColumn: boolean;\r\n    firstRow: boolean;\r\n    lastColumn: boolean;\r\n    lastRow: boolean;\r\n    noHBand: boolean;\r\n    noVBand: boolean;\r\n}\r\n\r\nexport function parseTableLook(elem: Element, xml: XmlParser = globalXmlParser): TableLook {\r\n    //TODO\r\n    const intVal = xml.intAttr(elem, \"val\");\r\n\r\n    return {\r\n        firstColumn: xml.boolAttr(elem, 'firstColumn'),\r\n        firstRow: xml.boolAttr(elem, 'firstRow'),\r\n        lastColumn: xml.boolAttr(elem, 'lastColumn'),\r\n        lastRow: xml.boolAttr(elem, 'lastRow'),\r\n        noHBand: xml.boolAttr(elem, 'noHBand'),\r\n        noVBand: xml.boolAttr(elem, 'noVBand')\r\n    }\r\n}\r\n\r\nexport function parseTableColumns(elem: Element, xml: XmlParser = globalXmlParser): TableColumn[] {\r\n    return xml.elements(elem, 'gridCol').map(e => (<TableColumn>{\r\n        width: xml.lengthAttr(e, \"w\")\r\n    }));\r\n}","import { element, fromAttribute, fromText } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element('t')\r\nexport class WmlText extends DocxElement {\r\n    @fromText()\r\n    text: string;\r\n}\r\n\r\n@element('sym')\r\nexport class WmlSymbol extends DocxElement {\r\n    @fromAttribute('font')\r\n    font: string;\r\n    @fromAttribute('char')\r\n    char: string;\r\n}\r\n\r\n@element('tab')\r\nexport class WmlTab extends DocxElement {\r\n}\r\n\r\n@element(\"instrText\")\r\nexport class WmlInstructionText extends DocxElement {\r\n    @fromText()\r\n    text: string;\r\n}","import { WordDocument } from './word-document';\r\nimport { DocumentParser } from './document-parser';\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    trimXmlDeclaration: boolean;\r\n    inWrapper: boolean;\r\n    ignoreWidth: boolean;\r\n    ignoreHeight: boolean;\r\n    ignoreFonts: boolean;\r\n    breakPages: boolean;\r\n    ignoreLastRenderedPageBreak: boolean;\r\n    debug: boolean;\r\n    experimental: boolean;\r\n    className: string;\r\n    keepOrigin: boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    trimXmlDeclaration: false,\r\n    keepOrigin: false,\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n}\r\n\r\nexport function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null) {\r\n    var parser = new DocumentParser();\r\n    var renderer = new HtmlRenderer(window.document);\r\n\r\n    var options: Options = { \r\n        ...defaults,\r\n        ...userOptions\r\n    };\r\n\r\n    Object.assign(parser, options);\r\n    Object.assign(renderer, options);\r\n\r\n    return WordDocument.load(data, parser, options).then(doc => {\r\n        renderer.render(doc, bodyContainer, styleContainer, options);\r\n        return doc;\r\n    })\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    fontKey: string,\r\n    refId: string\r\n}\r\n\r\nexport function parseFonts(root: Element, xmlParser: XmlParser): FontDeclaration[] {\r\n    return xmlParser.elements(root).map(el => parseFont(el, xmlParser));\r\n}\r\n\r\nexport function parseFont(elem: Element, xmlParser: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xmlParser.attr(elem, \"name\")\r\n    };\r\n\r\n    for (let el of xmlParser.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xmlParser.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xmlParser.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n                result.fontKey = xmlParser.attr(el, \"fontKey\");\r\n                result.refId = xmlParser.attr(el, \"id\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlFooter } from \"./footer\";\r\n\r\nexport class FooterPart extends Part {\r\n    footerElement: WmlFooter;\r\n    \r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    parseXml(root: Element) {\r\n        this.footerElement = this._documentParser.parseFooter(root);\r\n    }\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element } from \"../parser/xml-serialize\";\r\n\r\n@element(\"ftr\")\r\nexport class WmlFooter extends DocxContainer {\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlHeader } from \"./header\";\r\n\r\nexport class HeaderPart extends Part {\r\n    headerElement: WmlHeader;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.headerElement = this._documentParser.parseHeader(root);\r\n    }\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element } from \"../parser/xml-serialize\";\r\n\r\n@element(\"hdr\")\r\nexport class WmlHeader extends DocxContainer {\r\n}","import { WordDocument } from './word-document';\r\nimport { IDomNumbering, DocxContainer, DocxElement } from './document/dom';\r\nimport { Length, Underline } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { WmlParagraph, ParagraphProperties } from './document/paragraph';\r\nimport { appendClass, keyBy, mergeDeep } from './utils';\r\nimport { updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { SectionProperties } from './document/section';\r\nimport { WmlRun, RunFonts, RunProperties, Shading } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { NumberingPartProperties } from './numbering/numbering';\r\nimport { Border } from './document/border';\r\nimport { TableColumn, WmlTable } from './document/table';\r\nimport { WmlTableRow } from './document/table-row';\r\nimport { WmlTableCell } from './document/table-cell';\r\nimport { WmlHyperlink } from './document/hyperlink';\r\nimport { WmlDrawing, DmlPicture } from './document/drawing';\r\nimport { WmlBreak, WmlLastRenderedPageBreak } from './document/breaks';\r\nimport { WmlSymbol, WmlTab, WmlText } from './document/text';\r\nimport { LineSpacing } from './document/line-spacing';\r\nimport { WmlStyle } from './styles/style';\r\nimport { WmlHeader } from './header/header';\r\nimport { WmlFooter } from './footer/footer';\r\nimport { WmlBody } from './document/document';\r\n\r\nconst knownColors = ['black','blue','cyan','darkBlue','darkCyan','darkGray','darkGreen','darkMagenta','darkRed','darkYellow','green','lightGray','magenta','none','red','white','yellow'];\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport class HtmlRenderer {\r\n\r\n    inWrapper: boolean = true;\r\n    className: string = \"docx\";\r\n    document: WordDocument;\r\n    options: Options;\r\n    domStyleMap: Record<string, IDomStyle>;\r\n    styleMap: Record<string, WmlStyle>;\r\n    keepOrigin: boolean = false;\r\n    renderHeaders: boolean = true;\r\n    renderFooters: boolean = true;\r\n\r\n    constructor(private htmlDocument: HTMLDocument) {\r\n    }\r\n\r\n    render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        this.domStyleMap = null;\r\n\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        removeAllElements(styleContainer);\r\n        removeAllElements(bodyContainer);\r\n\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n        \r\n        if (document.stylesPart != null) {\r\n            this.domStyleMap = this.processDomStyles(document.stylesPart.domStyles);\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docx document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.domStyles));\r\n        }\r\n\r\n        if (document.numberingPart) {\r\n            appendComment(styleContainer, \"docx document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n\r\n        if(!options.ignoreFonts && document.fontTablePart)\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n\r\n        var sectionElements = this.renderSections(document.documentPart.documentElement.body);\r\n\r\n        if (this.inWrapper) {\r\n            var wrapper = this.renderWrapper();\r\n            appentElements(wrapper, sectionElements);\r\n            bodyContainer.appendChild(wrapper);\r\n        }\r\n        else {\r\n            appentElements(bodyContainer, sectionElements);\r\n        }\r\n    }\r\n\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n        for(let f of fontsPart.fonts.filter(x => x.refId)) {\r\n            this.document.loadFont(f.refId, f.fontKey).then(fontData => {\r\n                var cssTest = `@font-face {\r\n                    font-family: \"${f.name}\";\r\n                    src: url(${fontData});\r\n                }`;\r\n\r\n                appendComment(styleContainer, `Font ${f.name}`);\r\n                styleContainer.appendChild(createStyleElement(cssTest));\r\n            });\r\n        }\r\n    }\r\n\r\n    processClassName(className: string) {\r\n        if (!className)\r\n            return this.className;\r\n\r\n        return `${this.className}_${className}`;\r\n    }\r\n\r\n    processStyles(styles: WmlStyle[]) {\r\n        const styleMap = keyBy(styles, s => s.id);\r\n\r\n        for (let style of styles.filter(s => s.basedOn)) {\r\n            const baseStyle = styleMap[style.basedOn];\r\n        \r\n            if(baseStyle) {\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        return styleMap;\r\n    }\r\n\r\n    processDomStyles(styles: IDomStyle[]) {\r\n        var domStylesMap = keyBy(styles, x => x.id);\r\n\r\n        for (let style of styles.filter(x => x.basedOn)) {\r\n            var baseStyle = domStylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                for (let styleValues of style.styles) {\r\n                    var baseValues = baseStyle.styles.filter(x => x.target == styleValues.target);\r\n\r\n                    if (baseValues && baseValues.length > 0)\r\n                        this.copyStyleProperties(baseValues[0].values, styleValues.values);\r\n                }\r\n            }\r\n            else if (this.options.debug)\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processClassName(this.escapeClassName(style.id));\r\n        }\r\n\r\n        return domStylesMap;\r\n    }\r\n\r\n    processElement(element: DocxElement) {\r\n        if (\"children\" in element) {\r\n            for (var e of (element as DocxContainer).children) {\r\n                e.className = this.processClassName(e.className);\r\n                e.parent = element;\r\n\r\n                if (e instanceof WmlTable) {\r\n                    this.processTable(e);\r\n                }\r\n                else {\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processTable(table: WmlTable) {\r\n        for (var r of table.children) {\r\n            for (var c of (r as DocxContainer).children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input)\r\n            return output;\r\n\r\n        if (output == null) output = {};\r\n        if (attrs == null) attrs = Object.getOwnPropertyNames(input);\r\n\r\n        for (var key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    private createElement(tagName, props = undefined) {\r\n        return Object.assign(this.htmlDocument.createElement(tagName), props);\r\n    }\r\n\r\n    private renderContainer(elem: DocxContainer, tagName: string): HTMLElement {\r\n        const result = this.createElement(tagName);\r\n        this.renderElements(elem.children, elem, result);\r\n        return result;\r\n    }\r\n\r\n    createSection(className: string, props: SectionProperties) {\r\n        var elem = this.createElement(\"section\", { className });\r\n        \r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = this.renderLength(props.pageMargins.left);\r\n                elem.style.paddingRight = this.renderLength(props.pageMargins.right);\r\n                elem.style.paddingTop = this.renderLength(props.pageMargins.top);\r\n                elem.style.paddingBottom = this.renderLength(props.pageMargins.bottom);\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth)\r\n                    elem.style.width = this.renderLength(props.pageSize.width);\r\n                if (!this.options.ignoreHeight)\r\n                    elem.style.minHeight = this.renderLength(props.pageSize.height);\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = this.renderLength(props.columns.space);\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    renderSections(document: WmlBody): HTMLElement[] {\r\n        const result = [];\r\n\r\n        this.processElement(document);\r\n\r\n        for(let section of this.splitBySection(document.children)) {\r\n            const sectionProps = section.sectProps || document.sectionProps;\r\n            var sectionElement = this.createSection(this.className, sectionProps);\r\n\r\n            // if(this.renderHeaders && sectionProps.headerRefs) {\r\n            //     for(const headerRef of sectionProps.headerRefs) {\r\n            //     }\r\n            // }\r\n\r\n            this.renderElements(section.elements, document, sectionElement);\r\n\r\n            // if(this.renderFooters && sectionProps.footerRefs) {\r\n            //     for(const headerRef of sectionProps.footerRefs) {\r\n            //         const partPath = this.document.getPathById(this.document.documentPart, headerRef.id);\r\n            //         const part = this.document.partsMap[partPath] as FooterPart;\r\n\r\n            //         this.processElement(part.footerElement);\r\n            //         sectionElement.appendChild(this.renderElement(part.footerElement, null))\r\n            //     }\r\n            // }\r\n\r\n            result.push(sectionElement);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isPageBreakElement(elem: DocxElement): boolean {\r\n        if (elem instanceof WmlLastRenderedPageBreak)\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n\r\n        return elem instanceof WmlBreak && elem.type === \"page\";  \r\n    }\r\n\r\n    splitBySection(elements: DocxElement[]): { sectProps: SectionProperties, elements: DocxElement[] }[] {\r\n        var current = { sectProps: null, elements: [] };\r\n        var result = [current];\r\n\r\n        for(let elem of elements) {\r\n            if (elem instanceof WmlParagraph) {\r\n                const styleName = elem.props.styleId;\r\n                const s = this.styleMap && styleName ? this.styleMap[styleName] : null;\r\n            \r\n                if(s?.paragraphProps?.pageBreakBefore) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n            }\r\n\r\n            current.elements.push(elem);\r\n\r\n            if(elem instanceof WmlParagraph)\r\n            {\r\n                const p = elem as WmlParagraph;\r\n\r\n                var sectProps = p.props.sectionProps;\r\n                var pBreakIndex = -1;\r\n                var rBreakIndex = -1;\r\n                \r\n                if(this.options.breakPages && p.children.length > 0) {\r\n                    pBreakIndex = p.children.findIndex((r: DocxContainer) => {\r\n                        rBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n    \r\n                if(sectProps || pBreakIndex != -1) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n\r\n                if(pBreakIndex != -1) {\r\n                    let breakRun = p.children[pBreakIndex] as WmlRun;\r\n                    let splitRun = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if(pBreakIndex < p.children.length - 1 || splitRun) {\r\n                        var children = elem.children;\r\n                        var newParagraph = Object.assign(new WmlParagraph(), elem, { children: children.slice(pBreakIndex) });\r\n                        elem.children = children.slice(0, pBreakIndex);\r\n                        current.elements.push(newParagraph);\r\n\r\n                        if(splitRun) {\r\n                            let runChildren = breakRun.children;\r\n                            let newRun =  Object.assign(new WmlRun(), breakRun, { children: runChildren.slice(0, rBreakIndex) });\r\n                            elem.children.push(newRun);\r\n                            breakRun.children = runChildren.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let currentSectProps = null;\r\n\r\n        for (let i = result.length - 1; i >= 0; i--) {\r\n            if (result[i].sectProps == null) {\r\n                result[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = result[i].sectProps\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderLength(l: Length): string {\r\n        return l ? `${l.value.toFixed(2)}${l.type ?? ''}` : null;\r\n    }\r\n\r\n    renderColor(c: string, autoColor: string = 'black'): string {\r\n        if (/[a-f0-9]{6}/i.test(c))\r\n            return `#${c}`;\r\n\r\n        return c === 'auto' ? autoColor : c;\r\n    }\r\n\r\n    renderWrapper() {\r\n        var wrapper = document.createElement(\"div\");\r\n\r\n        wrapper.className = `${this.className}-wrapper`\r\n\r\n        return wrapper;\r\n    }\r\n\r\n    renderDefaultStyle() {\r\n        var c = this.className;\r\n        var styleText = `\r\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n.${c}-wrapper section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n.${c} { color: black; }\r\nsection.${c} { box-sizing: border-box; }\r\n.${c} table { border-collapse: collapse; }\r\n.${c} table td, .${c} table th { vertical-align: top; }\r\n.${c} p { margin: 0pt; }\r\n`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n                    \r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n    \r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(styles: IDomNumbering[], styleContainer: HTMLElement) {\r\n        var styleText = \"\";\r\n        var rootCounters = [];\r\n\r\n        for (var num of styles) {\r\n            var selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            var listStyleType = \"none\";\r\n\r\n            if (num.levelText && (num.format == \"decimal\" || num.format == \"lowerLetter\" || num.format == \"lowerRoman\")) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counter\r\n                    });\r\n                }\r\n                else {\r\n                    rootCounters.push(counter);\r\n                }\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter\r\n                });\r\n            }\r\n            else if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    var text = `.${this.className}-wrapper { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            }\r\n            else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.style\r\n            });\r\n        }\r\n\r\n        if (rootCounters.length > 0) {\r\n            styleText += this.styleToString(`.${this.className}-wrapper`, {\r\n                \"counter-reset\": rootCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        var styleText = \"\";\r\n        var stylesMap = this.domStyleMap;\r\n\r\n        for (let style of styles) {\r\n            var subStyles =  style.styles;\r\n\r\n            if(style.linked) {\r\n                var linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if(this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (var subStyle of subStyles) {\r\n                var selector = \"\";\r\n\r\n                if (style.target == subStyle.target)\r\n                    selector += `${style.target}.${style.cssName}`;\r\n                else if (style.target)\r\n                    selector += `${style.target}.${style.cssName} ${subStyle.target}`;\r\n                else\r\n                    selector += `.${style.cssName} ${subStyle.target}`;\r\n\r\n                if (style.isDefault && style.target)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                if (style.paragraphProps && subStyle.target == \"p\") {\r\n                    this.renderParagraphProperties(subStyle.values, style.paragraphProps);\r\n                }\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderElement(elem: DocxElement, parent: DocxElement): Node {\r\n        if (elem instanceof WmlParagraph) {\r\n            return this.renderParagraph(elem);\r\n        } else if (elem instanceof WmlBookmarkStart) {\r\n            return this.renderBookmarkStart(elem);\r\n        } else if (elem instanceof WmlRun) {\r\n            return this.renderRun(elem);\r\n        } else if (elem instanceof WmlBreak) {\r\n            return this.renderBreak(elem);\r\n        } else if (elem instanceof WmlText) {\r\n            return this.renderText(elem);\r\n        } else if (elem instanceof WmlSymbol) {\r\n            return this.renderSymbol(elem);\r\n        } else if (elem instanceof WmlTab) {\r\n            return this.renderTab(elem);\r\n        } else if (elem instanceof WmlTable) {\r\n            return this.renderTable(elem);\r\n        } else if (elem instanceof WmlTableRow) {\r\n            return this.renderTableRow(elem);\r\n        } else if (elem instanceof WmlTableCell) {\r\n            return this.renderTableCell(elem);\r\n        } else if (elem instanceof WmlHyperlink) {\r\n            return this.renderHyperlink(elem);\r\n        } else if (elem instanceof WmlDrawing) {\r\n            return this.renderDrawing(elem);\r\n        } else if (elem instanceof DmlPicture) {\r\n            return this.renderImage(elem);\r\n        } else if (elem instanceof WmlHeader) {\r\n            return this.renderHeader(elem);\r\n        } else if (elem instanceof WmlFooter) {\r\n            return this.renderFooter(elem);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderChildren(elem: DocxContainer, into?: HTMLElement): Node[] {\r\n        return this.renderElements(elem.children, elem, into);\r\n    }\r\n\r\n    renderElements(elems: DocxElement[], parent: DocxElement, into?: HTMLElement): Node[] {\r\n        if(elems == null)\r\n            return null;\r\n\r\n        var result = elems.map(e => {\r\n            let n = this.renderElement(e, parent);\r\n\r\n            if(n && this.keepOrigin)\r\n                (n as any).$$docxElement = e;\r\n\r\n            return n;\r\n        }).filter(e => e != null);\r\n\r\n        if(into)\r\n            for(let c of result)\r\n                into.appendChild(c);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderParagraph(elem: WmlParagraph) {\r\n        var result = this.renderContainer(elem, \"p\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderParagraphProperties(result.style, elem.props);\r\n\r\n        const style = elem.props.styleId && this.styleMap?.[elem.props.styleId]; \r\n        const numbering = elem.props.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            var numberingClass = this.numberingClass(numbering.id, numbering.level ?? 0);\r\n            result.className = appendClass(result.className, numberingClass);\r\n        }\r\n\r\n        if (elem.props.styleId) {\r\n            var styleClassName = this.processClassName(this.escapeClassName(elem.props.styleId));\r\n            result.className = appendClass(result.className, styleClassName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderParagraphProperties(style: any, props: ParagraphProperties) {\r\n        for (const p in props) {\r\n            const v = props[p];\r\n\r\n            switch(p as keyof(ParagraphProperties)) {\r\n                case \"lineSpacing\":\r\n                    this.renderLineSpacing(style, v);\r\n                    break;\r\n\r\n                case \"textAlignment\":\r\n                    this.renderTextAligment(style, v);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTextAligment(style: any, v: any) {\r\n        const valuesMap = {\r\n            \"auto\": \"baseline\",\r\n            \"baseline\": \"baseline\",\r\n            \"top\": \"top\",\r\n            \"center\": \"middle\",\r\n            \"bottom\": \"bottom\"\r\n        }\r\n\r\n        if(v in valuesMap)\r\n            style['vertical-align'] = valuesMap[v];\r\n    }\r\n\r\n    renderLineSpacing(style: any, spacing: LineSpacing) {   \r\n        if (spacing.before) {\r\n            style[\"margin-top\"] = this.renderLength(spacing.before);\r\n        }\r\n\r\n        if (spacing.after) {\r\n            style[\"margin-bottom\"] = this.renderLength(spacing.after);\r\n        }\r\n\r\n        switch(spacing.lineRule) {\r\n            case 'atLeast':\r\n                style['line-height'] = `calc(100% - ${this.renderLength(spacing.line)})`;\r\n                break;\r\n            case 'auto':\r\n                style['line-height'] = this.renderLength(spacing.line);\r\n                break;\r\n            case 'exactly':\r\n                //TODO: setting min-height maybe not needed\r\n                style['line-height'] = style['min-height'] = this.renderLength(spacing.line);\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        for (const p in props) {\r\n            const v = props[p];\r\n\r\n            switch (p as keyof(RunProperties)) {\r\n                case 'highlight':\r\n                    style['background'] = this.renderColor(v);\r\n                    break;\r\n\r\n                case 'shading':\r\n                    style['background'] = this.renderShading(v);\r\n                    break;\r\n\r\n                case 'border':\r\n                    style['border'] = this.renderBorder(v);\r\n                    break;\r\n\r\n                case 'color':\r\n                    style[\"color\"] = this.renderColor(v);\r\n                    break;\r\n\r\n                case 'fontSize':\r\n                    style[\"font-size\"] = this.renderLength(v);\r\n                    break;\r\n\r\n                case 'bold':\r\n                    style[\"font-weight\"] = v ? 'bold' : 'normal';\r\n                    break;\r\n\r\n                case 'italics':\r\n                    style[\"font-style\"] = v ? 'italic' : 'normal';\r\n                    break;\r\n\r\n                case 'smallCaps':\r\n                    style[\"font-size\"] = v ? 'smaller' : 'none';\r\n                case 'caps':\r\n                    style[\"text-transform\"] = v ? 'uppercase' : 'none';\r\n                    break;\r\n                    \r\n                case 'strike':\r\n                    style[\"text-decoration\"] = v ? 'line-through' : 'none';\r\n                    break;\r\n\r\n                case 'fonts':\r\n                    style[\"font-family\"] = this.renderRunFonts(v);\r\n                    break;\r\n    \r\n                case 'underline':\r\n                    this.renderUnderline(style, v);\r\n                    break;\r\n                \r\n                case 'verticalAlignment':\r\n                    this.renderRunVerticalAlignment(style, v);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderRunVerticalAlignment(style: any, align: string) {\r\n        switch(align) {\r\n            case 'subscript': \r\n                style['vertical-align'] = 'sub';\r\n                style['font-size'] = 'small';\r\n                break;\r\n\r\n            case 'superscript': \r\n                style['vertical-align'] = 'super';\r\n                style['font-size'] = 'small';\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderRunFonts(fonts: RunFonts) {\r\n        return [fonts.ascii, fonts.hAscii, fonts.cs, fonts.eastAsia].filter(x => x).map(x => `'${x}'`).join(',');\r\n    }\r\n\r\n    renderBorder(border: Border) {\r\n        if (border.type == 'nil')\r\n            return 'none';\r\n\r\n        return `${this.renderLength(border.size)} solid ${this.renderColor(border.color)}`;\r\n    }\r\n    \r\n    renderShading(shading: Shading) {\r\n        if (shading.type == 'clear')\r\n            return this.renderColor(shading.background, autos.shd);\r\n        \r\n        return this.renderColor(shading.background, autos.shd);\r\n    }\r\n    \r\n    renderUnderline(style: any, underline: Underline) {\r\n        if (underline.type == null || underline.type == \"none\")\r\n            return;\r\n\r\n        switch (underline.type) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n        }\r\n\r\n        if (underline.color)\r\n            style[\"text-decoration-color\"] = this.renderColor(underline.color);\r\n    }\r\n\r\n    renderHyperlink(elem: WmlHyperlink) {\r\n        var result = this.createElement(\"a\");\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.anchor)\r\n            result.href = elem.anchor;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderDrawing(elem: WmlDrawing) {\r\n        var result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderImage(elem: DmlPicture) {\r\n        let result = this.createElement(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            this.document.loadDocumentImage(elem.resourceId).then(x => {\r\n                result.src = x;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderHeader(elem: WmlHeader) {\r\n        return this.renderContainer(elem, \"header\");\r\n    }\r\n\r\n    renderFooter(elem: WmlHeader) {\r\n        return this.renderContainer(elem, \"footer\");\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.type == \"textWrapping\") {\r\n            return this.htmlDocument.createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        var span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    renderTab(elem: WmlTab) {\r\n        var tabSpan = this.createElement(\"span\");\r\n     \r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if(this.options.experimental) {\r\n            setTimeout(() => {\r\n                var paragraph = findParent<WmlParagraph>(elem, WmlParagraph);\r\n                \r\n                if(paragraph.props.tabs == null)\r\n                    return;\r\n\r\n                paragraph.props.tabs.sort((a, b) => a.position.value - b.position.value);\r\n                tabSpan.style.display = \"inline-block\";\r\n                updateTabStop(tabSpan, paragraph.props.tabs);\r\n            }, 0);\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        var result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    renderRun(elem: WmlRun) {\r\n        var result = this.createElement(\"span\");\r\n\r\n        if(elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        //this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderRunProperties(result.style, elem.props);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n        if (elem.columns)\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n\r\n        if (elem.props?.caption) {\r\n            result.appendChild(this.createElement(\"caption\", { textContent: elem.props?.caption }));\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: TableColumn[]) {\r\n        const result = this.createElement(\"colGroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n            colElem.style.width = this.renderLength(col.width);\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableRow(elem: WmlTableRow) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement(\"td\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span) result.colSpan = elem.span;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n        if (style == null)\r\n            return;\r\n\r\n        for (let key of Object.getOwnPropertyNames(style)) {\r\n            ouput.style[key] = style[key];\r\n        }\r\n    }\r\n\r\n    renderClass(input: DocxElement, ouput: HTMLElement) {\r\n        if (input.className)\r\n            ouput.className = input.className;\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText) \r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, id: string, numformat: string) {\r\n        var result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return '\"' + result + '\"';\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        var mapping = {\r\n            \"none\": \"none\",\r\n            \"bullet\": \"disc\",\r\n            \"decimal\": \"decimal\",\r\n            \"lowerLetter\": \"lower-alpha\",\r\n            \"upperLetter\": \"upper-alpha\",\r\n            \"lowerRoman\": \"lower-roman\",\r\n            \"upperRoman\": \"upper-roman\",\r\n        };\r\n\r\n        return mapping[format] || format;\r\n    }\r\n\r\n    escapeClassName(className: string) {\r\n        return className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and');\r\n    }\r\n}\r\n\r\nfunction appentElements(container: HTMLElement, children: HTMLElement[]) {\r\n    for (let c of children)\r\n        container.appendChild(c);\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\nfunction createStyleElement(cssText: string) {\r\n    var styleElement = document.createElement(\"style\");\r\n    styleElement.innerHTML = cssText;\r\n    return styleElement;\r\n}\r\n\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends DocxElement>(elem: DocxElement, type: any): T {\r\n    var parent = elem.parent;\r\n\r\n    while (parent != null && !(parent instanceof type))\r\n        parent = parent.parent;\r\n    \r\n    return <T>parent;\r\n}","import { ParagraphTab } from \"./document/paragraph\";\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], pixelToPoint: number = 72 / 96) {\r\n\r\n    let p = elem.closest(\"p\");\r\n\r\n    let tbb = elem.getBoundingClientRect();\r\n    let pbb = p.getBoundingClientRect();\r\n\r\n    let left = (tbb.left - pbb.left) * pixelToPoint;\r\n    let tab = tabs.find(t => t.style != \"clear\" && t.position.value > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    elem.style.display = \"inline-block\";\r\n    elem.style.width = `${(tab.position.value - left)}pt`;    \r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.borderBottom = \"1px black dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.borderBottom = \"1px black solid\";\r\n            break;\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertPercentage, convertBoolean  } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n    \r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport function elements(elem: Element, localName: string = null): Element[] {\r\n    const result = [];\r\n\r\n    for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n        let c = elem.childNodes.item(i);\r\n\r\n        if (c.nodeType == Node.ELEMENT_NODE && (localName == null || (c as Element).localName == localName))\r\n            result.push(c);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function attr(elem: Element, localName: string): string {\r\n    for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n        let a = elem.attributes.item(i);\r\n\r\n        if (a.localName == localName)\r\n            return a.value;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport class XmlParser {\r\n    elements = elements;\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    \r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attr = attr;\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    percentageAttr(node: Element, attrName: string): number {\r\n        return convertPercentage(this.attr(node, attrName));\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","const schemaSymbol = Symbol(\"open-xml-schema\");\r\n\r\nexport type ValueConverter = (val: string) => any;\r\n\r\nexport type ElementConverter = (val: Element) => any;\r\n\r\nexport function element(name: string) {\r\n    return function(target: any) {\r\n        var schema = getPrototypeXmlSchema(target.prototype);\r\n        schema.elemName = name;\r\n    }\r\n}\r\n\r\nexport function children(...elements: any[]) {\r\n    return function(target) {\r\n        var schema = getPrototypeXmlSchema(target.prototype);\r\n        schema.children = {};\r\n        for(let c of elements) {\r\n            let cs = getPrototypeXmlSchema(c.prototype);\r\n            schema.children[cs.elemName] = { proto: c.prototype, schema: cs };\r\n        }\r\n    }\r\n}\r\n\r\nexport function fromText(convert: ValueConverter = null) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.text = { prop, convert };\r\n    }\r\n}\r\n\r\nexport function fromAttribute(attrName: string, convert: ValueConverter = null) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.attrs[attrName] = { prop, convert };\r\n    }\r\n}\r\n\r\nexport function fromElement(elemName: string, convert: ElementConverter) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.elements[elemName] = { prop, convert };\r\n    }   \r\n}\r\n\r\nexport function buildXmlSchema(schemaObj: any): OpenXmlSchema {\r\n    var schema: OpenXmlSchema = {\r\n        text: null,\r\n        attrs: {},\r\n        elements: {},\r\n        elemName: null,\r\n        children: null\r\n    };\r\n\r\n    for(let p in schemaObj) {\r\n        let v = schemaObj[p];\r\n\r\n        if(p == \"$elem\") {\r\n            schema.elemName = v;\r\n        }\r\n        else if(v.$attr) {\r\n            schema.attrs[v.$attr] = { prop: p, convert: null };\r\n        }\r\n    }\r\n\r\n    return schema;\r\n}\r\n\r\nexport function deserializeElement<T = any>(n: Element, output: T, ops: DeserializeOptions): T {\r\n    var proto = Object.getPrototypeOf(output);\r\n    var schema = proto[schemaSymbol];\r\n\r\n    if (ops?.keepOrigin) {\r\n        (output as any).$$xmlElement = n;\r\n    }  \r\n\r\n    if (schema == null)\r\n        return output;\r\n\r\n    deserializeSchema(n, output, schema);\r\n\r\n    for (let i = 0, l = n.children.length; i < l; i ++) {\r\n        const elem = n.children.item(i);\r\n        const child = schema.children[elem.localName];\r\n\r\n        if (child) {\r\n            const obj = child.proto.constructor ? new child.proto.constructor() : Object.create(child.proto);\r\n            deserializeElement(elem, obj, ops);\r\n            (output as any).children.push(obj);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport function deserializeSchema(n: Element, output: any, schema: OpenXmlSchema) {\r\n    if (schema.text) {\r\n        let prop = schema.text;\r\n        output[prop.prop] = prop.convert ? prop.convert(n.textContent) : n.textContent; \r\n    }\r\n\r\n    for (let i = 0, l = n.attributes.length; i < l; i++) {\r\n        const attr = n.attributes.item(i);\r\n        const prop = schema.attrs[attr.localName];\r\n\r\n        if(prop == null)\r\n            continue;\r\n\r\n        output[prop.prop] = prop.convert ? prop.convert(attr.value) : attr.value; \r\n    }\r\n\r\n    for (let i = 0, l = n.childNodes.length; i < l; i ++) {\r\n        const elem = n.childNodes.item(i) as Element;\r\n        const prop = elem.nodeType === Node.ELEMENT_NODE ? schema.elements[elem.localName] : null;\r\n\r\n        if (prop == null)\r\n            continue;\r\n\r\n        output[prop.prop] = prop.convert(elem); \r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport interface DeserializeOptions {\r\n    keepOrigin: boolean\r\n}\r\n\r\nexport interface OpenXmlSchema {\r\n    elemName: string;\r\n    text: OpenXmlSchemaProperty;\r\n    attrs: Record<string, OpenXmlSchemaProperty>;\r\n    elements: Record<string, any>;\r\n    children: Record<string, any>;\r\n}\r\n\r\nexport interface OpenXmlSchemaProperty {\r\n    prop: string;\r\n    convert: ValueConverter;\r\n}\r\n\r\nfunction getPrototypeXmlSchema(proto: any): OpenXmlSchema {\r\n    return proto[schemaSymbol] || (proto[schemaSymbol] = {\r\n        text: null,\r\n        attrs: {},\r\n        children: {},\r\n        elements: {}\r\n    });\r\n}","import { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface DocumentDefaults {\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport function parseDocumentDefaults(elem: Element, xml: XmlParser) {\r\n    let result = <DocumentDefaults>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch(e.localName) {\r\n            case \"pPrDefault\": \r\n                let pPrElem = xml.element(e, 'pPr');\r\n                \r\n                if (pPrElem)\r\n                    result.paragraphProps = parseParagraphProperties(pPrElem, xml);\r\n                break;\r\n\r\n            case \"rPrDefault\":\r\n                let rPrElem = xml.element(e, 'rPr');\r\n                \r\n                if (rPrElem)\r\n                    result.runProps = parseRunProperties(rPrElem, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { convertBoolean } from \"../document/common\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { deserializeElement, element, fromAttribute } from \"../parser/xml-serialize\";\r\n\r\nexport type StyleType = 'character' | 'numbering' | 'paragraph' | 'table';\r\n\r\n@element(\"style\")\r\nexport class WmlStyle {\r\n    @fromAttribute(\"styleId\")\r\n    id: string;\r\n    @fromAttribute(\"type\")\r\n    type: StyleType;\r\n    @fromAttribute(\"customStyle\", convertBoolean)\r\n    customStyle: boolean\r\n    @fromAttribute(\"default\", convertBoolean)\r\n    default: boolean;\r\n\r\n    name: string;\r\n    basedOn: string;\r\n    aliases: string[];\r\n    link: string;\r\n\r\n    next: string;\r\n    locked: boolean;\r\n    autoRedefine: boolean;\r\n    hidden: boolean;\r\n    semiHidden: boolean;\r\n    uiPriority: number;\r\n\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport function parseStyle(elem: Element, xml: XmlParser): WmlStyle {\r\n    let result = deserializeElement(elem, new WmlStyle(), null);\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n    \r\n            case \"name\":\r\n                result.name = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"basedOn\":\r\n                result.basedOn = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"aliases\":\r\n                result.aliases = xml.attr(e, 'val').split(',');\r\n                break;\r\n\r\n            case \"link\":\r\n                result.link = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"next\":\r\n                result.next = xml.attr(e, 'val');\r\n                break;\r\n        \r\n            case \"autoRedefine\":\r\n                result.autoRedefine = true;\r\n                break;\r\n\r\n            case \"hidden\":\r\n                result.hidden = true;\r\n                break;\r\n\r\n            case \"semiHidden\":\r\n                result.semiHidden = true;\r\n                break;\r\n    \r\n            case \"locked\":\r\n                result.locked = true;\r\n                break;\r\n\r\n            case \"uiPriority\":\r\n                result.uiPriority = xml.intAttr(e, 'val');;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { keyBy } from \"../utils\";\r\nimport { DocumentDefaults, parseDocumentDefaults } from \"./document-defaults\";\r\nimport { parseStyle, WmlStyle, StyleType } from \"./style\";\r\n\r\nexport class StylesPart extends Part implements StylesPartProperties {\r\n    defaults: DocumentDefaults;\r\n    styles: WmlStyle[];\r\n    \r\n    domStyles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseStylesPart(root, this._package.xmlParser));\r\n        this.domStyles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}\r\n\r\nexport interface StylesPartProperties {\r\n    defaults: DocumentDefaults;\r\n    styles: WmlStyle[];\r\n}\r\n\r\nexport function parseStylesPart(elem: Element, xml: XmlParser): StylesPartProperties {\r\n    let result = {\r\n        styles: []\r\n    } as StylesPartProperties;\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"docDefaults\":\r\n                result.defaults = parseDocumentDefaults(e, xml);\r\n                break;\r\n\r\n            case \"style\":\r\n                result.styles.push(parseStyle(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","import { DocxElement } from \"./document/dom\";\r\n\r\nexport function addElementClass(element: DocxElement, className: string): string {\r\n    return element.className = appendClass(element.className, className);\r\n}\r\n\r\nexport function appendClass(classList: string, className: string): string {\r\n    return (!classList) ? className : `${classList} ${className}`\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"file://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substr(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart } from \"./footer/footer-part\";\r\nimport { HeaderPart } from \"./header/header-part\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\n\r\nconst topLevelRels = [\r\n    { type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n    { type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n    { type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n];\r\n\r\nexport class WordDocument {\r\n    private _package: OpenXmlPackage;\r\n    private _parser: DocumentParser;\r\n\r\n    rels: Relationship[];\r\n    parts: Part[] = [];\r\n    partsMap: Record<string, Part> = {};\r\n\r\n    documentPart: DocumentPart;\r\n    fontTablePart: FontTablePart;\r\n    numberingPart: NumberingPart;\r\n    stylesPart: StylesPart;\r\n    corePropsPart: CorePropsPart;\r\n    extendedPropsPart: ExtendedPropsPart;\r\n\r\n    static load(blob, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n        var d = new WordDocument();\r\n\r\n        d._parser = parser;\r\n\r\n        return OpenXmlPackage.load(blob, options)\r\n            .then(pkg => {\r\n                d._package = pkg;\r\n\r\n                return d._package.loadRelationships();\r\n            }).then(rels => {\r\n                d.rels = rels;\r\n\r\n                const tasks = topLevelRels.map(rel => {\r\n                    const r = rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n                    return d.loadRelationshipPart(r.target, r.type);\r\n                });\r\n\r\n                return Promise.all(tasks);\r\n            }).then(() => d);\r\n    }\r\n\r\n    save(type = \"blob\"): Promise<any> {\r\n        return this._package.save(type);\r\n    }\r\n\r\n    private loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n        if (this.partsMap[path])\r\n            return Promise.resolve(this.partsMap[path]);\r\n\r\n        if (!this._package.get(path))\r\n            return Promise.resolve(null);\r\n\r\n        let part: Part = null;\r\n\r\n        switch (type) {\r\n            case RelationshipTypes.OfficeDocument:\r\n                this.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.FontTable:\r\n                this.fontTablePart = part = new FontTablePart(this._package, path);\r\n                break;\r\n\r\n            case RelationshipTypes.Numbering:\r\n                this.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Styles:\r\n                this.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Theme:\r\n                part = new ThemePart(this._package, path);\r\n                break;\r\n    \r\n            case RelationshipTypes.Footer:\r\n                part = new FooterPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Header:\r\n                part = new HeaderPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.CoreProperties:\r\n                this.corePropsPart = part = new CorePropsPart(this._package, path);\r\n                break;\r\n    \r\n            case RelationshipTypes.ExtendedProperties:\r\n                this.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n                break;\r\n        }\r\n\r\n        if (part == null)\r\n            return Promise.resolve(null);\r\n\r\n        this.partsMap[path] = part;\r\n        this.parts.push(part);\r\n\r\n        return part.load().then(() => {\r\n            if (part.rels == null || part.rels.length == 0)\r\n                return part;\r\n\r\n            const [folder] = splitPath(part.path); \r\n            const rels = part.rels.map(rel => {\r\n                return this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)\r\n            });\r\n\r\n            return Promise.all(rels).then(() => part);\r\n        });\r\n    }\r\n\r\n    loadDocumentImage(id: string): PromiseLike<string> {\r\n        return this.loadResource(this.documentPart, id, \"blob\")\r\n            .then(x => x ? URL.createObjectURL(x) : null);\r\n    }\r\n\r\n    loadNumberingImage(id: string): PromiseLike<string> {\r\n        return this.loadResource(this.numberingPart, id, \"blob\")\r\n            .then(x => x ? URL.createObjectURL(x) : null);\r\n    }\r\n\r\n    loadFont(id: string, key: string): PromiseLike<string> {\r\n        return this.loadResource(this.fontTablePart, id, \"uint8array\")\r\n            .then(x => x ? URL.createObjectURL(new Blob([deobfuscate(x, key)])) : x);\r\n    }\r\n\r\n    getPathById(part: Part, id: string): string {\r\n        const rel = part.rels.find(x => x.id == id);\r\n        const [folder] = splitPath(part.path); \r\n        return rel ? resolvePath(rel.target, folder) : null;\r\n    }\r\n\r\n    private loadResource(part: Part, id: string, outputType: OutputType) {\r\n        const path = this.getPathById(part, id);\r\n        return path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n    }\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n    const len = 16;\r\n    const trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n    const numbers = new Array(len);\r\n\r\n    for (let i = 0; i < len; i++)\r\n        numbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n    for (let i = 0; i < 32; i++)\r\n        data[i] = data[i] ^ numbers[i % len]\r\n\r\n    return data;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__290__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__290__","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","load","input","JSZip","loadAsync","then","zip","OpenXmlPackage","save","type","generateAsync","async","Promise","resolve","loadRelationships","relsPath","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","all","rels","text","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","Part","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","highlight","SizeType","skipDeclaration","ignoreWidth","debug","deserialize","elem","output","deserializeElement","parseDocumentFile","xbody","element","result","WmlDocument","body","WmlBody","parseBodyElements","parseFooter","WmlFooter","parseHeader","WmlHeader","localName","children","push","parseParagraph","parseTable","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","node","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","paragraphProps","parseParagraphProperties","stringAttr","isDefault","boolAttr","linked","className","next","aliases","split","runProps","parseRunProperties","parseTableStyle","s","console","warn","selector","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementStringAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","bullet","filter","levelText","format","WmlParagraph","parseRun","parseHyperlink","paragraph","cssStyle","parseParagraphProperty","props","utils","addElementClass","classNameOfCnfStyle","parseFrame","parent","WmlHyperlink","WmlRun","d","parseDrawing","run","Object","assign","parseDrawingWrapper","WmlDrawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","sizeAttr","Emu","pos","alignNode","offsetNode","textContent","sizeValue","g","parseGraphic","graphicData","parsePicture","DmlPicture","blipFill","blip","resourceId","spPr","xfrm","WmlTable","parseTableRow","parseTableProperties","table","cellStyle","classNameOftblLook","parseTablePosition","topFromText","bottomFromText","rightFromText","leftFromText","addSize","WmlTableRow","parseTableCell","parseTableRowProperties","row","WmlTableCell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","colorAttr","FontSize","valueOfSize","parseTrHeight","valueOfStrike","valueOfBold","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","valueOfTextAlignment","parseSpacing","val","col","ascii","firstLine","left","start","right","end","before","after","line","lineRule","toFixed","DocumentParser","cb","i","childNodes","length","nodeType","nodeName","attrName","defValue","autoColor","v","parseInt","Dxa","convertSize","test","intVal","Border","Percent","replace","trim","a","b","parseCoreProps","CorePropsPart","el","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseExtendedProps","ExtendedPropsPart","safeParseToInt","value","template","pages","words","characters","application","lines","paragraphs","company","appVersion","fromAttribute","WmlBookmarkStart","DocxElement","WmlBookmarkEnd","parseBorder","size","lengthAttr","LengthUsage","Point","frame","shadow","top","bottom","WmlBreak","WmlLastRenderedPageBreak","ns","wordml","drawingml","picture","mul","unit","LineHeight","usage","endsWith","parseFloat","defaultValue","pkg","parser","_documentParser","documentElement","DocumentPart","fromElement","parseSectionProperties","DocxContainer","WmlFieldChar","convertBoolean","WmlFieldSimple","parse","anchor","hanging","namespaceURI","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","indentation","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","styleId","position","leader","WmlText","WmlSymbol","WmlTab","WmlInstructionText","parseRunProperty","styleName","border","fonts","parseRunFonts","shading","parseShading","spacing","stretch","percentageAttr","fontSize","bold","strike","doubleStrike","italics","underline","caps","smallCaps","imprint","outline","verticalAlignment","hAscii","cs","eastAsia","foreground","background","SectionType","parseColumns","numberOfColumns","space","separator","equalWidth","columns","width","parseFooterHeaderReference","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","parseTableColumns","alignment","caption","tableLook","parseTableLook","firstColumn","firstRow","lastColumn","lastRow","noHBand","noVBand","fromText","defaults","ignoreHeight","ignoreFonts","breakPages","ignoreLastRenderedPageBreak","experimental","inWrapper","data","bodyContainer","styleContainer","userOptions","renderer","HtmlRenderer","window","document","WordDocument","doc","render","parseFonts","FontTablePart","family","altName","fontKey","refId","footerElement","FooterPart","headerElement","HeaderPart","htmlDocument","renderHeaders","renderFooters","domStyleMap","removeAllElements","appendComment","appendChild","renderDefaultStyle","stylesPart","processDomStyles","domStyles","styleMap","processStyles","renderStyles","numberingPart","renderNumbering","domNumberings","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","wrapper","renderWrapper","appentElements","fontsPart","f","loadFont","fontData","cssTest","createStyleElement","processClassName","keyBy","baseStyle","mergeDeep","domStylesMap","baseValues","styleValues","copyStyleProperties","cssName","escapeClassName","processElement","processTable","attrs","getOwnPropertyNames","key","hasOwnProperty","createElement","tagName","renderContainer","renderElements","createSection","paddingLeft","renderLength","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","splitBySection","sectProps","sectionElement","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","r","bind","breakRun","splitRun","newParagraph","slice","runChildren","newRun","currentSectProps","l","renderColor","listStyleType","styleText","rootCounters","numberingClass","num","toLowerCase","styleToString","loadNumberingImage","numFormatToCssValue","counter","numberingCounter","levelTextToContent","join","stylesMap","subStyles","linkedStyle","concat","subStyle","renderParagraphProperties","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderBreak","renderText","renderSymbol","renderTab","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderHeader","renderFooter","renderChildren","into","elems","$$docxElement","renderClass","renderStyleValues","appendClass","styleClassName","renderLineSpacing","renderTextAligment","valuesMap","renderRunProperties","renderShading","renderBorder","renderRunFonts","renderUnderline","renderRunVerticalAlignment","href","display","textIndent","loadDocumentImage","createTextNode","fontFamily","font","innerHTML","char","tabSpan","setTimeout","findParent","sort","updateTabStop","renderTableColumns","colElem","colSpan","ouput","lvl","selectors","cssText","numformat","substring","container","styleElement","comment","createComment","pixelToPoint","closest","tbb","getBoundingClientRect","pbb","tab","find","t","borderBottom","parseNumberingPart","NumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","numberingLevel","parseNumberingBulletPicture","referenceId","numberings","abstractNumberings","bulletPictures","item","Node","ELEMENT_NODE","attributes","xmlString","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","elementAttr","attrLocalName","undefined","floatAttr","convertPercentage","convertLength","globalXmlParser","schemaSymbol","Symbol","deserializeSchema","schema","prop","convert","getPrototypeXmlSchema","proto","prototype","elemName","schemaObj","$attr","ops","getPrototypeOf","$$xmlElement","child","obj","constructor","create","pPrElem","rPrElem","WmlStyle","link","autoRedefine","hidden","semiHidden","locked","uiPriority","parseStylesPart","parseDocumentDefaults","StylesPart","theme","parseTheme","ThemePart","parseColorScheme","colors","srgbClr","sysClr","parseFontScheme","majorFont","parseFontInfo","minorFont","latinTypeface","eaTypeface","csTypeface","DmlTheme","themeElements","colorScheme","fontScheme","classList","isObject","Array","isArray","si","lastIndexOf","base","prefix","URL","toString","array","by","reduce","sources","source","shift","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","parts","partsMap","blob","_parser","tasks","rel","loadRelationshipPart","part","FontTable","Numbering","Styles","Theme","Footer","Header","corePropsPart","extendedPropsPart","folder","resolvePath","loadResource","createObjectURL","Blob","deobfuscate","getPathById","outputType","guidKey","trimmed","numbers","extendStatics","setPrototypeOf","__proto__","call","__extends","TypeError","String","__","__assign","arguments","apply","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","__generator","y","_","label","sent","trys","verb","iterator","op","pop","__createBinding","o","m","k","k2","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","j","jl","__spreadArray","to","from","pack","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","state","kind","has","__classPrivateFieldSet","set","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","toStringTag"],"sourceRoot":""}