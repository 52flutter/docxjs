{"version":3,"file":"docx-preview.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/breaks.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/document.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/drawing.ts","webpack://docx/./src/document/fields.ts","webpack://docx/./src/document/hyperlink.ts","webpack://docx/./src/document/indentation.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/document/table-cell.ts","webpack://docx/./src/document/table-row.ts","webpack://docx/./src/document/table.ts","webpack://docx/./src/document/text.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/footer/footer-part.ts","webpack://docx/./src/footer/footer.ts","webpack://docx/./src/footnotes/footnote.ts","webpack://docx/./src/footnotes/footnotes-part.ts","webpack://docx/./src/header/header-part.ts","webpack://docx/./src/header/header.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/parser/xml-serialize.ts","webpack://docx/./src/styles/document-defaults.ts","webpack://docx/./src/styles/style.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/word-document.ts","webpack://docx/./node_modules/tslib/tslib.es6.js","webpack://docx/external umd \"JSZip\"","webpack://docx/webpack/bootstrap","webpack://docx/webpack/runtime/define property getters","webpack://docx/webpack/runtime/hasOwnProperty shorthand","webpack://docx/webpack/runtime/make namespace object","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"JSZip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"JSZip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"JSZip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__6290__) {\nreturn ","import * as JSZip from \"jszip\";\r\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\r\nimport { splitPath } from \"../utils\";\r\nimport { parseRelationships, Relationship } from \"./relationship\";\r\n\r\nexport interface OpenXmlPackageOptions {\r\n    trimXmlDeclaration: boolean,\r\n    keepOrigin: boolean,\r\n}\r\n\r\nexport class OpenXmlPackage {\r\n    xmlParser: XmlParser = new XmlParser();\r\n\r\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\r\n    }\r\n\r\n    get(path: string): any {\r\n        return this._zip.files[normalizePath(path)];\r\n    }\r\n\r\n    update(path: string, content: any) {\r\n        this._zip.file(path, content);\r\n    }\r\n\r\n    static load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\r\n        return JSZip.loadAsync(input).then(zip => new OpenXmlPackage(zip, options));\r\n    }\r\n\r\n    save(type: any = \"blob\"): Promise<any>  {\r\n        return this._zip.generateAsync({ type });\r\n    }\r\n\r\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\r\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\r\n    }\r\n\r\n    loadRelationships(path: string = null): Promise<Relationship[]> {\r\n        let relsPath = `_rels/.rels`;\r\n\r\n        if (path != null) {\r\n            const [f, fn] = splitPath(path);\r\n            relsPath = `${f}_rels/${fn}.rels`;\r\n        }\r\n\r\n        return this.load(relsPath)\r\n            .then(txt => txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null);\r\n    }\r\n\r\n    /** @internal */\r\n    parseXmlDocument(txt: string): Document {\r\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\r\n    }\r\n}\r\n\r\nfunction normalizePath(path: string) {\r\n    return path.startsWith('/') ? path.substr(1) : path;\r\n}","import { serializeXmlString } from \"../parser/xml-parser\";\r\nimport { OpenXmlPackage } from \"./open-xml-package\";\r\nimport { Relationship } from \"./relationship\";\r\n\r\nexport class Part {\r\n    protected _xmlDocument: Document;\r\n\r\n    rels: Relationship[];\r\n\r\n    constructor(protected _package: OpenXmlPackage, public path: string) {\r\n    }\r\n\r\n    load(): Promise<any> {\r\n        return Promise.all([\r\n            this._package.loadRelationships(this.path).then(rels => {\r\n                this.rels = rels;\r\n            }),\r\n            this._package.load(this.path).then(text => {\r\n                const xmlDoc = this._package.parseXmlDocument(text); \r\n\r\n                if (this._package.options.keepOrigin) {\r\n                    this._xmlDocument = xmlDoc;\r\n                }\r\n\r\n                this.parseXml(xmlDoc.firstElementChild);\r\n            })\r\n        ]);\r\n    }\r\n\r\n    save() {\r\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\r\n    }\r\n\r\n    protected parseXml(root: Element) {\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface Relationship {\r\n    id: string,\r\n    type: RelationshipTypes | string,\r\n    target: string\r\n    targetMode: \"\" | string \r\n}\r\n\r\nexport enum RelationshipTypes {\r\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\r\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\r\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\r\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\r\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\r\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\r\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\r\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\r\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\r\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\r\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\r\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\r\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\"\r\n}\r\n\r\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\r\n    return xml.elements(root).map(e => <Relationship>{\r\n        id: xml.attr(e, \"Id\"),\r\n        type: xml.attr(e, \"Type\"),\r\n        target: xml.attr(e, \"Target\"),\r\n        targetMode: xml.attr(e, \"TargetMode\")\r\n    });\r\n}","import { DocxContainer, DocxElement, IDomNumbering, NumberingPicBullet } from './document/dom';\r\nimport * as utils from './utils';\r\nimport { WmlBody, WmlDocument } from './document/document';\r\nimport { WmlParagraph, parseParagraphProperties, parseParagraphProperty } from './document/paragraph';\r\nimport globalXmlParser, { elements } from './parser/xml-parser';\r\nimport { parseRunProperties, WmlRun } from './document/run';\r\nimport { IDomStyle, IDomSubStyle } from './document/style';\r\nimport { WmlHyperlink } from './document/hyperlink';\r\nimport { WmlTableCell } from './document/table-cell';\r\nimport { WmlTable } from './document/table';\r\nimport { WmlDrawing, DmlPicture } from './document/drawing';\r\nimport { WmlTableRow } from './document/table-row';\r\nimport { deserializeElement } from './parser/xml-serialize';\r\nimport { WmlFooter } from './footer/footer';\r\nimport { WmlHeader } from './header/header';\r\nimport { WmlFootnote } from './footnotes/footnote';\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport interface DocumentParserOptions {\r\n    ignoreWidth: boolean;\r\n    debug: boolean;\r\n    keepOrigin: boolean;\r\n}\r\n\r\nexport class DocumentParser {\r\n    options: DocumentParserOptions;\r\n\r\n    constructor(options?: Partial<DocumentParserOptions>) {\r\n        this.options = {\r\n            ignoreWidth: false,\r\n            debug: false,\r\n            keepOrigin: false,\r\n            ...options   \r\n        };\r\n    }\r\n\r\n    private deserialize<T>(elem: Element, output: T): T {\r\n        return deserializeElement(elem, output, { keepOrigin: this.options.keepOrigin });\r\n    }\r\n\r\n    parseDocumentFile(xmlDoc: Element): WmlDocument {\r\n        var xbody = globalXmlParser.element(xmlDoc, \"body\");\r\n\r\n        const result = new WmlDocument();\r\n        result.body = this.deserialize(xbody, new WmlBody());\r\n        this.parseBodyElements(xbody, result.body);\r\n        return result;\r\n    }\r\n\r\n    parseFooter(xmlDoc: Element): WmlFooter {\r\n        return this.parseBodyElements(xmlDoc, new WmlFooter());\r\n    }\r\n\r\n    parseHeader(xmlDoc: Element): WmlHeader {\r\n        return this.parseBodyElements(xmlDoc, new WmlHeader());\r\n    }\r\n\r\n    parseFootnotes(xmlDoc: Element): WmlFootnote[] {\r\n        var result = [];\r\n\r\n        for (let el of globalXmlParser.elements(xmlDoc, \"footnote\")) {\r\n            const footnote = this.deserialize(el, new WmlFootnote());\r\n            this.parseBodyElements(el, footnote);\r\n            result.push(footnote);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    parseBodyElements<T extends DocxContainer>(elem: Element, output: T): T {\r\n        for(let e of globalXmlParser.elements(elem)) {\r\n            switch (e.localName) {\r\n                case \"p\":\r\n                    output.children.push(this.parseParagraph(e));\r\n                    break;\r\n\r\n                case \"tbl\":\r\n                    output.children.push(this.parseTable(e));\r\n                    break;\r\n            }   \r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    parseStylesFile(xstyles: Element): IDomStyle[] {\r\n        var result = [];\r\n\r\n        xml.foreach(xstyles, n => {\r\n            switch (n.localName) {\r\n                case \"style\":\r\n                    result.push(this.parseStyle(n));\r\n                    break;\r\n\r\n                case \"docDefaults\":\r\n                    result.push(this.parseDefaultStyles(n));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseDefaultStyles(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: null,\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: []\r\n        };\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"rPrDefault\":\r\n                    var rPr = globalXmlParser.element(c, \"rPr\");\r\n\r\n                    if (rPr)\r\n                        result.styles.push({\r\n                            target: \"span\",\r\n                            values: this.parseDefaultProperties(rPr, {})\r\n                        });\r\n                    break;\r\n\r\n                case \"pPrDefault\":\r\n                    var pPr = globalXmlParser.element(c, \"pPr\");\r\n\r\n                    if (pPr) {\r\n                        result.styles.push({\r\n                            target: \"p\",\r\n                            values: this.parseDefaultProperties(pPr, {})\r\n                        });\r\n                        result.paragraphProps = parseParagraphProperties(pPr, globalXmlParser);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseStyle(node: Element): IDomStyle {\r\n        var result = <IDomStyle>{\r\n            id: xml.stringAttr(node, \"styleId\"),\r\n            isDefault: xml.boolAttr(node, \"default\"),\r\n            name: null,\r\n            target: null,\r\n            basedOn: null,\r\n            styles: [],\r\n            linked: null\r\n        };\r\n\r\n        switch (xml.stringAttr(node, \"type\")) {\r\n            case \"paragraph\": result.target = \"p\"; break;\r\n            case \"table\": result.target = \"table\"; break;\r\n            case \"character\": result.target = \"span\"; break;\r\n        }\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"basedOn\":\r\n                    result.basedOn = xml.className(n, \"val\");\r\n                    break;\r\n\r\n                case \"name\":\r\n                    result.name = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"link\":\r\n                    result.linked = xml.className(n, \"val\");\r\n                    break;\r\n                \r\n                case \"next\":\r\n                    result.next = xml.className(n, \"val\");\r\n                    break;\r\n    \r\n                case \"aliases\":\r\n                    result.aliases = xml.stringAttr(n, \"val\").split(\",\");\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    result.styles.push({\r\n                        target: \"p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.paragraphProps = parseParagraphProperties(n, globalXmlParser);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.styles.push({\r\n                        target: \"span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    result.runProps = parseRunProperties(n, globalXmlParser);\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.styles.push({\r\n                        target: \"td\", //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblStylePr\":\r\n                    for (let s of this.parseTableStyle(n))\r\n                        result.styles.push(s);\r\n                    break;\r\n\r\n                case \"rsid\":\r\n                case \"qFormat\":\r\n                case \"hidden\":\r\n                case \"semiHidden\":\r\n                case \"unhideWhenUsed\":\r\n                case \"autoRedefine\":\r\n                case \"uiPriority\":\r\n                    //TODO: ignore\r\n                    break;\r\n\r\n                default:\r\n                    this.options.debug && console.warn(`DOCX: Unknown style element: ${n.localName}`);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableStyle(node: Element): IDomSubStyle[] {\r\n        var result = [];\r\n\r\n        var type = xml.stringAttr(node, \"type\");\r\n        var selector = \"\";\r\n\r\n        switch (type) {\r\n            case \"firstRow\": selector = \"tr.first-row td\"; break;\r\n            case \"lastRow\": selector = \"tr.last-row td\"; break;\r\n            case \"firstCol\": selector = \"td.first-col\"; break;\r\n            case \"lastCol\": selector = \"td.last-col\"; break;\r\n            case \"band1Vert\": selector = \"td.odd-col\"; break;\r\n            case \"band2Vert\": selector = \"td.even-col\"; break;\r\n            case \"band1Horz\": selector = \"tr.odd-row\"; break;\r\n            case \"band2Horz\": selector = \"tr.even-row\"; break;\r\n            default: return [];\r\n        }\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    result.push({\r\n                        target: selector + \" p\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    result.push({\r\n                        target: selector + \" span\",\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                case \"tcPr\":\r\n                    result.push({\r\n                        target: selector, //TODO: maybe move to processor\r\n                        values: this.parseDefaultProperties(n, {})\r\n                    });\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingFile(xnums: Element): IDomNumbering[] {\r\n        var result = [];\r\n        var mapping = {};\r\n        var bullets = [];\r\n\r\n        xml.foreach(xnums, n => {\r\n            switch (n.localName) {\r\n                case \"abstractNum\":\r\n                    this.parseAbstractNumbering(n, bullets)\r\n                        .forEach(x => result.push(x));\r\n                    break;\r\n\r\n                case \"numPicBullet\":\r\n                    bullets.push(this.parseNumberingPicBullet(n));\r\n                    break;\r\n\r\n                case \"num\":\r\n                    var numId = xml.stringAttr(n, \"numId\");\r\n                    var abstractNumId = xml.elementStringAttr(n, \"abstractNumId\", \"val\");\r\n                    mapping[abstractNumId] = numId;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        result.forEach(x => x.id = mapping[x.id]);\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingPicBullet(elem: Element): NumberingPicBullet {\r\n        var pict = globalXmlParser.element(elem, \"pict\");\r\n        var shape = pict && globalXmlParser.element(pict, \"shape\");\r\n        var imagedata = shape && globalXmlParser.element(shape, \"imagedata\");\r\n\r\n        return imagedata ? {\r\n            id: xml.intAttr(elem, \"numPicBulletId\"),\r\n            src: xml.stringAttr(imagedata, \"id\"),\r\n            style: xml.stringAttr(shape, \"style\")\r\n        } : null;\r\n    }\r\n\r\n    parseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\r\n        var result = [];\r\n        var id = xml.stringAttr(node, \"abstractNumId\");\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"lvl\":\r\n                    result.push(this.parseNumberingLevel(id, n, bullets));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseNumberingLevel(id: string, node: Element, bullets: any[]): IDomNumbering {\r\n        var result: IDomNumbering = {\r\n            id: id,\r\n            level: xml.intAttr(node, \"ilvl\"),\r\n            pStyle: {},\r\n            rStyle: {},\r\n            suff: \"tab\"\r\n        };\r\n\r\n        xml.foreach(node, n => {\r\n            switch (n.localName) {\r\n                case \"pPr\":\r\n                    this.parseDefaultProperties(n, result.pStyle);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    this.parseDefaultProperties(n, result.rStyle);\r\n                    break;\r\n\r\n                case \"lvlPicBulletId\":\r\n                    var id = xml.intAttr(n, \"val\");\r\n                    result.bullet = bullets.filter(x => x.id == id)[0];\r\n                    break;\r\n\r\n                case \"lvlText\":\r\n                    result.levelText = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"numFmt\":\r\n                    result.format = xml.stringAttr(n, \"val\");\r\n                    break;\r\n\r\n                case \"suff\":\r\n                    result.suff = xml.stringAttr(n, \"val\");\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    parseParagraph(node: Element): WmlParagraph {\r\n        const result = this.deserialize(node, new WmlParagraph());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n\r\n                case \"hyperlink\":\r\n                    result.children.push(this.parseHyperlink(c, result));\r\n                    break;\r\n\r\n                case \"pPr\":\r\n                    this.parseParagraphProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\r\n        this.parseDefaultProperties(elem, paragraph.cssStyle = {}, null, c => {\r\n            if(parseParagraphProperty(c, paragraph.props, globalXmlParser))\r\n                return true;\r\n\r\n            switch (c.localName) {\r\n                case \"pStyle\":\r\n                    utils.addElementClass(paragraph, xml.className(c, \"val\"));\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    utils.addElementClass(paragraph, values.classNameOfCnfStyle(c));\r\n                    break;\r\n\r\n                case \"framePr\":\r\n                    this.parseFrame(c, paragraph);\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseFrame(node: Element, paragraph: WmlParagraph) {\r\n        var dropCap = xml.stringAttr(node, \"dropCap\");\r\n\r\n        if (dropCap == \"drop\")\r\n            paragraph.cssStyle[\"float\"] = \"left\";\r\n    }\r\n\r\n    parseHyperlink(node: Element, parent?: DocxElement): WmlHyperlink {\r\n        var result = this.deserialize(node, new WmlHyperlink(parent));\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"r\":\r\n                    result.children.push(this.parseRun(c, result));\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRun(node: Element, parent?: DocxElement): WmlRun {\r\n        var result = this.deserialize(node, new WmlRun(parent));\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"drawing\":\r\n                    let d = this.parseDrawing(c);\r\n\r\n                    if (d)\r\n                        result.children = [d];\r\n                    break;\r\n\r\n                case \"rPr\":\r\n                    this.parseRunProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseRunProperties(elem: Element, run: WmlRun) {\r\n\r\n        Object.assign(run.props, parseRunProperties(elem, globalXmlParser));\r\n\r\n        this.parseDefaultProperties(elem, run.cssStyle = {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"rStyle\":\r\n                    run.className = xml.className(c, \"val\");\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDrawing(node: Element): DocxElement {\r\n        for (var n of globalXmlParser.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"inline\":\r\n                case \"anchor\":\r\n                    return this.parseDrawingWrapper(n);\r\n            }\r\n        }\r\n    }\r\n\r\n    parseDrawingWrapper(node: Element): DocxElement {\r\n        var result = new WmlDrawing();\r\n        var isAnchor = node.localName == \"anchor\";\r\n\r\n        //TODO\r\n        // result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\r\n        // result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\r\n        // result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\r\n        // result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\r\n\r\n        let wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null; \r\n        let simplePos = xml.boolAttr(node, \"simplePos\");\r\n\r\n        let posX = { relative: \"page\", align: \"left\", offset: \"0\" };\r\n        let posY = { relative: \"page\", align: \"top\", offset: \"0\" };\r\n\r\n        for (var n of globalXmlParser.elements(node)) {\r\n            switch (n.localName) {\r\n                case \"simplePos\":\r\n                    if (simplePos) {\r\n                        posX.offset = xml.sizeAttr(n, \"x\", SizeType.Emu);\r\n                        posY.offset = xml.sizeAttr(n, \"y\", SizeType.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"extent\":\r\n                    result.cssStyle[\"width\"] = xml.sizeAttr(n, \"cx\", SizeType.Emu);\r\n                    result.cssStyle[\"height\"] = xml.sizeAttr(n, \"cy\", SizeType.Emu);\r\n                    break;\r\n\r\n                case \"positionH\":\r\n                case \"positionV\":\r\n                    if (!simplePos) {\r\n                        let pos = n.localName == \"positionH\" ? posX : posY;\r\n                        var alignNode = globalXmlParser.element(n, \"align\");\r\n                        var offsetNode = globalXmlParser.element(n, \"posOffset\");\r\n\r\n                        if (alignNode)\r\n                            pos.align = alignNode.textContent;\r\n\r\n                        if (offsetNode)\r\n                            pos.offset = xml.sizeValue(offsetNode, SizeType.Emu);\r\n                    }\r\n                    break;\r\n\r\n                case \"wrapTopAndBottom\":\r\n                    wrapType = \"wrapTopAndBottom\";\r\n                    break;\r\n                \r\n                case \"wrapNone\":\r\n                    wrapType = \"wrapNone\";\r\n                    break;\r\n\r\n                case \"graphic\":\r\n                    var g = this.parseGraphic(n);\r\n\r\n                    if (g)\r\n                        result.children.push(g);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (wrapType == \"wrapTopAndBottom\") {\r\n            result.cssStyle['display'] = 'block';\r\n\r\n            if (posX.align) {\r\n                result.cssStyle['text-align'] = posX.align;\r\n                result.cssStyle['width'] = \"100%\";\r\n            }\r\n        }\r\n        else if(wrapType == \"wrapNone\") {\r\n            result.cssStyle['display'] = 'block';\r\n            result.cssStyle['position'] = 'relative';\r\n            result.cssStyle[\"width\"] = \"0px\";\r\n            result.cssStyle[\"height\"] = \"0px\";\r\n\r\n            if(posX.offset)\r\n                result.cssStyle[\"left\"] = posX.offset;\r\n            if(posY.offset)\r\n                result.cssStyle[\"top\"] = posY.offset;\r\n        }\r\n        else if (isAnchor && (posX.align == 'left' || posX.align == 'right')) {\r\n            result.cssStyle[\"float\"] = posX.align;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseGraphic(elem: Element): DocxElement {\r\n        var graphicData = globalXmlParser.element(elem, \"graphicData\");\r\n\r\n        for (let n of globalXmlParser.elements(graphicData)) {\r\n            switch (n.localName) {\r\n                case \"pic\":\r\n                    return this.parsePicture(n);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parsePicture(elem: Element): DmlPicture {\r\n        var result = new DmlPicture();\r\n        var blipFill = globalXmlParser.element(elem, \"blipFill\");\r\n        var blip = globalXmlParser.element(blipFill, \"blip\");\r\n\r\n        result.resourceId = xml.stringAttr(blip, \"embed\");\r\n\r\n        var spPr = globalXmlParser.element(elem, \"spPr\");\r\n        var xfrm = globalXmlParser.element(spPr, \"xfrm\");\r\n\r\n        result.cssStyle[\"position\"] = \"relative\";\r\n\r\n        for (var n of globalXmlParser.elements(xfrm)) {\r\n            switch (n.localName) {\r\n                case \"ext\":\r\n                    result.cssStyle[\"width\"] = xml.sizeAttr(n, \"cx\", SizeType.Emu);\r\n                    result.cssStyle[\"height\"] = xml.sizeAttr(n, \"cy\", SizeType.Emu);\r\n                    break;\r\n\r\n                case \"off\":\r\n                    result.cssStyle[\"left\"] = xml.sizeAttr(n, \"x\", SizeType.Emu);\r\n                    result.cssStyle[\"top\"] = xml.sizeAttr(n, \"y\", SizeType.Emu);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTable(node: Element): WmlTable {\r\n        var result = this.deserialize(node, new WmlTable());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tr\":\r\n                    result.children.push(this.parseTableRow(c));\r\n                    break;\r\n\r\n                case \"tblPr\":\r\n                    this.parseTableProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableProperties(elem: Element, table: WmlTable) {\r\n        table.cssStyle = {};\r\n        table.cellStyle = {};\r\n\r\n        this.parseDefaultProperties(elem, table.cssStyle, table.cellStyle, c => {\r\n            switch (c.localName) {\r\n                case \"tblStyle\":\r\n                    table.className = xml.className(c, \"val\");\r\n                    break;\r\n\r\n                case \"tblLook\":\r\n                    utils.addElementClass(table, values.classNameOftblLook(c));\r\n                    break;\r\n\r\n                case \"tblpPr\":\r\n                    this.parseTablePosition(c, table);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        switch (table.cssStyle[\"text-align\"]) {\r\n            case \"center\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                table.cssStyle[\"margin-right\"] = \"auto\";\r\n                break;\r\n\r\n            case \"right\":\r\n                delete table.cssStyle[\"text-align\"];\r\n                table.cssStyle[\"margin-left\"] = \"auto\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    parseTablePosition(node: Element, table: WmlTable) {\r\n        var topFromText = xml.sizeAttr(node, \"topFromText\");\r\n        var bottomFromText = xml.sizeAttr(node, \"bottomFromText\");\r\n        var rightFromText = xml.sizeAttr(node, \"rightFromText\");\r\n        var leftFromText = xml.sizeAttr(node, \"leftFromText\");\r\n\r\n        table.cssStyle[\"float\"] = 'left';\r\n        table.cssStyle[\"margin-bottom\"] = values.addSize(table.cssStyle[\"margin-bottom\"], bottomFromText);\r\n        table.cssStyle[\"margin-left\"] = values.addSize(table.cssStyle[\"margin-left\"], leftFromText);\r\n        table.cssStyle[\"margin-right\"] = values.addSize(table.cssStyle[\"margin-right\"], rightFromText);\r\n        table.cssStyle[\"margin-top\"] = values.addSize(table.cssStyle[\"margin-top\"], topFromText);\r\n    }\r\n\r\n    parseTableRow(node: Element): WmlTableRow {\r\n        var result = this.deserialize(node, new WmlTableRow());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tc\":\r\n                    result.children.push(this.parseTableCell(c));\r\n                    break;\r\n\r\n                case \"trPr\":\r\n                    this.parseTableRowProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableRowProperties(elem: Element, row: WmlTableRow) {\r\n        row.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"cnfStyle\":\r\n                    row.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseTableCell(node: Element): WmlTableCell {\r\n        var result = this.deserialize(node, new WmlTableCell());\r\n\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"tbl\":\r\n                    result.children.push(this.parseTable(c));\r\n                    break;\r\n\r\n                case \"p\":\r\n                    result.children.push(this.parseParagraph(c));\r\n                    break;\r\n\r\n                case \"tcPr\":\r\n                    this.parseTableCellProperties(c, result);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    parseTableCellProperties(elem: Element, cell: WmlTableCell) {\r\n        cell.cssStyle = this.parseDefaultProperties(elem, {}, null, c => {\r\n            switch (c.localName) {\r\n                case \"gridSpan\":\r\n                    cell.span = xml.intAttr(c, \"val\", null);\r\n                    break;\r\n\r\n                case \"vMerge\": //TODO\r\n                    cell.verticalMerge = xml.sizeAttr(c, \"val\");\r\n                    break;\r\n\r\n                case \"cnfStyle\":\r\n                    cell.className = values.classNameOfCnfStyle(c);\r\n                    break;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    parseDefaultProperties(elem: Element, style: Record<string, string> = null, childStyle: Record<string, string> = null, handler: (prop: Element) => boolean = null): Record<string, string> {\r\n        style = style || {};\r\n\r\n\r\n        xml.foreach(elem, c => {\r\n            switch (c.localName) {\r\n                case \"jc\":\r\n                    style[\"text-align\"] = values.valueOfJc(c);\r\n                    break;\r\n\r\n                case \"color\":\r\n                    style[\"color\"] = xml.colorAttr(c, \"val\", null, autos.color);\r\n                    break;\r\n\r\n                case \"sz\":\r\n                    style[\"font-size\"] = style[\"min-height\"] = xml.sizeAttr(c, \"val\", SizeType.FontSize);\r\n                    break;\r\n\r\n                case \"shd\":\r\n                    style[\"background-color\"] = xml.colorAttr(c, \"fill\", null, autos.shd);\r\n                    break;\r\n\r\n                case \"highlight\":\r\n                    style[\"background-color\"] = xml.colorAttr(c, \"val\", null, autos.highlight);\r\n                    break;\r\n\r\n                case \"tcW\":\r\n                    if (this.options.ignoreWidth)\r\n                        break;\r\n\r\n                case \"tblW\":\r\n                    style[\"width\"] = values.valueOfSize(c, \"w\");\r\n                    break;\r\n\r\n                case \"trHeight\":\r\n                    this.parseTrHeight(c, style);\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    style[\"text-decoration\"] = values.valueOfStrike(c);\r\n                    break;\r\n\r\n                case \"b\":\r\n                    style[\"font-weight\"] = values.valueOfBold(c);\r\n                    break;\r\n\r\n                case \"i\":\r\n                    style[\"font-style\"] = \"italic\";\r\n                    break;\r\n\r\n                case \"u\":\r\n                    this.parseUnderline(c, style);\r\n                    break;\r\n\r\n                case \"ind\":\r\n                case \"tblInd\":\r\n                    this.parseIndentation(c, style);\r\n                    break;\r\n\r\n                case \"rFonts\":\r\n                    this.parseFont(c, style);\r\n                    break;\r\n\r\n                case \"tblBorders\":\r\n                    this.parseBorderProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblCellSpacing\":\r\n                    style[\"border-spacing\"] = values.valueOfMargin(c);\r\n                    style[\"border-collapse\"] = \"separate\";\r\n                    break;\r\n\r\n                case \"pBdr\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n                \r\n                case \"bdr\":\r\n                    style[\"border\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"tcBorders\":\r\n                    this.parseBorderProperties(c, style);\r\n                    break;\r\n\r\n                case \"noWrap\":\r\n                    //TODO\r\n                    //style[\"white-space\"] = \"nowrap\";\r\n                    break;\r\n\r\n                case \"tblCellMar\":\r\n                case \"tcMar\":\r\n                    this.parseMarginProperties(c, childStyle || style);\r\n                    break;\r\n\r\n                case \"tblLayout\":\r\n                    style[\"table-layout\"] = values.valueOfTblLayout(c);\r\n                    break;\r\n\r\n                case \"vAlign\":\r\n                    style[\"vertical-align\"] = values.valueOfTextAlignment(c);\r\n                    break;\r\n\r\n                case \"spacing\":\r\n                    if (elem.localName == \"pPr\")\r\n                        this.parseSpacing(c, style);\r\n                    break;\r\n\r\n                case \"lang\":\r\n                case \"noProof\": //ignore spellcheck\r\n                case \"webHidden\": // maybe web-hidden should be implemented\r\n                    //TODO ignore\r\n                    break;\r\n\r\n                default:\r\n                    if (handler != null && !handler(c))\r\n                        this.options.debug && console.warn(`DOCX: Unknown document element: ${c.localName}`);\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return style;\r\n    }\r\n\r\n    parseUnderline(node: Element, style: Record<string, string>) {\r\n        var val = xml.stringAttr(node, \"val\");\r\n\r\n        if (val == null || val == \"none\")\r\n            return;\r\n\r\n        switch (val) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n        }\r\n\r\n        var col = xml.colorAttr(node, \"color\");\r\n\r\n        if (col)\r\n            style[\"text-decoration-color\"] = col;\r\n    }\r\n\r\n    parseFont(node: Element, style: Record<string, string>) {\r\n        var ascii = xml.stringAttr(node, \"ascii\");\r\n\r\n        if (ascii)\r\n            style[\"font-family\"] = ascii;\r\n    }\r\n\r\n    parseIndentation(node: Element, style: Record<string, string>) {\r\n        var firstLine = xml.sizeAttr(node, \"firstLine\");\r\n        var hanging = xml.sizeAttr(node, \"hanging\");\r\n        var left = xml.sizeAttr(node, \"left\");\r\n        var start = xml.sizeAttr(node, \"start\");\r\n        var right = xml.sizeAttr(node, \"right\");\r\n        var end = xml.sizeAttr(node, \"end\");\r\n\r\n        if (firstLine) style[\"text-indent\"] = firstLine;\r\n        if (hanging) style[\"text-indent\"] = `-${hanging}`;\r\n        if (left || start) style[\"margin-left\"] = left || start;\r\n        if (right || end) style[\"margin-right\"] = right || end;\r\n    }\r\n\r\n    parseSpacing(node: Element, style: Record<string, string>) {\r\n        var before = xml.sizeAttr(node, \"before\");\r\n        var after = xml.sizeAttr(node, \"after\");\r\n        var line = xml.intAttr(node, \"line\", null);\r\n        var lineRule = xml.stringAttr(node, \"lineRule\");\r\n\r\n        if (before) style[\"margin-top\"] = before;\r\n        if (after) style[\"margin-bottom\"] = after;\r\n        \r\n        if (line !== null) {\r\n            switch(lineRule) {\r\n                case \"auto\": \r\n                    style[\"line-height\"] = `${(line / 240).toFixed(2)}`;\r\n                    break;\r\n\r\n                case \"atLeast\":\r\n                    style[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\r\n                    break;\r\n\r\n                default:\r\n                    style[\"line-height\"] = style[\"min-height\"] = `${line / 20}pt`\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    parseMarginProperties(node: Element, output: Record<string, string>) {\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"left\":\r\n                    output[\"padding-left\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"right\":\r\n                    output[\"padding-right\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"padding-top\"] = values.valueOfMargin(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"padding-bottom\"] = values.valueOfMargin(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    parseTrHeight(node: Element, output: Record<string, string>) {\r\n        switch (xml.stringAttr(node, \"hRule\")) {\r\n            case \"exact\":\r\n                output[\"height\"] = xml.sizeAttr(node, \"val\");\r\n                break;\r\n\r\n            case \"atLeast\":\r\n            default:\r\n                output[\"height\"] = xml.sizeAttr(node, \"val\");\r\n                // min-height doesn't work for tr\r\n                //output[\"min-height\"] = xml.sizeAttr(node, \"val\");  \r\n                break;\r\n        }\r\n    }\r\n\r\n    parseBorderProperties(node: Element, output: Record<string, string>) {\r\n        xml.foreach(node, c => {\r\n            switch (c.localName) {\r\n                case \"start\":\r\n                case \"left\":\r\n                    output[\"border-left\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"end\":\r\n                case \"right\":\r\n                    output[\"border-right\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"top\":\r\n                    output[\"border-top\"] = values.valueOfBorder(c);\r\n                    break;\r\n\r\n                case \"bottom\":\r\n                    output[\"border-bottom\"] = values.valueOfBorder(c);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nenum SizeType {\r\n    FontSize,\r\n    Dxa,\r\n    Emu,\r\n    Border,\r\n    Percent\r\n}\r\n\r\nclass xml {\r\n    static foreach(node: Element, cb: (n: Element) => void) {\r\n        for (var i = 0; i < node.childNodes.length; i++) {\r\n            let n = node.childNodes[i];\r\n\r\n            if (n.nodeType == 1)\r\n                cb(<Element>n);\r\n        }\r\n    }\r\n\r\n    static elementStringAttr(elem: Element, nodeName, attrName: string) {\r\n        var n = globalXmlParser.element(elem, nodeName)\r\n        return n ? xml.stringAttr(n, attrName) : null;\r\n    }\r\n\r\n    static stringAttr(node: Element, attrName: string) {\r\n        return globalXmlParser.attr(node, attrName);\r\n    }\r\n\r\n    static colorAttr(node: Element, attrName: string, defValue: string = null, autoColor: string = 'black') {\r\n        var v = xml.stringAttr(node, attrName);\r\n\r\n        switch (v) {\r\n            case \"yellow\":\r\n                return v;\r\n\r\n            case \"auto\":\r\n                return autoColor;\r\n        }\r\n\r\n        return v ? `#${v}` : defValue;\r\n    }\r\n\r\n    static boolAttr(node: Element, attrName: string, defValue: boolean = false) {\r\n        return globalXmlParser.boolAttr(node, attrName, defValue);\r\n    }\r\n\r\n    static intAttr(node: Element, attrName: string, defValue: number = 0) {\r\n        var val = xml.stringAttr(node, attrName);\r\n        return val ? parseInt(xml.stringAttr(node, attrName)) : defValue;\r\n    }\r\n\r\n    static sizeAttr(node: Element, attrName: string, type: SizeType = SizeType.Dxa) {\r\n        return xml.convertSize(xml.stringAttr(node, attrName), type);\r\n    }\r\n\r\n    static sizeValue(node: Element, type: SizeType = SizeType.Dxa) {\r\n        return xml.convertSize(node.textContent, type);\r\n    }\r\n\r\n    static convertSize(val: string, type: SizeType = SizeType.Dxa) {\r\n        if (val == null || /.+p[xt]$/.test(val))\r\n            return val;\r\n\r\n        var intVal = parseInt(val);\r\n\r\n        switch (type) {\r\n            case SizeType.Dxa: return (0.05 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Emu: return (intVal / 12700).toFixed(2) + \"pt\";\r\n            case SizeType.FontSize: return (0.5 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Border: return (0.125 * intVal).toFixed(2) + \"pt\";\r\n            case SizeType.Percent: return (0.02 * intVal).toFixed(2) + \"%\";\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static className(node: Element, attrName: string) {\r\n        var val = xml.stringAttr(node, attrName);\r\n\r\n        return val && val.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and');\r\n    }\r\n}\r\n\r\nclass values {\r\n    static valueOfBold(c: Element) {\r\n        return xml.boolAttr(c, \"val\", true) ? \"bold\" : \"normal\"\r\n    }\r\n\r\n    static valueOfSize(c: Element, attr: string) {\r\n        var type: SizeType = SizeType.Dxa;\r\n\r\n        switch (xml.stringAttr(c, \"type\")) {\r\n            case \"dxa\": break;\r\n            case \"pct\": type = SizeType.Percent; break;\r\n        }\r\n\r\n        return xml.sizeAttr(c, attr, type);\r\n    }\r\n\r\n    static valueOfStrike(c: Element) {\r\n        return xml.boolAttr(c, \"val\", true) ? \"line-through\" : \"none\"\r\n    }\r\n\r\n    static valueOfMargin(c: Element) {\r\n        return xml.sizeAttr(c, \"w\");\r\n    }\r\n\r\n    static valueOfBorder(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        if (type == \"nil\")\r\n            return \"none\";\r\n\r\n        var color = xml.colorAttr(c, \"color\");\r\n        var size = xml.sizeAttr(c, \"sz\", SizeType.Border);\r\n\r\n        return `${size} solid ${color == \"auto\" ? \"black\" : color}`;\r\n    }\r\n\r\n    static valueOfTblLayout(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n        return type == \"fixed\" ? \"fixed\" : \"auto\";\r\n    }\r\n\r\n    static classNameOfCnfStyle(c: Element) {\r\n        let className = \"\";\r\n        let val = xml.stringAttr(c, \"val\");\r\n        //FirstRow, LastRow, FirstColumn, LastColumn, Band1Vertical, Band2Vertical, Band1Horizontal, Band2Horizontal, NE Cell, NW Cell, SE Cell, SW Cell.\r\n\r\n        if (val[0] == \"1\") className += \" first-row\";\r\n        if (val[1] == \"1\") className += \" last-row\";\r\n        if (val[2] == \"1\") className += \" first-col\";\r\n        if (val[3] == \"1\") className += \" last-col\";\r\n        if (val[4] == \"1\") className += \" odd-col\";\r\n        if (val[5] == \"1\") className += \" even-col\";\r\n        if (val[6] == \"1\") className += \" odd-row\";\r\n        if (val[7] == \"1\") className += \" even-row\";\r\n        if (val[8] == \"1\") className += \" ne-cell\";\r\n        if (val[9] == \"1\") className += \" nw-cell\";\r\n        if (val[10] == \"1\") className += \" se-cell\";\r\n        if (val[11] == \"1\") className += \" sw-cell\";\r\n\r\n        return className.trim();\r\n    }\r\n\r\n    static valueOfJc(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"start\":\r\n            case \"left\": return \"left\";\r\n            case \"center\": return \"center\";\r\n            case \"end\":\r\n            case \"right\": return \"right\";\r\n            case \"both\": return \"justify\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static valueOfTextAlignment(c: Element) {\r\n        var type = xml.stringAttr(c, \"val\");\r\n\r\n        switch (type) {\r\n            case \"auto\":\r\n            case \"baseline\": return \"baseline\";\r\n            case \"top\": return \"top\";\r\n            case \"center\": return \"middle\";\r\n            case \"bottom\": return \"bottom\";\r\n        }\r\n\r\n        return type;\r\n    }\r\n\r\n    static addSize(a: string, b: string): string {\r\n        if (a == null) return b;\r\n        if (b == null) return a;\r\n\r\n        return `calc(${a} + ${b})`; //TODO\r\n    }\r\n\r\n    static classNameOftblLook(c: Element) {\r\n        let className = \"\";\r\n\r\n        if (xml.boolAttr(c, \"firstColumn\")) className += \" first-col\";\r\n        if (xml.boolAttr(c, \"firstRow\")) className += \" first-row\";\r\n        if (xml.boolAttr(c, \"lastColumn\")) className += \" lat-col\";\r\n        if (xml.boolAttr(c, \"lastRow\")) className += \" last-row\";\r\n        if (xml.boolAttr(c, \"noHBand\")) className += \" no-hband\";\r\n        if (xml.boolAttr(c, \"noVBand\")) className += \" no-vband\";\r\n\r\n        return className.trim();\r\n    }\r\n}","import { Part } from \"../common/part\";\r\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\r\n\r\nexport class CorePropsPart extends Part {\r\n    props: CorePropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseCoreProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface CorePropsDeclaration {\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    creator: string,\r\n    keywords: string,\r\n    language: string,\r\n    lastModifiedBy: string,\r\n    revision: number,\r\n}\r\n\r\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\r\n    const result = <CorePropsDeclaration>{};\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"title\": result.title = el.textContent; break;\r\n            case \"description\": result.description = el.textContent; break;\r\n            case \"subject\": result.subject = el.textContent; break;\r\n            case \"creator\": result.creator = el.textContent; break;\r\n            case \"keywords\": result.keywords = el.textContent; break;\r\n            case \"language\": result.language = el.textContent; break;\r\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\r\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { Part } from \"../common/part\";\r\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\r\n\r\nexport class ExtendedPropsPart extends Part {\r\n    props: ExtendedPropsDeclaration;\r\n\r\n    parseXml(root: Element) {\r\n        this.props = parseExtendedProps(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface ExtendedPropsDeclaration {\r\n    template: string,\r\n    totalTime: number,\r\n    pages: number,\r\n    words: number,\r\n    characters: number,\r\n    application: string,\r\n    lines: number,\r\n    paragraphs: number,\r\n    company: string,\r\n    appVersion: string\r\n}\r\n\r\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\r\n    const result = <ExtendedPropsDeclaration>{\r\n\r\n    };\r\n\r\n    for (let el of xmlParser.elements(root)) {\r\n        switch (el.localName) {\r\n            case \"Template\":\r\n                result.template = el.textContent;\r\n                break;\r\n            case \"Pages\":\r\n                result.pages = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Words\":\r\n                result.words = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Characters\":\r\n                result.characters = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Application\":\r\n                result.application = el.textContent;\r\n                break;\r\n            case \"Lines\":\r\n                result.lines = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Paragraphs\":\r\n                result.paragraphs = safeParseToInt(el.textContent);\r\n                break;\r\n            case \"Company\":\r\n                result.company = el.textContent;\r\n                break;\r\n            case \"AppVersion\":\r\n                result.appVersion = el.textContent;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction safeParseToInt(value: string): number {\r\n    if (typeof value === 'undefined')\r\n        return;\r\n    return parseInt(value);\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element(\"bookmarkStart\")\r\nexport class WmlBookmarkStart extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n    @fromAttribute(\"name\")\r\n    name: string;\r\n    @fromAttribute(\"colFirst\")\r\n    colFirst: number;\r\n    @fromAttribute(\"colLast\")\r\n    colLast: number;\r\n}\r\n\r\n@element(\"bookmarkEnd\")\r\nexport class WmlBookmarkEnd extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface Border {\r\n    color: string;\r\n    type: string;\r\n    size: Length;\r\n    frame: boolean;\r\n    shadow: boolean;\r\n    offset: Length;\r\n}\r\n\r\nexport interface Borders {\r\n    top: Border;\r\n    left: Border;\r\n    right: Border;\r\n    bottom: Border;\r\n}\r\n\r\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\r\n    return {\r\n        type: xml.attr(elem, \"val\"),\r\n        color: xml.attr(elem, \"color\"),\r\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\r\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\r\n        frame: xml.boolAttr(elem, 'frame'),\r\n        shadow: xml.boolAttr(elem, 'shadow')\r\n    };\r\n}\r\n\r\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\r\n    var result = <Borders>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"left\": result.left = parseBorder(e, xml); break;\r\n            case \"top\": result.top = parseBorder(e, xml); break;\r\n            case \"right\": result.right = parseBorder(e, xml); break;\r\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element('br')\r\nexport class WmlBreak extends DocxElement {\r\n    @fromAttribute(\"type\")\r\n    type: \"page\" | \"column\" | \"textWrapping\" = \"textWrapping\";\r\n    \r\n    @fromAttribute(\"clear\")\r\n    clear: \"all\" | \"left\" | \"right\" | \"none\";\r\n}\r\n\r\n@element('lastRenderedPageBreak')\r\nexport class WmlLastRenderedPageBreak extends DocxElement {\r\n}","import { attr } from \"../parser/xml-parser\";\r\n\r\nexport const ns = {\r\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\r\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\r\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\"\r\n}\r\n\r\nexport type LengthType = \"px\" | \"pt\" | \"%\";\r\n\r\nexport interface Length {\r\n    value: number;\r\n    type: LengthType\r\n}\r\n\r\nexport interface Font {\r\n    name: string;\r\n    family: string;\r\n}\r\n\r\nexport interface Underline {\r\n    color: string;\r\n    type: string;\r\n}\r\n\r\nexport type LengthUsageType = { mul: number, unit: LengthType };\r\n\r\nexport const LengthUsage: Record<string, LengthUsageType> = {\r\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\r\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\r\n    FontSize: { mul: 0.5, unit: \"pt\" },\r\n    Border: { mul: 0.125, unit: \"pt\" },\r\n    Point: { mul: 1, unit: \"pt\" },\r\n    Percent: { mul: 0.02, unit: \"%\" },\r\n    LineHeight: { mul: 1 / 240, unit: null }\r\n}\r\n\r\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n    if (!val) {\r\n        return null;\r\n    }\r\n\r\n    //\"simplified\" docx documents use pt's as units\r\n    if (val.endsWith('pt')) {\r\n        return { value: parseFloat(val), type: 'pt' };\r\n    }\r\n\r\n    if (val.endsWith('%')) {\r\n        return { value: parseFloat(val), type: '%' };\r\n    }\r\n\r\n    return { value: parseInt(val) * usage.mul, type: usage.unit };\r\n}\r\n\r\nexport function convertBoolean(v: string, defaultValue = false): boolean {\r\n    switch (v) {\r\n        case \"1\": return true;\r\n        case \"0\": return false;\r\n        default: return defaultValue;\r\n    }\r\n}\r\n\r\nexport function convertPercentage(val: string): number {\r\n    return val ? parseInt(val) / 100 : null;\r\n}\r\n\r\nexport function parseElementValue(elem: Element): string {\r\n    return attr(elem, \"val\");\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlDocument } from \"./document\";\r\n\r\nexport class DocumentPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    documentElement: WmlDocument\r\n\r\n    parseXml(root: Element) {\r\n        this.documentElement = this._documentParser.parseDocumentFile(root);\r\n    }\r\n}","import { element, fromElement } from \"../parser/xml-serialize\";\r\nimport { DocxContainer, DocxElement } from \"./dom\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\n\r\n@element(\"document\")\r\nexport class WmlDocument extends DocxElement {\r\n    body: WmlBody;\r\n}\r\n\r\n@element(\"body\")\r\nexport class WmlBody extends DocxContainer {\r\n    @fromElement(\"sectPr\", parseSectionProperties)\r\n    sectionProps: SectionProperties;\r\n}","export class DocxElement {\r\n    className: string = null;\r\n    cssStyle: Record<string, string> = {};\r\n\r\n    constructor(public parent?: DocxElement) {\r\n    }\r\n}\r\n\r\nexport class DocxContainer extends DocxElement {\r\n    children: DocxElement[] = [];\r\n}\r\n\r\nexport interface IDomNumbering {\r\n    id: string;\r\n    level: number;\r\n    pStyle: Record<string, string>;\r\n    rStyle: Record<string, string>;\r\n    levelText?: string;\r\n    suff: string;\r\n    format?: string;\r\n    bullet?: NumberingPicBullet;\r\n}\r\n\r\nexport interface NumberingPicBullet {\r\n    id: number;\r\n    src: string;\r\n    style?: string;\r\n}\r\n","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element('drawing')\r\nexport class WmlDrawing extends DocxContainer {\r\n\r\n}\r\n\r\nexport class DmlPicture extends DocxContainer {\r\n    resourceId: string;\r\n    stretch: any;\r\n    offset: any;\r\n    size: any;\r\n}\r\n\r\nexport function parseDmlPicture(elem: Element, output: DmlPicture, xml: XmlParser = globalXmlParser) {\r\n    const blipFill = xml.element(elem, \"blipFill\");\r\n    const blip = xml.element(blipFill, \"blip\");\r\n\r\n    output.resourceId = xml.attr(blip, \"embed\");\r\n}","import { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { convertBoolean, convertLength } from \"./common\";\r\nimport { DocxContainer, DocxElement } from \"./dom\";\r\n\r\n@element('fldChar')\r\nexport class WmlFieldChar extends DocxElement {\r\n    @fromAttribute('fldCharType')\r\n    type: 'begin' | 'end' | 'separate'; \r\n}\r\n\r\n@element('fldSimple')\r\nexport class WmlFieldSimple extends DocxContainer {\r\n    @fromAttribute(\"dirty\", convertBoolean)\r\n    dirty: boolean;\r\n\r\n    @fromAttribute(\"fldLock\", convertBoolean)\r\n    lock: boolean;\r\n\r\n    @fromAttribute(\"instr\")\r\n    instruction: string;\r\n}","import globalXmlParser from \"../parser/xml-parser\";\r\nimport { element, fromAttribute } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element('hyperlink')\r\nexport class WmlHyperlink extends DocxContainer {\r\n    @fromAttribute('anchor')\r\n    anchor?: string;\r\n\r\n    protected parse(elem: Element) {\r\n        this.anchor = globalXmlParser.attr(elem, \"anchor\");\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Indentation {\r\n    start: Length;\r\n    end: Length;\r\n    hanging: Length;\r\n    firstLine: Length;\r\n}\r\n\r\nexport function parseIndentation(elem: Element, xml: XmlParser): Indentation {\r\n    return {\r\n        start: xml.lengthAttr(elem, \"start\"),\r\n        end: xml.lengthAttr(elem, \"end\"),\r\n        hanging: xml.lengthAttr(elem, \"hanging\"),\r\n        firstLine: xml.lengthAttr(elem, \"firstLine\"),\r\n    } as Indentation;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length, LengthUsage } from \"./common\";\r\n\r\nexport interface LineSpacing {\r\n    after: Length;\r\n    before: Length;\r\n    line: Length;\r\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\r\n}\r\n\r\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\r\n    const lineRule = xml.attr(elem, \"lineRule\");\r\n\r\n    return {\r\n        before: xml.lengthAttr(elem, \"before\"),\r\n        after: xml.lengthAttr(elem, \"after\"),\r\n        line: xml.lengthAttr(elem, \"line\", lineRule === 'auto' ? LengthUsage.LineHeight : LengthUsage.Dxa),\r\n        lineRule\r\n    } as LineSpacing;\r\n}","import { DocxContainer } from \"./dom\";\r\nimport { Length, ns } from \"./common\";\r\nimport { Borders } from \"./border\";\r\nimport { parseSectionProperties, SectionProperties } from \"./section\";\r\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { parseRunProperties, RunProperties } from \"./run\";\r\nimport { children, element } from \"../parser/xml-serialize\";\r\nimport { WmlBookmarkEnd, WmlBookmarkStart } from \"./bookmarks\";\r\nimport { WmlFieldSimple } from \"./fields\";\r\nimport { Indentation, parseIndentation } from \"./indentation\";\r\n\r\n@element(\"p\")\r\n@children(WmlBookmarkStart, WmlBookmarkEnd, WmlFieldSimple)\r\nexport class WmlParagraph extends DocxContainer {\r\n    props: ParagraphProperties = {} as ParagraphProperties;\r\n}\r\n\r\nexport interface ParagraphProperties {\r\n    sectionProps: SectionProperties;\r\n    tabs: ParagraphTab[];\r\n    numbering: ParagraphNumbering;\r\n\r\n    border: Borders;\r\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\r\n    lineSpacing: LineSpacing;\r\n    indentation: Indentation;\r\n    keepLines: boolean;\r\n    keepNext: boolean;\r\n    pageBreakBefore: boolean;\r\n    outlineLevel: number;\r\n    styleId: string;\r\n\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface ParagraphTab {\r\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\r\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\r\n    position: Length;\r\n}\r\n\r\nexport interface ParagraphNumbering {\r\n    id: string;\r\n    level: number;\r\n}\r\n\r\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\r\n    let result = <ParagraphProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseParagraphProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\r\n    if (elem.namespaceURI != ns.wordml)\r\n        return false;\r\n\r\n    switch (elem.localName) {\r\n        case \"tabs\":\r\n            props.tabs = parseTabs(elem, xml);\r\n            break;\r\n\r\n        case \"sectPr\":\r\n            props.sectionProps = parseSectionProperties(elem, xml);\r\n            break;\r\n\r\n        case \"numPr\":\r\n            props.numbering = parseNumbering(elem, xml);\r\n            break;\r\n        \r\n        case \"spacing\":\r\n            props.lineSpacing = parseLineSpacing(elem, xml);\r\n            break;\r\n\r\n        case \"ind\":\r\n            props.indentation = parseIndentation(elem, xml);\r\n            return false;\r\n            break;\r\n\r\n        case \"textAlignment\":\r\n            props.textAlignment = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"keepNext\":\r\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"keepNext\":\r\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"pageBreakBefore\":\r\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n        \r\n        case \"outlineLvl\":\r\n            props.outlineLevel = xml.intAttr(elem, \"val\");\r\n            break;\r\n\r\n        case \"pStyle\":\r\n            props.styleId = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"rPr\":\r\n            props.runProps = parseRunProperties(elem, xml);\r\n            break;\r\n        \r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\r\n    return xml.elements(elem, \"tab\")\r\n        .map(e => <ParagraphTab>{\r\n            position: xml.lengthAttr(e, \"pos\"),\r\n            leader: xml.attr(e, \"leader\"),\r\n            style: xml.attr(e, \"val\")\r\n        });\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\r\n    var result = <ParagraphNumbering>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"numId\":\r\n                result.id = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"ilvl\":\r\n                result.level = xml.intAttr(e, \"val\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\nimport { children, element } from \"../parser/xml-serialize\";\r\nimport { Border, parseBorder } from \"./border\";\r\nimport { WmlBreak, WmlLastRenderedPageBreak } from \"./breaks\";\r\nimport { Length, LengthUsage, Underline } from \"./common\";\r\nimport { DocxContainer } from \"./dom\";\r\nimport { WmlDrawing } from \"./drawing\";\r\nimport { WmlFieldChar } from \"./fields\";\r\nimport { WmlInstructionText, WmlSymbol, WmlTab, WmlText, WmlFootnoteReference } from \"./text\";\r\n\r\n@element('r')\r\n@children(WmlText, WmlSymbol, WmlTab, WmlBreak, WmlFootnoteReference, WmlInstructionText, WmlFieldChar, WmlLastRenderedPageBreak, WmlDrawing)\r\nexport class WmlRun extends DocxContainer {\r\n    id?: string;\r\n    styleName: string;\r\n    props: RunProperties = <RunProperties>{};\r\n}\r\n\r\nexport interface RunProperties {\r\n    styleName: string;\r\n    fontSize: Length;\r\n    color: string;\r\n    bold: boolean;\r\n    italics: boolean;\r\n    caps: boolean;\r\n    smallCaps: boolean;\r\n    strike: boolean;\r\n    doubleStrike: boolean;\r\n    outline: boolean;\r\n    imprint: boolean;\r\n    underline: Underline;\r\n    border: Border;\r\n    fonts: RunFonts;\r\n    shading: Shading;\r\n    highlight: string;\r\n    spacing: Length;\r\n    stretch: number;\r\n    verticalAlignment: 'baseline' | 'superscript' | 'subscript' | string;\r\n}\r\n\r\nexport interface Shading {\r\n    foreground: string,\r\n    background: string,\r\n    type: string\r\n}\r\n\r\nexport interface RunFonts {\r\n    ascii: string;\r\n    hAscii: string;\r\n    cs: string;\r\n    eastAsia: string;\r\n}\r\n\r\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\r\n    let result = <RunProperties>{};\r\n\r\n    for(let el of xml.elements(elem)) {\r\n        parseRunProperty(el, result, xml);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\r\n    switch (elem.localName) {\r\n        case 'rStyle': \r\n            props.styleName = xml.attr(elem, 'val');\r\n            break;\r\n\r\n        case 'bdr': \r\n            props.border = parseBorder(elem, xml);\r\n            break;\r\n\r\n        case 'rFonts': \r\n            props.fonts = parseRunFonts(elem, xml);\r\n            break;\r\n\r\n        case 'shd': \r\n            props.shading = parseShading(elem, xml);\r\n            break;\r\n\r\n        case 'highlight': \r\n            props.highlight = xml.attr(elem, 'val');\r\n            break;\r\n        \r\n        case 'spacing':\r\n            props.spacing = xml.lengthAttr(elem, 'val');\r\n            break;\r\n\r\n        case 'w':\r\n            props.stretch = xml.percentageAttr(elem, 'val');\r\n            break;\r\n\r\n            case \"color\": \r\n            props.color = xml.attr(elem, \"val\");\r\n            break;\r\n\r\n        case \"sz\":\r\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\r\n            break;\r\n\r\n        case \"b\":\r\n            props.bold = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"strike\":\r\n            props.strike = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"dstrike\":\r\n            props.doubleStrike = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n    \r\n        case \"i\":\r\n            props.italics = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case \"u\":\r\n            props.underline = {\r\n                color: xml.attr(elem, \"color\"),\r\n                type: xml.attr(elem, 'val')\r\n            };\r\n            break;\r\n            \r\n        case 'caps':\r\n            props.caps = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'smallCaps':\r\n            props.smallCaps = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'imprint':\r\n            props.imprint = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'outline':\r\n            props.outline = xml.boolAttr(elem, \"val\", true);\r\n            break;\r\n\r\n        case 'vertAlign':\r\n            props.verticalAlignment = xml.attr(elem, 'val');\r\n            break;\r\n        \r\n        case 'emboss':\r\n        case 'shadow':\r\n        case 'vanish':\r\n        default:\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function parseRunFonts(elem: Element, xml: XmlParser): RunFonts {\r\n    return {\r\n        ascii: xml.attr(elem, 'ascii'),\r\n        hAscii: xml.attr(elem, 'hAscii'),\r\n        cs: xml.attr(elem, 'cs'),\r\n        eastAsia: xml.attr(elem, 'eastAsia'),\r\n    };\r\n}\r\n\r\nexport function parseShading(elem: Element, xml: XmlParser): Shading {\r\n    return {\r\n        type: xml.attr(elem, 'val'),\r\n        foreground: xml.attr(elem, 'color'),\r\n        background: xml.attr(elem, 'fill')\r\n    };\r\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\r\nimport { Length } from \"./common\";\r\n\r\nexport interface Column {\r\n    space: Length;\r\n    width: Length;\r\n}\r\n\r\nexport interface Columns {\r\n    space: Length;\r\n    numberOfColumns: number;\r\n    separator: boolean;\r\n    equalWidth: boolean;\r\n    columns: Column[];\r\n}\r\n\r\nexport interface PageSize {\r\n    width: Length, \r\n    height: Length, \r\n    orientation: \"landscape\" | string \r\n}\r\n\r\nexport interface PageMargins {\r\n    top: Length;\r\n    right: Length;\r\n    bottom: Length;\r\n    left: Length;\r\n    header: Length;\r\n    footer: Length;\r\n    gutter: Length;\r\n}\r\n\r\nexport enum SectionType {\r\n    Continuous = \"continuous\",\r\n    NextPage = \"nextPage\", \r\n    NextColumn = \"nextColumn\",\r\n    EvenPage = \"evenPage\",\r\n    OddPage = \"oddPage\",\r\n}\r\n\r\nexport interface FooterHeaderReference {\r\n    id: string;\r\n    type: string | \"first\" | \"even\" | \"default\";\r\n}\r\n\r\nexport interface SectionProperties {\r\n    type: SectionType | string;\r\n    pageSize: PageSize,\r\n    pageMargins: PageMargins,\r\n    columns: Columns;\r\n    footerRefs: FooterHeaderReference[];\r\n    headerRefs: FooterHeaderReference[];\r\n}\r\n\r\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\r\n    var section = <SectionProperties>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pgSz\":\r\n                section.pageSize = {\r\n                    width: xml.lengthAttr(e, \"w\"),\r\n                    height: xml.lengthAttr(e, \"h\"),\r\n                    orientation: xml.attr(e, \"orient\")\r\n                }\r\n                break;\r\n\r\n            case \"type\":\r\n                section.type = xml.attr(e, \"val\");\r\n                break;\r\n\r\n            case \"pgMar\":\r\n                section.pageMargins = {\r\n                    left: xml.lengthAttr(e, \"left\"),\r\n                    right: xml.lengthAttr(e, \"right\"),\r\n                    top: xml.lengthAttr(e, \"top\"),\r\n                    bottom: xml.lengthAttr(e, \"bottom\"),\r\n                    header: xml.lengthAttr(e, \"header\"),\r\n                    footer: xml.lengthAttr(e, \"footer\"),\r\n                    gutter: xml.lengthAttr(e, \"gutter\"),\r\n                };\r\n                break;\r\n\r\n            case \"cols\":\r\n                section.columns = parseColumns(e, xml);\r\n                break;\r\n\r\n            case \"headerReference\":\r\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n            \r\n            case \"footerReference\":\r\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \r\n                break;\r\n        }\r\n    }\r\n\r\n    return section;\r\n}\r\n\r\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\r\n    return {\r\n        numberOfColumns: xml.intAttr(elem, \"num\"),\r\n        space: xml.lengthAttr(elem, \"space\"),\r\n        separator: xml.boolAttr(elem, \"sep\"),\r\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\r\n        columns: xml.elements(elem, \"col\")\r\n            .map(e => <Column>{\r\n                width: xml.lengthAttr(e, \"w\"),\r\n                space: xml.lengthAttr(e, \"space\")\r\n            })\r\n    };\r\n}\r\n\r\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\r\n    return {\r\n        id: xml.attr(elem, \"id\"),\r\n        type: xml.attr(elem, \"type\"),\r\n    }\r\n}","import { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tc\")\r\nexport class WmlTableCell extends DocxContainer {\r\n    span?: number;\r\n    verticalMerge: string;\r\n}","import { element } from \"../parser/xml-serialize\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tr\")\r\nexport class WmlTableRow extends DocxContainer {\r\n}","import globalXmlParser, { attr, elements, XmlParser } from \"../parser/xml-parser\";\r\nimport { element, fromElement } from \"../parser/xml-serialize\";\r\nimport { Length } from \"./common\";\r\nimport { DocxContainer } from \"./dom\";\r\n\r\n@element(\"tbl\")\r\nexport class WmlTable extends DocxContainer {\r\n    @fromElement(\"tblGrid\", parseTableColumns)\r\n    columns?: TableColumn[];\r\n    @fromElement(\"tblPr\", parseTableProperties)\r\n    props: TableProperties;\r\n\r\n    cellStyle?: Record<string, string>;\r\n}\r\n\r\nexport interface TableColumn {\r\n    width?: Length;\r\n}\r\n\r\nexport interface TableProperties {\r\n    alignment: string;\r\n    caption: string;\r\n    tableLook: TableLook;\r\n}\r\n\r\nexport function parseTableProperties(elem: Element): TableProperties {\r\n    const result = {} as TableProperties;\r\n\r\n    for (const e of elements(elem)) {\r\n        switch(e.localName) {\r\n            case \"jc\":\r\n                result.alignment = attr(e, \"val\");\r\n                break;\r\n                \r\n            case \"tblCaption\":\r\n                result.caption = attr(e, \"val\");\r\n                break;\r\n\r\n            case \"tblLook\":\r\n                result.tableLook = parseTableLook(e);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport interface TableLook {\r\n    firstColumn: boolean;\r\n    firstRow: boolean;\r\n    lastColumn: boolean;\r\n    lastRow: boolean;\r\n    noHBand: boolean;\r\n    noVBand: boolean;\r\n}\r\n\r\nexport function parseTableLook(elem: Element, xml: XmlParser = globalXmlParser): TableLook {\r\n    //TODO\r\n    const intVal = xml.intAttr(elem, \"val\");\r\n\r\n    return {\r\n        firstColumn: xml.boolAttr(elem, 'firstColumn'),\r\n        firstRow: xml.boolAttr(elem, 'firstRow'),\r\n        lastColumn: xml.boolAttr(elem, 'lastColumn'),\r\n        lastRow: xml.boolAttr(elem, 'lastRow'),\r\n        noHBand: xml.boolAttr(elem, 'noHBand'),\r\n        noVBand: xml.boolAttr(elem, 'noVBand')\r\n    }\r\n}\r\n\r\nexport function parseTableColumns(elem: Element, xml: XmlParser = globalXmlParser): TableColumn[] {\r\n    return xml.elements(elem, 'gridCol').map(e => (<TableColumn>{\r\n        width: xml.lengthAttr(e, \"w\")\r\n    }));\r\n}","import { element, fromAttribute, fromText } from \"../parser/xml-serialize\";\r\nimport { DocxElement } from \"./dom\";\r\n\r\n@element('t')\r\nexport class WmlText extends DocxElement {\r\n    @fromText()\r\n    text: string;\r\n}\r\n\r\n@element('sym')\r\nexport class WmlSymbol extends DocxElement {\r\n    @fromAttribute('font')\r\n    font: string;\r\n    @fromAttribute('char')\r\n    char: string;\r\n}\r\n\r\n@element('tab')\r\nexport class WmlTab extends DocxElement {\r\n}\r\n\r\n@element(\"footnoteReference\")\r\nexport class WmlFootnoteReference extends DocxElement {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n}\r\n@element(\"instrText\")\r\nexport class WmlInstructionText extends DocxElement {\r\n    @fromText()\r\n    text: string;\r\n}\r\n\r\n","import { WordDocument } from './word-document';\r\nimport { DocumentParser } from './document-parser';\r\nimport { HtmlRenderer } from './html-renderer';\r\n\r\nexport interface Options {\r\n    inWrapper: boolean;\r\n    ignoreWidth: boolean;\r\n    ignoreHeight: boolean;\r\n    ignoreFonts: boolean;\r\n    breakPages: boolean;\r\n    debug: boolean;\r\n    experimental: boolean;\r\n    className: string;\r\n    trimXmlDeclaration: boolean;\r\n    renderHeaders: boolean;\r\n    renderFooters: boolean;\r\n    renderFootnotes: boolean;\r\n    ignoreLastRenderedPageBreak: boolean;\r\n    keepOrigin: boolean;\r\n}\r\n\r\nexport const defaultOptions: Options = {\r\n    ignoreHeight: false,\r\n    ignoreWidth: false,\r\n    ignoreFonts: false,\r\n    breakPages: true,\r\n    debug: false,\r\n    experimental: false,\r\n    className: \"docx\",\r\n    inWrapper: true,\r\n    trimXmlDeclaration: true,\r\n    ignoreLastRenderedPageBreak: true,\r\n    renderHeaders: true,\r\n    renderFooters: true,\r\n    renderFootnotes: true,\r\n    keepOrigin: false\r\n}\r\n\r\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any>  {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    return WordDocument.load(data, new DocumentParser(ops), ops);\r\n}\r\n\r\nexport function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\r\n    const ops = { ...defaultOptions, ...userOptions };\r\n    const renderer = new HtmlRenderer(window.document);\r\n\r\n    return WordDocument\r\n        .load(data, new DocumentParser(ops), ops)\r\n        .then(doc => {\r\n            renderer.render(doc, bodyContainer, styleContainer, ops);\r\n            return doc;\r\n        });\r\n}","import { Part } from \"../common/part\";\r\nimport { FontDeclaration, parseFonts } from \"./fonts\";\r\n\r\nexport class FontTablePart extends Part {\r\n    fonts: FontDeclaration[];\r\n\r\n    parseXml(root: Element) {\r\n        this.fonts = parseFonts(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface FontDeclaration {\r\n    name: string,\r\n    altName: string,\r\n    family: string,\r\n    fontKey: string,\r\n    refId: string\r\n}\r\n\r\nexport function parseFonts(root: Element, xmlParser: XmlParser): FontDeclaration[] {\r\n    return xmlParser.elements(root).map(el => parseFont(el, xmlParser));\r\n}\r\n\r\nexport function parseFont(elem: Element, xmlParser: XmlParser): FontDeclaration {\r\n    let result = <FontDeclaration>{\r\n        name: xmlParser.attr(elem, \"name\")\r\n    };\r\n\r\n    for (let el of xmlParser.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"family\":\r\n                result.family = xmlParser.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"altName\":\r\n                result.altName = xmlParser.attr(el, \"val\");\r\n                break;\r\n\r\n            case \"embedRegular\":\r\n                result.fontKey = xmlParser.attr(el, \"fontKey\");\r\n                result.refId = xmlParser.attr(el, \"id\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlFooter } from \"./footer\";\r\n\r\nexport class FooterPart extends Part {\r\n    footerElement: WmlFooter;\r\n    \r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n    \r\n    parseXml(root: Element) {\r\n        this.footerElement = this._documentParser.parseFooter(root);\r\n    }\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element } from \"../parser/xml-serialize\";\r\n\r\n@element(\"ftr\")\r\nexport class WmlFooter extends DocxContainer {\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element, fromAttribute } from \"../parser/xml-serialize\";\r\n\r\n@element(\"footnote\")\r\nexport class WmlFootnote extends DocxContainer {\r\n    @fromAttribute(\"id\")\r\n    id: string;\r\n    @fromAttribute(\"type\")\r\n    type: string;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlFootnote } from \"./footnote\";\r\n\r\nexport class FootnotesPart extends Part {\r\n    private _documentParser: DocumentParser;\r\n\r\n    footnotes: WmlFootnote[]\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.footnotes = this._documentParser.parseFootnotes(root);\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { WmlHeader } from \"./header\";\r\n\r\nexport class HeaderPart extends Part {\r\n    headerElement: WmlHeader;\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.headerElement = this._documentParser.parseHeader(root);\r\n    }\r\n}","import { DocxContainer } from \"../document/dom\";\r\nimport { element } from \"../parser/xml-serialize\";\r\n\r\n@element(\"hdr\")\r\nexport class WmlHeader extends DocxContainer {\r\n}","import { WordDocument } from './word-document';\r\nimport { IDomNumbering, DocxContainer, DocxElement } from './document/dom';\r\nimport { Length, Underline } from './document/common';\r\nimport { Options } from './docx-preview';\r\nimport { WmlParagraph, ParagraphProperties } from './document/paragraph';\r\nimport { appendClass, keyBy, mergeDeep } from './utils';\r\nimport { updateTabStop } from './javascript';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { FooterHeaderReference, SectionProperties } from './document/section';\r\nimport { WmlRun, RunFonts, RunProperties, Shading } from './document/run';\r\nimport { WmlBookmarkStart } from './document/bookmarks';\r\nimport { IDomStyle } from './document/style';\r\nimport { NumberingPartProperties } from './numbering/numbering';\r\nimport { Border } from './document/border';\r\nimport { TableColumn, WmlTable } from './document/table';\r\nimport { WmlTableRow } from './document/table-row';\r\nimport { WmlTableCell } from './document/table-cell';\r\nimport { WmlHyperlink } from './document/hyperlink';\r\nimport { WmlDrawing, DmlPicture } from './document/drawing';\r\nimport { WmlBreak, WmlLastRenderedPageBreak } from './document/breaks';\r\nimport { WmlFootnoteReference, WmlSymbol, WmlTab, WmlText } from './document/text';\r\nimport { LineSpacing } from './document/line-spacing';\r\nimport { WmlStyle } from './styles/style';\r\nimport { WmlHeader } from './header/header';\r\nimport { WmlFooter } from './footer/footer';\r\nimport { WmlBody } from './document/document';\r\nimport { Part } from './common/part';\r\nimport { HeaderPart } from './header/header-part';\r\nimport { FooterPart } from './footer/footer-part';\r\nimport { WmlFootnote } from './footnotes/footnote';\r\n\r\nconst knownColors = ['black','blue','cyan','darkBlue','darkCyan','darkGray','darkGreen','darkMagenta','darkRed','darkYellow','green','lightGray','magenta','none','red','white','yellow'];\r\n\r\nexport var autos = {\r\n    shd: \"white\",\r\n    color: \"black\",\r\n    highlight: \"transparent\"\r\n};\r\n\r\nexport class HtmlRenderer {\r\n\r\n    className: string = \"docx\";\r\n    document: WordDocument;\r\n    options: Options;\r\n    domStyleMap: Record<string, IDomStyle>;\r\n    styleMap: Record<string, WmlStyle>;\r\n    footnoteMap: any = {};\r\n    currentFootnoteIds: string[];\r\n\r\n    constructor(private htmlDocument: HTMLDocument) {\r\n    }\r\n\r\n    render(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\r\n        this.document = document;\r\n        this.options = options;\r\n        this.className = options.className;\r\n        this.domStyleMap = null;\r\n\r\n        styleContainer = styleContainer || bodyContainer;\r\n\r\n        removeAllElements(styleContainer);\r\n        removeAllElements(bodyContainer);\r\n\r\n        appendComment(styleContainer, \"docxjs library predefined styles\");\r\n        styleContainer.appendChild(this.renderDefaultStyle());\r\n        \r\n        if (document.stylesPart != null) {\r\n            this.domStyleMap = this.processDomStyles(document.stylesPart.domStyles);\r\n            this.styleMap = this.processStyles(document.stylesPart.styles);\r\n\r\n            appendComment(styleContainer, \"docx document styles\");\r\n            styleContainer.appendChild(this.renderStyles(document.stylesPart.domStyles));\r\n        }\r\n\r\n        if (document.numberingPart) {\r\n            appendComment(styleContainer, \"docx document numbering styles\");\r\n            styleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\r\n            //styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\r\n        }\r\n\r\n        if (document.footnotesPart) {\r\n            this.footnoteMap = keyBy(document.footnotesPart.footnotes, x => x.id);\r\n        }\r\n\r\n        if(!options.ignoreFonts && document.fontTablePart)\r\n            this.renderFontTable(document.fontTablePart, styleContainer);\r\n\r\n        var sectionElements = this.renderSections(document.documentPart.documentElement.body);\r\n\r\n        if (this.options.inWrapper) {\r\n            var wrapper = this.renderWrapper();\r\n            appentElements(wrapper, sectionElements);\r\n            bodyContainer.appendChild(wrapper);\r\n        }\r\n        else {\r\n            appentElements(bodyContainer, sectionElements);\r\n        }\r\n    }\r\n\r\n    renderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\r\n        for(let f of fontsPart.fonts.filter(x => x.refId)) {\r\n            this.document.loadFont(f.refId, f.fontKey).then(fontData => {\r\n                var cssTest = `@font-face {\r\n                    font-family: \"${f.name}\";\r\n                    src: url(${fontData});\r\n                }`;\r\n\r\n                appendComment(styleContainer, `Font ${f.name}`);\r\n                styleContainer.appendChild(createStyleElement(cssTest));\r\n            });\r\n        }\r\n    }\r\n\r\n    processClassName(className: string) {\r\n        if (!className)\r\n            return this.className;\r\n\r\n        return `${this.className}_${className}`;\r\n    }\r\n\r\n    processStyles(styles: WmlStyle[]) {\r\n        const styleMap = keyBy(styles, s => s.id);\r\n\r\n        for (let style of styles.filter(s => s.basedOn)) {\r\n            const baseStyle = styleMap[style.basedOn];\r\n        \r\n            if(baseStyle) {\r\n                style.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\r\n                style.runProps = mergeDeep(style.runProps, baseStyle.runProps);\r\n            } else if (this.options.debug) {\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n            }\r\n        }\r\n\r\n        return styleMap;\r\n    }\r\n\r\n    processDomStyles(styles: IDomStyle[]) {\r\n        var domStylesMap = keyBy(styles, x => x.id);\r\n\r\n        for (let style of styles.filter(x => x.basedOn)) {\r\n            var baseStyle = domStylesMap[style.basedOn];\r\n\r\n            if (baseStyle) {\r\n                for (let styleValues of style.styles) {\r\n                    var baseValues = baseStyle.styles.filter(x => x.target == styleValues.target);\r\n\r\n                    if (baseValues && baseValues.length > 0)\r\n                        this.copyStyleProperties(baseValues[0].values, styleValues.values);\r\n                }\r\n            }\r\n            else if (this.options.debug)\r\n                console.warn(`Can't find base style ${style.basedOn}`);\r\n        }\r\n\r\n        for (let style of styles) {\r\n            style.cssName = this.processClassName(this.escapeClassName(style.id));\r\n        }\r\n\r\n        return domStylesMap;\r\n    }\r\n\r\n    processElement(element: DocxElement) {\r\n        if (\"children\" in element) {\r\n            for (var e of (element as DocxContainer).children) {\r\n                e.className = this.processClassName(e.className);\r\n                e.parent = element;\r\n\r\n                if (e instanceof WmlTable) {\r\n                    this.processTable(e);\r\n                }\r\n                else {\r\n                    this.processElement(e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    processTable(table: WmlTable) {\r\n        for (var r of table.children) {\r\n            for (var c of (r as DocxContainer).children) {\r\n                c.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\r\n                    \"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\r\n                    \"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\r\n                ]);\r\n\r\n                this.processElement(c);\r\n            }\r\n        }\r\n    }\r\n\r\n    copyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\r\n        if (!input)\r\n            return output;\r\n\r\n        if (output == null) output = {};\r\n        if (attrs == null) attrs = Object.getOwnPropertyNames(input);\r\n\r\n        for (var key of attrs) {\r\n            if (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\r\n                output[key] = input[key];\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    private renderContainer(elem: DocxContainer, tagName: string): HTMLElement {\r\n        const result = this.createElement(tagName);\r\n        this.renderElements(elem.children, result);\r\n        return result;\r\n    }\r\n\r\n    createSection(className: string, props: SectionProperties) {\r\n        var elem = this.createElement(\"section\", { className });\r\n        \r\n        if (props) {\r\n            if (props.pageMargins) {\r\n                elem.style.paddingLeft = this.renderLength(props.pageMargins.left);\r\n                elem.style.paddingRight = this.renderLength(props.pageMargins.right);\r\n                elem.style.paddingTop = this.renderLength(props.pageMargins.top);\r\n                elem.style.paddingBottom = this.renderLength(props.pageMargins.bottom);\r\n            }\r\n\r\n            if (props.pageSize) {\r\n                if (!this.options.ignoreWidth)\r\n                    elem.style.width = this.renderLength(props.pageSize.width);\r\n                if (!this.options.ignoreHeight)\r\n                    elem.style.minHeight = this.renderLength(props.pageSize.height);\r\n            }\r\n\r\n            if (props.columns && props.columns.numberOfColumns) {\r\n                elem.style.columnCount = `${props.columns.numberOfColumns}`;\r\n                elem.style.columnGap = this.renderLength(props.columns.space);\r\n\r\n                if (props.columns.separator) {\r\n                    elem.style.columnRule = \"1px solid black\";\r\n                }\r\n            }\r\n        }\r\n\r\n        return elem;\r\n    }\r\n\r\n    renderSections(document: WmlBody): HTMLElement[] {\r\n        const result = [];\r\n\r\n        this.processElement(document);\r\n\r\n        for(let section of this.splitBySection(document.children)) {\r\n        \tthis.currentFootnoteIds = [];\r\n        \t\r\n            const props = section.sectProps || document.sectionProps;\r\n            const sectionElement = this.createSection(this.className, props);\r\n\r\n            var headerPart = this.options.renderHeaders ? this.findHeaderFooter<HeaderPart>(props.headerRefs, result.length) : null;\r\n            var footerPart = this.options.renderFooters ? this.findHeaderFooter<FooterPart>(props.footerRefs, result.length) : null;\r\n\r\n            headerPart && this.renderElements([headerPart.headerElement], sectionElement);\r\n\r\n            var contentElement = this.createElement(\"article\");\r\n            this.renderElements(section.elements,contentElement);\r\n            sectionElement.appendChild(contentElement);\r\n\r\n            if (this.options.renderFootnotes) {\r\n                this.renderFootnotes(this.currentFootnoteIds, sectionElement);\r\n            }\r\n\r\n            footerPart && this.renderElements([footerPart.footerElement], sectionElement);\r\n\r\n            result.push(sectionElement);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    findHeaderFooter<T extends Part>(refs: FooterHeaderReference[], page: number): T {\r\n        var ref = refs ? ((page == 0 ? refs.find(x => x.type == \"first\") : null)\r\n            ?? (page % 2 ==0 ? refs.find(x => x.type == \"even\") : null)\r\n            ?? refs.find(x => x.type == \"default\")) : null;\r\n        \r\n        if (ref == null)\r\n            return null;\r\n\r\n        return this.document.findPartByRelId(ref.id, this.document.documentPart) as T;\r\n    }\r\n    \r\n    isPageBreakElement(elem: DocxElement): boolean {\r\n        if (elem instanceof WmlLastRenderedPageBreak)\r\n            return !this.options.ignoreLastRenderedPageBreak;\r\n\r\n        return elem instanceof WmlBreak && elem.type === \"page\";  \r\n    }\r\n\r\n    splitBySection(elements: DocxElement[]): { sectProps: SectionProperties, elements: DocxElement[] }[] {\r\n        var current = { sectProps: null, elements: [] };\r\n        var result = [current];\r\n\r\n        for(let elem of elements) {\r\n            if (elem instanceof WmlParagraph) {\r\n                const styleName = elem.props.styleId;\r\n                const s = this.styleMap && styleName ? this.styleMap[styleName] : null;\r\n            \r\n                if(s?.paragraphProps?.pageBreakBefore) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n            }\r\n\r\n            current.elements.push(elem);\r\n\r\n            if(elem instanceof WmlParagraph)\r\n            {\r\n                const p = elem as WmlParagraph;\r\n\r\n                var sectProps = p.props.sectionProps;\r\n                var pBreakIndex = -1;\r\n                var rBreakIndex = -1;\r\n                \r\n                if(this.options.breakPages && p.children.length > 0) {\r\n                    pBreakIndex = p.children.findIndex((r: DocxContainer) => {\r\n                        rBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\r\n                        return rBreakIndex != -1;\r\n                    });\r\n                }\r\n    \r\n                if(sectProps || pBreakIndex != -1) {\r\n                    current.sectProps = sectProps;\r\n                    current = { sectProps: null, elements: [] };\r\n                    result.push(current);\r\n                }\r\n\r\n                if(pBreakIndex != -1) {\r\n                    let breakRun = p.children[pBreakIndex] as WmlRun;\r\n                    let splitRun = rBreakIndex < breakRun.children.length - 1;\r\n\r\n                    if(pBreakIndex < p.children.length - 1 || splitRun) {\r\n                        var children = elem.children;\r\n                        var newParagraph = Object.assign(new WmlParagraph(), elem, { children: children.slice(pBreakIndex) });\r\n                        elem.children = children.slice(0, pBreakIndex);\r\n                        current.elements.push(newParagraph);\r\n\r\n                        if(splitRun) {\r\n                            let runChildren = breakRun.children;\r\n                            let newRun =  Object.assign(new WmlRun(), breakRun, { children: runChildren.slice(0, rBreakIndex) });\r\n                            elem.children.push(newRun);\r\n                            breakRun.children = runChildren.slice(rBreakIndex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let currentSectProps = null;\r\n\r\n        for (let i = result.length - 1; i >= 0; i--) {\r\n            if (result[i].sectProps == null) {\r\n                result[i].sectProps = currentSectProps;\r\n            } else {\r\n                currentSectProps = result[i].sectProps\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderLength(l: Length): string {\r\n        return l ? `${l.value.toFixed(2)}${l.type ?? ''}` : null;\r\n    }\r\n\r\n    renderColor(c: string, autoColor: string = 'black'): string {\r\n        if (/[a-f0-9]{6}/i.test(c))\r\n            return `#${c}`;\r\n\r\n        return c === 'auto' ? autoColor : c;\r\n    }\r\n\r\n    renderWrapper() {\r\n        var wrapper = document.createElement(\"div\");\r\n\r\n        wrapper.className = `${this.className}-wrapper`\r\n\r\n        return wrapper;\r\n    }\r\n\r\n    renderDefaultStyle() {\r\n        var c = this.className;\r\n        var styleText = `\r\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \r\n.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\r\n.${c} { color: black; }\r\nsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; }\r\nsection.${c}>article { margin-bottom: auto; }\r\n.${c} table { border-collapse: collapse; }\r\n.${c} table td, .${c} table th { vertical-align: top; }\r\n.${c} p { margin: 0pt; min-height: 1em; }\r\n.${c} span { white-space: pre-wrap; }\r\n`;\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    // renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\r\n    //     let css = \"\";\r\n    //     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\r\n    //     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\r\n    //     const topCounters = [];\r\n\r\n    //     for(let num of numberingPart.numberings) {\r\n    //         const absNum = numberingMap[num.abstractId];\r\n\r\n    //         for(let lvl of absNum.levels) {\r\n    //             const className = this.numberingClass(num.id, lvl.level);\r\n    //             let listStyleType = \"none\";\r\n\r\n    //             if(lvl.text && lvl.format == 'decimal') {\r\n    //                 const counter = this.numberingCounter(num.id, lvl.level);\r\n\r\n    //                 if (lvl.level > 0) {\r\n    //                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\r\n    //                         \"counter-reset\": counter\r\n    //                     });\r\n    //                 } else {\r\n    //                     topCounters.push(counter);\r\n    //                 }\r\n                    \r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": this.levelTextToContent(lvl.text, num.id),\r\n    //                     \"counter-increment\": counter\r\n    //                 });\r\n    //             } else if(lvl.bulletPictureId) {\r\n    //                 let pict = bulletMap[lvl.bulletPictureId];\r\n    //                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\r\n\r\n    //                 css += this.styleToString(`p.${className}:before`, {\r\n    //                     \"content\": \"' '\",\r\n    //                     \"display\": \"inline-block\",\r\n    //                     \"background\": `var(${variable})`\r\n    //                 }, pict.style);\r\n    \r\n    //                 this.document.loadNumberingImage(pict.referenceId).then(data => {\r\n    //                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\r\n    //                     container.appendChild(createStyleElement(text));\r\n    //                 });\r\n    //             } else {\r\n    //                 listStyleType = this.numFormatToCssValue(lvl.format);\r\n    //             }\r\n\r\n    //             css += this.styleToString(`p.${className}`, {\r\n    //                 \"display\": \"list-item\",\r\n    //                 \"list-style-position\": \"inside\",\r\n    //                 \"list-style-type\": listStyleType,\r\n    //                 //TODO\r\n    //                 //...num.style\r\n    //             });\r\n    //         }\r\n    //     }\r\n\r\n    //     if (topCounters.length > 0) {\r\n    //         css += this.styleToString(`.${this.className}-wrapper`, {\r\n    //             \"counter-reset\": topCounters.join(\" \")\r\n    //         });\r\n    //     }\r\n\r\n    //     return createStyleElement(css);\r\n    // }\r\n\r\n    renderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\r\n        var styleText = \"\";\r\n        var rootCounters = [];\r\n\r\n        for (var num of numberings) {\r\n            var selector = `p.${this.numberingClass(num.id, num.level)}`;\r\n            var listStyleType = \"none\";\r\n\r\n            if (num.bullet) {\r\n                let valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": \"' '\",\r\n                    \"display\": \"inline-block\",\r\n                    \"background\": `var(${valiable})`\r\n                }, num.bullet.style);\r\n\r\n                this.document.loadNumberingImage(num.bullet.src).then(data => {\r\n                    var text = `.${this.className}-wrapper { ${valiable}: url(${data}) }`;\r\n                    styleContainer.appendChild(createStyleElement(text));\r\n                });\r\n            }\r\n            else if (num.levelText) {\r\n                let counter = this.numberingCounter(num.id, num.level);\r\n\r\n                if (num.level > 0) {\r\n                    styleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\r\n                        \"counter-reset\": counter\r\n                    });\r\n                }\r\n                else {\r\n                    rootCounters.push(counter);\r\n                }\r\n\r\n                styleText += this.styleToString(`${selector}:before`, {\r\n                    \"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\r\n                    \"counter-increment\": counter,\r\n                    ...num.rStyle,\r\n                });\r\n            }\r\n            else {\r\n                listStyleType = this.numFormatToCssValue(num.format);\r\n            }\r\n\r\n            styleText += this.styleToString(selector, {\r\n                \"display\": \"list-item\",\r\n                \"list-style-position\": \"inside\",\r\n                \"list-style-type\": listStyleType,\r\n                ...num.pStyle\r\n            });\r\n        }\r\n\r\n        if (rootCounters.length > 0) {\r\n            styleText += this.styleToString(`.${this.className}-wrapper`, {\r\n                \"counter-reset\": rootCounters.join(\" \")\r\n            });\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderStyles(styles: IDomStyle[]): HTMLElement {\r\n        var styleText = \"\";\r\n        var stylesMap = this.domStyleMap;\r\n        var defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\r\n\r\n        for (let style of styles) {\r\n            var subStyles =  style.styles;\r\n\r\n            if(style.linked) {\r\n                var linkedStyle = style.linked && stylesMap[style.linked];\r\n\r\n                if (linkedStyle)\r\n                    subStyles = subStyles.concat(linkedStyle.styles);\r\n                else if(this.options.debug)\r\n                    console.warn(`Can't find linked style ${style.linked}`);\r\n            }\r\n\r\n            for (var subStyle of subStyles) {\r\n                var selector = \"\";\r\n\r\n                if (style.target == subStyle.target)\r\n                    selector += `${style.target}.${style.cssName}`;\r\n                else if (style.target)\r\n                    selector += `${style.target}.${style.cssName} ${subStyle.target}`;\r\n                else\r\n                    selector += `.${style.cssName} ${subStyle.target}`;\r\n\r\n                if (defautStyles[style.target] == style)\r\n                    selector = `.${this.className} ${style.target}, ` + selector;\r\n\r\n                if (style.paragraphProps && subStyle.target == \"p\") {\r\n                    this.renderParagraphProperties(subStyle.values, style.paragraphProps);\r\n                }\r\n\r\n                styleText += this.styleToString(selector, subStyle.values);\r\n            }\r\n        }\r\n\r\n        return createStyleElement(styleText);\r\n    }\r\n\r\n    renderFootnotes(footnoteIds: string[], into: HTMLElement) {\r\n        var footnotes = footnoteIds.map(id => this.footnoteMap[id]).filter(x => x);\r\n        \r\n        if (footnotes.length > 0) {\r\n            var result = this.createElement(\"ol\");\r\n            this.renderElements(footnotes, result);\r\n            into.appendChild(result);\r\n        }\r\n    }\r\n    \r\n    renderElement(elem: DocxElement): Node {\r\n        if (elem instanceof WmlParagraph) {\r\n            return this.renderParagraph(elem);\r\n        } else if (elem instanceof WmlBookmarkStart) {\r\n            return this.renderBookmarkStart(elem);\r\n        } else if (elem instanceof WmlRun) {\r\n            return this.renderRun(elem);\r\n        } else if (elem instanceof WmlBreak) {\r\n            return this.renderBreak(elem);\r\n        } else if (elem instanceof WmlText) {\r\n            return this.renderText(elem);\r\n        } else if (elem instanceof WmlSymbol) {\r\n            return this.renderSymbol(elem);\r\n        } else if (elem instanceof WmlTab) {\r\n            return this.renderTab(elem);\r\n        } else if (elem instanceof WmlTable) {\r\n            return this.renderTable(elem);\r\n        } else if (elem instanceof WmlTableRow) {\r\n            return this.renderTableRow(elem);\r\n        } else if (elem instanceof WmlTableCell) {\r\n            return this.renderTableCell(elem);\r\n        } else if (elem instanceof WmlHyperlink) {\r\n            return this.renderHyperlink(elem);\r\n        } else if (elem instanceof WmlDrawing) {\r\n            return this.renderDrawing(elem);\r\n        } else if (elem instanceof DmlPicture) {\r\n            return this.renderImage(elem);\r\n        } else if (elem instanceof WmlHeader) {\r\n            return this.renderHeader(elem);\r\n        } else if (elem instanceof WmlFooter) {\r\n            return this.renderFooter(elem);\r\n        } else if (elem instanceof WmlFootnoteReference) {\r\n            return this.renderFootnoteReference(elem);\r\n        } else if (elem instanceof WmlFootnote) {\r\n            return this.renderFootnote(elem);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderChildren(elem: DocxContainer, into?: HTMLElement): Node[] {\r\n        return this.renderElements(elem.children, into);\r\n    }\r\n\r\n    renderElements(elems: DocxElement[], into?: HTMLElement): Node[] {\r\n        if(elems == null)\r\n            return null;\r\n\r\n        var result = elems.map(e => {\r\n            let n = this.renderElement(e);\r\n\r\n            if(n && this.options.keepOrigin)\r\n                (n as any).$$docxElement = e;\r\n\r\n            return n;\r\n        }).filter(e => e != null);\r\n\r\n        if(into)\r\n            for(let c of result)\r\n                into.appendChild(c);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderParagraph(elem: WmlParagraph) {\r\n        var result = this.renderContainer(elem, \"p\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderParagraphProperties(result.style, elem.props);\r\n\r\n        const style = elem.props.styleId && this.styleMap?.[elem.props.styleId]; \r\n        const numbering = elem.props.numbering ?? style?.paragraphProps?.numbering;\r\n\r\n        if (numbering) {\r\n            var numberingClass = this.numberingClass(numbering.id, numbering.level ?? 0);\r\n            result.className = appendClass(result.className, numberingClass);\r\n        }\r\n\r\n        if (elem.props.styleId) {\r\n            var styleClassName = this.processClassName(this.escapeClassName(elem.props.styleId));\r\n            result.className = appendClass(result.className, styleClassName);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderParagraphProperties(style: any, props: ParagraphProperties) {\r\n        for (const p in props) {\r\n            const v = props[p];\r\n\r\n            switch(p as keyof(ParagraphProperties)) {\r\n                case \"lineSpacing\":\r\n                    this.renderLineSpacing(style, v);\r\n                    break;\r\n\r\n                case \"textAlignment\":\r\n                    this.renderTextAligment(style, v);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTextAligment(style: any, v: any) {\r\n        const valuesMap = {\r\n            \"auto\": \"baseline\",\r\n            \"baseline\": \"baseline\",\r\n            \"top\": \"top\",\r\n            \"center\": \"middle\",\r\n            \"bottom\": \"bottom\"\r\n        }\r\n\r\n        if(v in valuesMap)\r\n            style['vertical-align'] = valuesMap[v];\r\n    }\r\n\r\n    renderLineSpacing(style: any, spacing: LineSpacing) {   \r\n        if (spacing.before) {\r\n            style[\"margin-top\"] = this.renderLength(spacing.before);\r\n        }\r\n\r\n        if (spacing.after) {\r\n            style[\"margin-bottom\"] = this.renderLength(spacing.after);\r\n        }\r\n\r\n        switch(spacing.lineRule) {\r\n            case 'atLeast':\r\n                style['line-height'] = `calc(100% - ${this.renderLength(spacing.line)})`;\r\n                break;\r\n            case 'auto':\r\n                style['line-height'] = this.renderLength(spacing.line);\r\n                break;\r\n            case 'exactly':\r\n                //TODO: setting min-height maybe not needed\r\n                style['line-height'] = style['min-height'] = this.renderLength(spacing.line);\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderRunProperties(style: any, props: RunProperties) {\r\n        for (const p in props) {\r\n            const v = props[p];\r\n\r\n            switch (p as keyof(RunProperties)) {\r\n                case 'highlight':\r\n                    style['background'] = this.renderColor(v);\r\n                    break;\r\n\r\n                case 'shading':\r\n                    style['background'] = this.renderShading(v);\r\n                    break;\r\n\r\n                case 'border':\r\n                    style['border'] = this.renderBorder(v);\r\n                    break;\r\n\r\n                case 'color':\r\n                    style[\"color\"] = this.renderColor(v);\r\n                    break;\r\n\r\n                case 'fontSize':\r\n                    style[\"font-size\"] = this.renderLength(v);\r\n                    break;\r\n\r\n                case 'bold':\r\n                    style[\"font-weight\"] = v ? 'bold' : 'normal';\r\n                    break;\r\n\r\n                case 'italics':\r\n                    style[\"font-style\"] = v ? 'italic' : 'normal';\r\n                    break;\r\n\r\n                case 'smallCaps':\r\n                    style[\"font-size\"] = v ? 'smaller' : 'none';\r\n                case 'caps':\r\n                    style[\"text-transform\"] = v ? 'uppercase' : 'none';\r\n                    break;\r\n                    \r\n                case 'strike':\r\n                    style[\"text-decoration\"] = v ? 'line-through' : 'none';\r\n                    break;\r\n\r\n                case 'fonts':\r\n                    style[\"font-family\"] = this.renderRunFonts(v);\r\n                    break;\r\n    \r\n                case 'underline':\r\n                    this.renderUnderline(style, v);\r\n                    break;\r\n                \r\n                case 'verticalAlignment':\r\n                    this.renderRunVerticalAlignment(style, v);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderRunVerticalAlignment(style: any, align: string) {\r\n        switch(align) {\r\n            case 'subscript': \r\n                style['vertical-align'] = 'sub';\r\n                style['font-size'] = 'small';\r\n                break;\r\n\r\n            case 'superscript': \r\n                style['vertical-align'] = 'super';\r\n                style['font-size'] = 'small';\r\n                break;\r\n        }\r\n    }\r\n\r\n    renderRunFonts(fonts: RunFonts) {\r\n        return [fonts.ascii, fonts.hAscii, fonts.cs, fonts.eastAsia].filter(x => x).map(x => `'${x}'`).join(',');\r\n    }\r\n\r\n    renderBorder(border: Border) {\r\n        if (border.type == 'nil')\r\n            return 'none';\r\n\r\n        return `${this.renderLength(border.size)} solid ${this.renderColor(border.color)}`;\r\n    }\r\n    \r\n    renderShading(shading: Shading) {\r\n        if (shading.type == 'clear')\r\n            return this.renderColor(shading.background, autos.shd);\r\n        \r\n        return this.renderColor(shading.background, autos.shd);\r\n    }\r\n    \r\n    renderUnderline(style: any, underline: Underline) {\r\n        if (underline.type == null || underline.type == \"none\")\r\n            return;\r\n\r\n        switch (underline.type) {\r\n            case \"dash\":\r\n            case \"dashDotDotHeavy\":\r\n            case \"dashDotHeavy\":\r\n            case \"dashedHeavy\":\r\n            case \"dashLong\":\r\n            case \"dashLongHeavy\":\r\n            case \"dotDash\":\r\n            case \"dotDotDash\":\r\n                style[\"text-decoration-style\"] = \"dashed\";\r\n                break;\r\n\r\n            case \"dotted\":\r\n            case \"dottedHeavy\":\r\n                style[\"text-decoration-style\"] = \"dotted\";\r\n                break;\r\n\r\n            case \"double\":\r\n                style[\"text-decoration-style\"] = \"double\";\r\n                break;\r\n\r\n            case \"single\":\r\n            case \"thick\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n\r\n            case \"wave\":\r\n            case \"wavyDouble\":\r\n            case \"wavyHeavy\":\r\n                style[\"text-decoration-style\"] = \"wavy\";\r\n                break;\r\n\r\n            case \"words\":\r\n                style[\"text-decoration\"] = \"underline\";\r\n                break;\r\n        }\r\n\r\n        if (underline.color)\r\n            style[\"text-decoration-color\"] = this.renderColor(underline.color);\r\n    }\r\n\r\n    renderHyperlink(elem: WmlHyperlink) {\r\n        var result = this.createElement<HTMLAnchorElement>(\"a\");\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.anchor)\r\n            result.href = elem.anchor;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderDrawing(elem: WmlDrawing) {\r\n        var result = this.createElement(\"div\");\r\n\r\n        result.style.display = \"inline-block\";\r\n        result.style.position = \"relative\";\r\n        result.style.textIndent = \"0px\";\r\n\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderImage(elem: DmlPicture) {\r\n        let result = this.createElement<HTMLImageElement>(\"img\");\r\n\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (this.document) {\r\n            this.document.loadDocumentImage(elem.resourceId).then(x => {\r\n                result.src = x;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderHeader(elem: WmlHeader) {\r\n        return this.renderContainer(elem, \"header\");\r\n    }\r\n\r\n    renderFooter(elem: WmlHeader) {\r\n        return this.renderContainer(elem, \"footer\");\r\n    }\r\n    \r\n    renderFootnote(elem: WmlFootnote) {\r\n        return this.renderContainer(elem, \"li\");\r\n    }\r\n\r\n    renderFootnoteReference(elem: WmlFootnoteReference) {\r\n        var result = this.createElement(\"sup\");\r\n        this.currentFootnoteIds.push(elem.id); \r\n        result.textContent = `${this.currentFootnoteIds.length}`;\r\n        return result;\r\n    }\r\n\r\n    renderText(elem: WmlText) {\r\n        return this.htmlDocument.createTextNode(elem.text);\r\n    }\r\n\r\n    renderBreak(elem: WmlBreak) {\r\n        if (elem.type == \"textWrapping\") {\r\n            return this.htmlDocument.createElement(\"br\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    renderSymbol(elem: WmlSymbol) {\r\n        var span = this.createElement(\"span\");\r\n        span.style.fontFamily = elem.font;\r\n        span.innerHTML = `&#x${elem.char};`\r\n        return span;\r\n    }\r\n\r\n    renderTab(elem: WmlTab) {\r\n        var tabSpan = this.createElement(\"span\");\r\n     \r\n        tabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\r\n\r\n        if(this.options.experimental) {\r\n            setTimeout(() => {\r\n                var paragraph = findParent<WmlParagraph>(elem, WmlParagraph);\r\n                \r\n                if (paragraph?.props.tabs == null)\r\n                    return;\r\n\r\n                paragraph.props.tabs.sort((a, b) => a.position.value - b.position.value);\r\n                tabSpan.style.display = \"inline-block\";\r\n                updateTabStop(tabSpan, paragraph.props.tabs);\r\n            }, 0);\r\n        }\r\n\r\n        return tabSpan;\r\n    }\r\n\r\n    renderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\r\n        var result = this.createElement(\"span\");\r\n        result.id = elem.name;\r\n        return result;\r\n    }\r\n\r\n    renderRun(elem: WmlRun) {\r\n        var result = this.createElement(\"span\");\r\n\r\n        if(elem.id)\r\n            result.id = elem.id;\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        //this.renderStyleValues(elem.cssStyle, result);\r\n        this.renderRunProperties(result.style, elem.props);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTable(elem: WmlTable) {\r\n        let result = this.createElement(\"table\");\r\n\r\n        if (elem.columns)\r\n            result.appendChild(this.renderTableColumns(elem.columns));\r\n\r\n        if (elem.props?.caption) {\r\n            result.appendChild(this.createElement(\"caption\", { textContent: elem.props?.caption }));\r\n        }\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableColumns(columns: TableColumn[]) {\r\n        const result = this.createElement(\"colGroup\");\r\n\r\n        for (let col of columns) {\r\n            let colElem = this.createElement(\"col\");\r\n            colElem.style.width = this.renderLength(col.width);\r\n            result.appendChild(colElem);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableRow(elem: WmlTableRow) {\r\n        let result = this.createElement(\"tr\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    renderTableCell(elem: WmlTableCell) {\r\n        let result = this.createElement<HTMLTableCellElement>(\"td\");\r\n\r\n        this.renderClass(elem, result);\r\n        this.renderChildren(elem, result);\r\n        this.renderStyleValues(elem.cssStyle, result);\r\n\r\n        if (elem.span) result.colSpan = elem.span;\r\n\r\n        return result;\r\n    }\r\n\r\n    renderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\r\n        if (style == null)\r\n            return;\r\n\r\n        for (let key of Object.getOwnPropertyNames(style)) {\r\n            ouput.style[key] = style[key];\r\n        }\r\n    }\r\n\r\n    renderClass(input: DocxElement, ouput: HTMLElement) {\r\n        if (input.className)\r\n            ouput.className = input.className;\r\n    }\r\n\r\n    numberingClass(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    styleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\r\n        let result = `${selectors} {\\r\\n`;\r\n\r\n        for (const key in values) {\r\n            result += `  ${key}: ${values[key]};\\r\\n`;\r\n        }\r\n\r\n        if (cssText) \r\n            result += cssText;\r\n\r\n        return result + \"}\\r\\n\";\r\n    }\r\n\r\n    numberingCounter(id: string, lvl: number) {\r\n        return `${this.className}-num-${id}-${lvl}`;\r\n    }\r\n\r\n    levelTextToContent(text: string, suff: string, id: string, numformat: string) {\r\n        const suffMap = {\r\n            \"tab\": \"\\\\9\",\r\n            \"space\": \"\\\\a0\",            \r\n        };\r\n\r\n        var result = text.replace(/%\\d*/g, s => {\r\n            let lvl = parseInt(s.substring(1), 10) - 1;\r\n            return `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\r\n        });\r\n\r\n        return `\"${result}${suffMap[suff] ?? \"\"}\"`;\r\n    }\r\n\r\n    numFormatToCssValue(format: string) {\r\n        var mapping = {\r\n            \"none\": \"none\",\r\n            \"bullet\": \"disc\",\r\n            \"decimal\": \"decimal\",\r\n            \"lowerLetter\": \"lower-alpha\",\r\n            \"upperLetter\": \"upper-alpha\",\r\n            \"lowerRoman\": \"lower-roman\",\r\n            \"upperRoman\": \"upper-roman\",\r\n        };\r\n\r\n        return mapping[format] || format;\r\n    }\r\n\r\n    escapeClassName(className: string) {\r\n        return className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and');\r\n    }\r\n\r\n    createElement<T extends HTMLElement = HTMLElement>(tagName: string, props: any = undefined): T {\r\n        return Object.assign(this.htmlDocument.createElement(tagName), props);\r\n    }\r\n}\r\n\r\nfunction appentElements(container: HTMLElement, children: HTMLElement[]) {\r\n    for (let c of children)\r\n        container.appendChild(c);\r\n}\r\n\r\nfunction removeAllElements(elem: HTMLElement) {\r\n    elem.innerHTML = '';\r\n}\r\n\r\nfunction createStyleElement(cssText: string) {\r\n    var styleElement = document.createElement(\"style\");\r\n    styleElement.innerHTML = cssText;\r\n    return styleElement;\r\n}\r\n\r\nfunction appendComment(elem: HTMLElement, comment: string) {\r\n    elem.appendChild(document.createComment(comment));\r\n}\r\n\r\nfunction findParent<T extends DocxElement>(elem: DocxElement, type: any): T {\r\n    var parent = elem.parent;\r\n\r\n    while (parent != null && !(parent instanceof type))\r\n        parent = parent.parent;\r\n    \r\n    return <T>parent;\r\n}","import { ParagraphTab } from \"./document/paragraph\";\r\n\r\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], pixelToPoint: number = 72 / 96) {\r\n\r\n    let p = elem.closest(\"p\");\r\n\r\n    let tbb = elem.getBoundingClientRect();\r\n    let pbb = p.getBoundingClientRect();\r\n\r\n    let left = (tbb.left - pbb.left) * pixelToPoint;\r\n    let tab = tabs.find(t => t.style != \"clear\" && t.position.value > left);\r\n\r\n    if(tab == null)\r\n        return;\r\n\r\n    elem.style.display = \"inline-block\";\r\n    elem.style.width = `${(tab.position.value - left)}pt`;    \r\n\r\n    switch (tab.leader) {\r\n        case \"dot\":\r\n        case \"middleDot\":\r\n            elem.style.borderBottom = \"1px black dotted\";\r\n            break;\r\n\r\n        case \"hyphen\":\r\n        case \"heavy\":\r\n        case \"underscore\":\r\n            elem.style.borderBottom = \"1px black solid\";\r\n            break;\r\n    }\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomNumbering } from \"../document/dom\";\r\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\r\n\r\nexport class NumberingPart extends Part implements NumberingPartProperties {\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n    \r\n    domNumberings: IDomNumbering[];\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\r\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \r\n    }\r\n}","import { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface NumberingPartProperties {\r\n    numberings: Numbering[];\r\n    abstractNumberings: AbstractNumbering[];\r\n    bulletPictures: NumberingBulletPicture[];\r\n}\r\n\r\nexport interface Numbering {\r\n    id: string;\r\n    abstractId: string;\r\n    overrides: NumberingLevelOverride[];\r\n}\r\n\r\nexport interface NumberingLevelOverride {\r\n    level: number;\r\n    start: number;\r\n    numberingLevel: NumberingLevel;\r\n}\r\n\r\nexport interface AbstractNumbering {\r\n    id: string;\r\n    name: string;\r\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\r\n    levels: NumberingLevel[];\r\n    numberingStyleLink: string;\r\n    styleLink: string;\r\n}\r\n\r\nexport interface NumberingLevel {\r\n    level: number;\r\n    start: string;\r\n    restart: number;\r\n    format: 'lowerRoman' | 'lowerLetter' | string;\r\n    text: string;\r\n    justification: string;\r\n    bulletPictureId: string;\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport interface NumberingBulletPicture {\r\n    id: string;\r\n    referenceId: string;\r\n    style: string;\r\n}\r\n\r\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\r\n    let result: NumberingPartProperties = {\r\n        numberings: [],\r\n        abstractNumberings: [],\r\n        bulletPictures: []\r\n    }\r\n    \r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"num\":\r\n                result.numberings.push(parseNumbering(e, xml));\r\n                break;\r\n            case \"abstractNum\":\r\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\r\n                break;\r\n            case \"numPicBullet\":\r\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\r\n    let result = <Numbering>{\r\n        id: xml.attr(elem, 'numId'),\r\n        overrides: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"abstractNumId\":\r\n                result.abstractId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlOverride\":\r\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\r\n    let result = <AbstractNumbering>{\r\n        id: xml.attr(elem, 'abstractNumId'),\r\n        levels: []\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"name\":\r\n                result.name = xml.attr(e, \"val\");\r\n                break;\r\n            case \"multiLevelType\":\r\n                result.multiLevelType = xml.attr(e, \"val\");\r\n                break;\r\n            case \"numStyleLink\":\r\n                result.numberingStyleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"styleLink\":\r\n                result.styleLink = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.levels.push(parseNumberingLevel(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\r\n    let result = <NumberingLevel>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"start\":\r\n                result.start = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlRestart\":\r\n                result.restart = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"numFmt\":\r\n                result.format = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlText\":\r\n                result.text = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlJc\":\r\n                result.justification = xml.attr(e, \"val\");\r\n                break;\r\n            case \"lvlPicBulletId\":\r\n                result.bulletPictureId = xml.attr(e, \"val\");\r\n                break;\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\r\n    let result = <NumberingLevelOverride>{\r\n        level: xml.intAttr(elem, 'ilvl')\r\n    };\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"startOverride\":\r\n                result.start = xml.intAttr(e, \"val\");\r\n                break;\r\n            case \"lvl\":\r\n                result.numberingLevel = parseNumberingLevel(e, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\r\n    //TODO\r\n    var pict = xml.element(elem, \"pict\");\r\n    var shape = pict && xml.element(pict, \"shape\");\r\n    var imagedata = shape && xml.element(shape, \"imagedata\");\r\n\r\n    return imagedata ? {\r\n        id: xml.attr(elem, \"numPicBulletId\"),\r\n        referenceId: xml.attr(imagedata, \"id\"),\r\n        style: xml.attr(shape, \"style\")\r\n    } : null;\r\n}","import { Length, LengthUsage, LengthUsageType, convertLength, convertPercentage, convertBoolean  } from \"../document/common\";\r\n\r\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\r\n    if (trimXmlDeclaration)\r\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\r\n    \r\n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \r\n    const errorText = hasXmlParserError(result);\r\n\r\n    if (errorText)\r\n        throw new Error(errorText);\r\n\r\n    return result;\r\n}\r\n\r\nfunction hasXmlParserError(doc: Document) {\r\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\r\n}\r\n\r\nexport function serializeXmlString(elem: Node): string {\r\n    return new XMLSerializer().serializeToString(elem);\r\n}\r\n\r\nexport function elements(elem: Element, localName: string = null): Element[] {\r\n    const result = [];\r\n\r\n    for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n        let c = elem.childNodes.item(i);\r\n\r\n        if (c.nodeType == Node.ELEMENT_NODE && (localName == null || (c as Element).localName == localName))\r\n            result.push(c);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function attr(elem: Element, localName: string): string {\r\n    for (let i = 0, l = elem.attributes.length; i < l; i++) {\r\n        let a = elem.attributes.item(i);\r\n\r\n        if (a.localName == localName)\r\n            return a.value;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport class XmlParser {\r\n    elements = elements;\r\n\r\n    element(elem: Element, localName: string): Element {\r\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\r\n            let c = elem.childNodes.item(i);\r\n\r\n            if (c.nodeType == 1 && (c as Element).localName == localName)\r\n                return c as Element;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    \r\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\r\n        var el = this.element(elem, localName);\r\n        return el ? this.attr(el, attrLocalName) : undefined;\r\n    }\r\n\r\n    attr = attr;\r\n\r\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseInt(val) : defaultValue;\r\n    }\r\n\r\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\r\n        var val = this.attr(node, attrName);\r\n        return val ? parseFloat(val) : defaultValue;\r\n    }\r\n\r\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\r\n        return convertBoolean(this.attr(node, attrName), defaultValue);\r\n    }\r\n\r\n    percentageAttr(node: Element, attrName: string): number {\r\n        return convertPercentage(this.attr(node, attrName));\r\n    }\r\n\r\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\r\n        return convertLength(this.attr(node, attrName), usage);\r\n    }\r\n}\r\n\r\nconst globalXmlParser = new XmlParser();\r\n\r\nexport default globalXmlParser;","const schemaSymbol = Symbol(\"open-xml-schema\");\r\n\r\nexport type ValueConverter = (val: string) => any;\r\n\r\nexport type ElementConverter = (val: Element) => any;\r\n\r\nexport function element(name: string) {\r\n    return function(target: any) {\r\n        var schema = getPrototypeXmlSchema(target.prototype);\r\n        schema.elemName = name;\r\n    }\r\n}\r\n\r\nexport function children(...elements: any[]) {\r\n    return function(target) {\r\n        var schema = getPrototypeXmlSchema(target.prototype);\r\n        schema.children = {};\r\n        for(let c of elements) {\r\n            let cs = getPrototypeXmlSchema(c.prototype);\r\n            schema.children[cs.elemName] = { proto: c.prototype, schema: cs };\r\n        }\r\n    }\r\n}\r\n\r\nexport function fromText(convert: ValueConverter = null) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.text = { prop, convert };\r\n    }\r\n}\r\n\r\nexport function fromAttribute(attrName: string, convert: ValueConverter = null) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.attrs[attrName] = { prop, convert };\r\n    }\r\n}\r\n\r\nexport function fromElement(elemName: string, convert: ElementConverter) {\r\n    return function (target: any, prop: string) {\r\n        var schema = getPrototypeXmlSchema(target);\r\n        schema.elements[elemName] = { prop, convert };\r\n    }   \r\n}\r\n\r\nexport function buildXmlSchema(schemaObj: any): OpenXmlSchema {\r\n    var schema: OpenXmlSchema = {\r\n        text: null,\r\n        attrs: {},\r\n        elements: {},\r\n        elemName: null,\r\n        children: null\r\n    };\r\n\r\n    for(let p in schemaObj) {\r\n        let v = schemaObj[p];\r\n\r\n        if(p == \"$elem\") {\r\n            schema.elemName = v;\r\n        }\r\n        else if(v.$attr) {\r\n            schema.attrs[v.$attr] = { prop: p, convert: null };\r\n        }\r\n    }\r\n\r\n    return schema;\r\n}\r\n\r\nexport function deserializeElement<T = any>(n: Element, output: T, ops: DeserializeOptions): T {\r\n    var proto = Object.getPrototypeOf(output);\r\n    var schema = proto[schemaSymbol];\r\n\r\n    if (ops?.keepOrigin) {\r\n        (output as any).$$xmlElement = n;\r\n    }  \r\n\r\n    if (schema == null)\r\n        return output;\r\n\r\n    deserializeSchema(n, output, schema);\r\n\r\n    for (let i = 0, l = n.children.length; i < l; i ++) {\r\n        const elem = n.children.item(i);\r\n        const child = schema.children[elem.localName];\r\n\r\n        if (child) {\r\n            const obj = child.proto.constructor ? new child.proto.constructor() : Object.create(child.proto);\r\n            deserializeElement(elem, obj, ops);\r\n            (output as any).children.push(obj);\r\n        }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport function deserializeSchema(n: Element, output: any, schema: OpenXmlSchema) {\r\n    if (schema.text) {\r\n        let prop = schema.text;\r\n        output[prop.prop] = prop.convert ? prop.convert(n.textContent) : n.textContent; \r\n    }\r\n\r\n    for (let i = 0, l = n.attributes.length; i < l; i++) {\r\n        const attr = n.attributes.item(i);\r\n        const prop = schema.attrs[attr.localName];\r\n\r\n        if(prop == null)\r\n            continue;\r\n\r\n        output[prop.prop] = prop.convert ? prop.convert(attr.value) : attr.value; \r\n    }\r\n\r\n    for (let i = 0, l = n.childNodes.length; i < l; i ++) {\r\n        const elem = n.childNodes.item(i) as Element;\r\n        const prop = elem.nodeType === Node.ELEMENT_NODE ? schema.elements[elem.localName] : null;\r\n\r\n        if (prop == null)\r\n            continue;\r\n\r\n        output[prop.prop] = prop.convert(elem); \r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nexport interface DeserializeOptions {\r\n    keepOrigin: boolean\r\n}\r\n\r\nexport interface OpenXmlSchema {\r\n    elemName: string;\r\n    text: OpenXmlSchemaProperty;\r\n    attrs: Record<string, OpenXmlSchemaProperty>;\r\n    elements: Record<string, any>;\r\n    children: Record<string, any>;\r\n}\r\n\r\nexport interface OpenXmlSchemaProperty {\r\n    prop: string;\r\n    convert: ValueConverter;\r\n}\r\n\r\nfunction getPrototypeXmlSchema(proto: any): OpenXmlSchema {\r\n    return proto[schemaSymbol] || (proto[schemaSymbol] = {\r\n        text: null,\r\n        attrs: {},\r\n        children: {},\r\n        elements: {}\r\n    });\r\n}","import { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport interface DocumentDefaults {\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport function parseDocumentDefaults(elem: Element, xml: XmlParser) {\r\n    let result = <DocumentDefaults>{};\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch(e.localName) {\r\n            case \"pPrDefault\": \r\n                let pPrElem = xml.element(e, 'pPr');\r\n                \r\n                if (pPrElem)\r\n                    result.paragraphProps = parseParagraphProperties(pPrElem, xml);\r\n                break;\r\n\r\n            case \"rPrDefault\":\r\n                let rPrElem = xml.element(e, 'rPr');\r\n                \r\n                if (rPrElem)\r\n                    result.runProps = parseRunProperties(rPrElem, xml);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { convertBoolean } from \"../document/common\";\r\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\r\nimport { parseRunProperties, RunProperties } from \"../document/run\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { deserializeElement, element, fromAttribute } from \"../parser/xml-serialize\";\r\n\r\nexport type StyleType = 'character' | 'numbering' | 'paragraph' | 'table';\r\n\r\n@element(\"style\")\r\nexport class WmlStyle {\r\n    @fromAttribute(\"styleId\")\r\n    id: string;\r\n    @fromAttribute(\"type\")\r\n    type: StyleType;\r\n    @fromAttribute(\"customStyle\", convertBoolean)\r\n    customStyle: boolean\r\n    @fromAttribute(\"default\", convertBoolean)\r\n    default: boolean;\r\n\r\n    name: string;\r\n    basedOn: string;\r\n    aliases: string[];\r\n    link: string;\r\n\r\n    next: string;\r\n    locked: boolean;\r\n    autoRedefine: boolean;\r\n    hidden: boolean;\r\n    semiHidden: boolean;\r\n    uiPriority: number;\r\n\r\n    paragraphProps: ParagraphProperties;\r\n    runProps: RunProperties;\r\n}\r\n\r\nexport function parseStyle(elem: Element, xml: XmlParser): WmlStyle {\r\n    let result = deserializeElement(elem, new WmlStyle(), null);\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"pPr\":\r\n                result.paragraphProps = parseParagraphProperties(e, xml);\r\n                break;\r\n\r\n            case \"rPr\":\r\n                result.runProps = parseRunProperties(e, xml);\r\n                break;\r\n    \r\n            case \"name\":\r\n                result.name = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"basedOn\":\r\n                result.basedOn = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"aliases\":\r\n                result.aliases = xml.attr(e, 'val').split(',');\r\n                break;\r\n\r\n            case \"link\":\r\n                result.link = xml.attr(e, 'val');\r\n                break;\r\n\r\n            case \"next\":\r\n                result.next = xml.attr(e, 'val');\r\n                break;\r\n        \r\n            case \"autoRedefine\":\r\n                result.autoRedefine = true;\r\n                break;\r\n\r\n            case \"hidden\":\r\n                result.hidden = true;\r\n                break;\r\n\r\n            case \"semiHidden\":\r\n                result.semiHidden = true;\r\n                break;\r\n    \r\n            case \"locked\":\r\n                result.locked = true;\r\n                break;\r\n\r\n            case \"uiPriority\":\r\n                result.uiPriority = xml.intAttr(e, 'val');;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DocumentParser } from \"../document-parser\";\r\nimport { IDomStyle } from \"../document/style\";\r\nimport { XmlParser } from \"../parser/xml-parser\";\r\nimport { keyBy } from \"../utils\";\r\nimport { DocumentDefaults, parseDocumentDefaults } from \"./document-defaults\";\r\nimport { parseStyle, WmlStyle, StyleType } from \"./style\";\r\n\r\nexport class StylesPart extends Part implements StylesPartProperties {\r\n    defaults: DocumentDefaults;\r\n    styles: WmlStyle[];\r\n    \r\n    domStyles: IDomStyle[];\r\n\r\n    private _documentParser: DocumentParser;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\r\n        super(pkg, path);\r\n        this._documentParser = parser;\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        Object.assign(this, parseStylesPart(root, this._package.xmlParser));\r\n        this.domStyles = this._documentParser.parseStylesFile(root);     \r\n    }\r\n}\r\n\r\nexport interface StylesPartProperties {\r\n    defaults: DocumentDefaults;\r\n    styles: WmlStyle[];\r\n}\r\n\r\nexport function parseStylesPart(elem: Element, xml: XmlParser): StylesPartProperties {\r\n    let result = {\r\n        styles: []\r\n    } as StylesPartProperties;\r\n\r\n    for (let e of xml.elements(elem)) {\r\n        switch (e.localName) {\r\n            case \"docDefaults\":\r\n                result.defaults = parseDocumentDefaults(e, xml);\r\n                break;\r\n\r\n            case \"style\":\r\n                result.styles.push(parseStyle(e, xml));\r\n                break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\r\nimport { Part } from \"../common/part\";\r\nimport { DmlTheme, parseTheme } from \"./theme\";\r\n\r\nexport class ThemePart extends Part {\r\n    theme: DmlTheme;\r\n\r\n    constructor(pkg: OpenXmlPackage, path: string) {\r\n        super(pkg, path);\r\n    }\r\n\r\n    parseXml(root: Element) {\r\n        this.theme = parseTheme(root, this._package.xmlParser);\r\n    }\r\n}","import { XmlParser } from \"../parser/xml-parser\";\r\n\r\nexport class DmlTheme {\r\n    colorScheme: DmlColorScheme;\r\n    fontScheme: DmlFontScheme;\r\n}\r\n\r\nexport interface DmlColorScheme {\r\n    name: string;\r\n    colors: Record<string, string>;\r\n}\r\n\r\nexport interface DmlFontScheme {\r\n    name: string;\r\n    majorFont: DmlFormInfo,\r\n    minorFont: DmlFormInfo\r\n}\r\n\r\nexport interface DmlFormInfo {\r\n    latinTypeface: string;\r\n    eaTypeface: string;\r\n    csTypeface: string;\r\n}\r\n\r\nexport function parseTheme(elem: Element, xml: XmlParser) {\r\n    var result = new DmlTheme();\r\n    var themeElements = xml.element(elem, \"themeElements\");\r\n\r\n    for (let el of xml.elements(themeElements)) {\r\n        switch(el.localName) {\r\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\r\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlColorScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n        colors: {}\r\n    };\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        var srgbClr = xml.element(el, \"srgbClr\");\r\n        var sysClr = xml.element(el, \"sysClr\");\r\n\r\n        if (srgbClr) {\r\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\r\n        }\r\n        else if (sysClr) {\r\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\r\n    var result: DmlFontScheme = { \r\n        name: xml.attr(elem, \"name\"),\r\n    } as DmlFontScheme;\r\n\r\n    for (let el of xml.elements(elem)) {\r\n        switch (el.localName) {\r\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\r\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\r\n    return {\r\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\r\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\r\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\r\n    };\r\n}","import { DocxElement } from \"./document/dom\";\r\n\r\nexport function addElementClass(element: DocxElement, className: string): string {\r\n    return element.className = appendClass(element.className, className);\r\n}\r\n\r\nexport function appendClass(classList: string, className: string): string {\r\n    return (!classList) ? className : `${classList} ${className}`\r\n}\r\n\r\nexport function splitPath(path: string): [string, string] {\r\n    let si = path.lastIndexOf('/') + 1;\r\n    let folder = si == 0 ? \"\" : path.substring(0, si);\r\n    let fileName = si == 0 ? path : path.substring(si);\r\n\r\n    return [folder, fileName];\r\n}\r\n\r\nexport function resolvePath(path: string, base: string): string {\r\n    try {\r\n        const prefix = \"file://docx/\";\r\n        const url = new URL(path, prefix + base).toString();\r\n        return url.substr(prefix.length);\r\n    } catch {\r\n        return `${base}${path}`;\r\n    }\r\n}\r\n\r\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\r\n    return array.reduce((a, x) => {\r\n        a[by(x)] = x;\r\n        return a;\r\n    }, {});\r\n}\r\n\r\nexport function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target, ...sources) {\r\n    if (!sources.length) \r\n        return target;\r\n    \r\n    const source = sources.shift();\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        for (const key in source) {\r\n            if (isObject(source[key])) {\r\n                const val = target[key] ?? (target[key] = {});\r\n                mergeDeep(val, source[key]);\r\n            } else {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return mergeDeep(target, ...sources);\r\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart } from \"./footer/footer-part\";\r\nimport { HeaderPart } from \"./header/header-part\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { FootnotesPart } from \"./footnotes/footnotes-part\";\r\n\r\nconst topLevelRels = [\r\n    { type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n    { type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n    { type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n];\r\n\r\nexport class WordDocument {\r\n    private _package: OpenXmlPackage;\r\n    private _parser: DocumentParser;\r\n\r\n    rels: Relationship[];\r\n    parts: Part[] = [];\r\n    partsMap: Record<string, Part> = {};\r\n\r\n    documentPart: DocumentPart;\r\n    fontTablePart: FontTablePart;\r\n    numberingPart: NumberingPart;\r\n    stylesPart: StylesPart;\r\n    footnotesPart: FootnotesPart;\r\n    corePropsPart: CorePropsPart;\r\n    extendedPropsPart: ExtendedPropsPart;\r\n\r\n    static load(blob, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n        var d = new WordDocument();\r\n\r\n        d._parser = parser;\r\n\r\n        return OpenXmlPackage.load(blob, options)\r\n            .then(pkg => {\r\n                d._package = pkg;\r\n\r\n                return d._package.loadRelationships();\r\n            }).then(rels => {\r\n                d.rels = rels;\r\n\r\n                const tasks = topLevelRels.map(rel => {\r\n                    const r = rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n                    return d.loadRelationshipPart(r.target, r.type);\r\n                });\r\n\r\n                return Promise.all(tasks);\r\n            }).then(() => d);\r\n    }\r\n\r\n    save(type = \"blob\"): Promise<any> {\r\n        return this._package.save(type);\r\n    }\r\n\r\n    private loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n        if (this.partsMap[path])\r\n            return Promise.resolve(this.partsMap[path]);\r\n\r\n        if (!this._package.get(path))\r\n            return Promise.resolve(null);\r\n\r\n        let part: Part = null;\r\n\r\n        switch (type) {\r\n            case RelationshipTypes.OfficeDocument:\r\n                this.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.FontTable:\r\n                this.fontTablePart = part = new FontTablePart(this._package, path);\r\n                break;\r\n\r\n            case RelationshipTypes.Numbering:\r\n                this.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Styles:\r\n                this.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Theme:\r\n                part = new ThemePart(this._package, path);\r\n                break;\r\n    \r\n            case RelationshipTypes.Footnotes:\r\n                this.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n                break;\r\n        \r\n            case RelationshipTypes.Footer:\r\n                part = new FooterPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.Header:\r\n                part = new HeaderPart(this._package, path, this._parser);\r\n                break;\r\n\r\n            case RelationshipTypes.CoreProperties:\r\n                this.corePropsPart = part = new CorePropsPart(this._package, path);\r\n                break;\r\n    \r\n            case RelationshipTypes.ExtendedProperties:\r\n                this.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n                break;\r\n        }\r\n\r\n        if (part == null)\r\n            return Promise.resolve(null);\r\n\r\n        this.partsMap[path] = part;\r\n        this.parts.push(part);\r\n\r\n        return part.load().then(() => {\r\n            if (part.rels == null || part.rels.length == 0)\r\n                return part;\r\n\r\n            const [folder] = splitPath(part.path); \r\n            const rels = part.rels.map(rel => {\r\n                return this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)\r\n            });\r\n\r\n            return Promise.all(rels).then(() => part);\r\n        });\r\n    }\r\n\r\n    loadDocumentImage(id: string): PromiseLike<string> {\r\n        return this.loadResource(this.documentPart, id, \"blob\")\r\n            .then(x => x ? URL.createObjectURL(x) : null);\r\n    }\r\n\r\n    loadNumberingImage(id: string): PromiseLike<string> {\r\n        return this.loadResource(this.numberingPart, id, \"blob\")\r\n            .then(x => x ? URL.createObjectURL(x) : null);\r\n    }\r\n\r\n    loadFont(id: string, key: string): PromiseLike<string> {\r\n        return this.loadResource(this.fontTablePart, id, \"uint8array\")\r\n            .then(x => x ? URL.createObjectURL(new Blob([deobfuscate(x, key)])) : x);\r\n    }\r\n\r\n    findPartByRelId(id: string, basePart: Part = null) {\r\n        var rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n        const folder = basePart ? splitPath(basePart.path)[0] : ''; \r\n        return rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n    }\r\n\r\n    getPathById(part: Part, id: string): string {\r\n        const rel = part.rels.find(x => x.id == id);\r\n        const [folder] = splitPath(part.path); \r\n        return rel ? resolvePath(rel.target, folder) : null;\r\n    }\r\n\r\n    private loadResource(part: Part, id: string, outputType: OutputType) {\r\n        const path = this.getPathById(part, id);\r\n        return path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n    }\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n    const len = 16;\r\n    const trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n    const numbers = new Array(len);\r\n\r\n    for (let i = 0; i < len; i++)\r\n        numbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n    for (let i = 0; i < 32; i++)\r\n        data[i] = data[i] ^ numbers[i % len]\r\n\r\n    return data;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6290__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__6290__","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","load","input","JSZip","loadAsync","then","zip","OpenXmlPackage","save","type","generateAsync","async","Promise","resolve","loadRelationships","relsPath","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","all","rels","text","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","Part","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","highlight","SizeType","ignoreWidth","debug","deserialize","elem","output","deserializeElement","parseDocumentFile","xbody","element","result","WmlDocument","body","WmlBody","parseBodyElements","parseFooter","WmlFooter","parseHeader","WmlHeader","parseFootnotes","el","footnote","WmlFootnote","push","localName","children","parseParagraph","parseTable","parseStylesFile","xstyles","foreach","n","parseStyle","parseDefaultStyles","node","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","paragraphProps","parseParagraphProperties","stringAttr","isDefault","boolAttr","linked","className","next","aliases","split","runProps","parseRunProperties","parseTableStyle","s","console","warn","selector","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","forEach","x","parseNumberingPicBullet","numId","abstractNumId","elementStringAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","pStyle","rStyle","suff","bullet","filter","levelText","format","WmlParagraph","parseRun","parseHyperlink","paragraph","cssStyle","parseParagraphProperty","props","utils","addElementClass","classNameOfCnfStyle","parseFrame","parent","WmlHyperlink","WmlRun","d","parseDrawing","run","Object","assign","parseDrawingWrapper","WmlDrawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","sizeAttr","Emu","pos","alignNode","offsetNode","textContent","sizeValue","g","parseGraphic","graphicData","parsePicture","DmlPicture","blipFill","blip","resourceId","spPr","xfrm","WmlTable","parseTableRow","parseTableProperties","table","cellStyle","classNameOftblLook","parseTablePosition","topFromText","bottomFromText","rightFromText","leftFromText","addSize","WmlTableRow","parseTableCell","parseTableRowProperties","row","WmlTableCell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","valueOfJc","colorAttr","FontSize","valueOfSize","parseTrHeight","valueOfStrike","valueOfBold","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","valueOfTextAlignment","parseSpacing","val","col","ascii","firstLine","hanging","left","start","right","end","before","after","line","lineRule","toFixed","DocumentParser","cb","i","childNodes","length","nodeType","nodeName","attrName","defValue","autoColor","v","parseInt","Dxa","convertSize","test","intVal","Border","Percent","replace","trim","a","b","parseCoreProps","CorePropsPart","title","description","subject","creator","keywords","language","lastModifiedBy","revision","parseExtendedProps","ExtendedPropsPart","safeParseToInt","value","template","pages","words","characters","application","lines","paragraphs","company","appVersion","fromAttribute","WmlBookmarkStart","DocxElement","WmlBookmarkEnd","parseBorder","size","lengthAttr","LengthUsage","Point","frame","shadow","top","bottom","WmlBreak","WmlLastRenderedPageBreak","ns","wordml","drawingml","picture","mul","unit","LineHeight","usage","endsWith","parseFloat","defaultValue","pkg","parser","_documentParser","documentElement","DocumentPart","fromElement","parseSectionProperties","DocxContainer","WmlFieldChar","convertBoolean","WmlFieldSimple","parse","anchor","namespaceURI","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","indentation","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","styleId","position","leader","WmlText","WmlSymbol","WmlTab","WmlFootnoteReference","WmlInstructionText","parseRunProperty","styleName","border","fonts","parseRunFonts","shading","parseShading","spacing","stretch","percentageAttr","fontSize","bold","strike","doubleStrike","italics","underline","caps","smallCaps","imprint","outline","verticalAlignment","hAscii","cs","eastAsia","foreground","background","SectionType","parseColumns","numberOfColumns","space","separator","equalWidth","columns","width","parseFooterHeaderReference","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","parseTableColumns","alignment","caption","tableLook","parseTableLook","firstColumn","firstRow","lastColumn","lastRow","noHBand","noVBand","fromText","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","data","userOptions","ops","WordDocument","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","parseFonts","FontTablePart","family","altName","fontKey","refId","footerElement","FooterPart","footnotes","FootnotesPart","headerElement","HeaderPart","htmlDocument","footnoteMap","domStyleMap","removeAllElements","appendComment","appendChild","renderDefaultStyle","stylesPart","processDomStyles","domStyles","styleMap","processStyles","renderStyles","numberingPart","renderNumbering","domNumberings","footnotesPart","keyBy","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","wrapper","renderWrapper","appentElements","fontsPart","f","loadFont","fontData","cssTest","createStyleElement","processClassName","baseStyle","mergeDeep","domStylesMap","baseValues","styleValues","copyStyleProperties","cssName","escapeClassName","processElement","processTable","attrs","getOwnPropertyNames","key","hasOwnProperty","renderContainer","tagName","createElement","renderElements","createSection","paddingLeft","renderLength","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","splitBySection","currentFootnoteIds","sectProps","sectionElement","headerPart","findHeaderFooter","footerPart","contentElement","refs","page","ref","find","findPartByRelId","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","r","bind","breakRun","splitRun","newParagraph","slice","runChildren","newRun","currentSectProps","l","renderColor","numberings","listStyleType","styleText","rootCounters","numberingClass","num","toLowerCase","styleToString","loadNumberingImage","counter","numberingCounter","levelTextToContent","numFormatToCssValue","join","stylesMap","defautStyles","subStyles","linkedStyle","concat","subStyle","renderParagraphProperties","footnoteIds","into","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderBreak","renderText","renderSymbol","renderTab","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderHeader","renderFooter","renderFootnoteReference","renderFootnote","renderChildren","elems","$$docxElement","renderClass","renderStyleValues","appendClass","styleClassName","renderLineSpacing","renderTextAligment","valuesMap","renderRunProperties","renderShading","renderBorder","renderRunFonts","renderUnderline","renderRunVerticalAlignment","href","display","textIndent","loadDocumentImage","createTextNode","fontFamily","font","innerHTML","char","tabSpan","setTimeout","findParent","sort","updateTabStop","renderTableColumns","colElem","colSpan","ouput","lvl","selectors","cssText","numformat","substring","container","styleElement","comment","createComment","pixelToPoint","closest","tbb","getBoundingClientRect","pbb","tab","t","borderBottom","parseNumberingPart","NumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","item","Node","ELEMENT_NODE","attributes","xmlString","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","elementAttr","attrLocalName","undefined","floatAttr","convertPercentage","convertLength","globalXmlParser","schemaSymbol","Symbol","deserializeSchema","schema","prop","convert","getPrototypeXmlSchema","proto","prototype","elemName","schemaObj","$attr","getPrototypeOf","$$xmlElement","child","obj","constructor","create","pPrElem","rPrElem","WmlStyle","link","autoRedefine","hidden","semiHidden","locked","uiPriority","parseStylesPart","defaults","parseDocumentDefaults","StylesPart","theme","parseTheme","ThemePart","parseColorScheme","colors","srgbClr","sysClr","parseFontScheme","majorFont","parseFontInfo","minorFont","latinTypeface","eaTypeface","csTypeface","DmlTheme","themeElements","colorScheme","fontScheme","classList","isObject","Array","isArray","si","lastIndexOf","base","prefix","URL","toString","array","by","reduce","sources","source","shift","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","parts","partsMap","blob","_parser","tasks","rel","loadRelationshipPart","part","FontTable","Numbering","Styles","Theme","Footnotes","Footer","Header","corePropsPart","extendedPropsPart","folder","resolvePath","loadResource","createObjectURL","Blob","deobfuscate","basePart","getPathById","outputType","guidKey","trimmed","numbers","extendStatics","setPrototypeOf","__proto__","call","__extends","TypeError","String","__","__assign","arguments","apply","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","__generator","y","_","label","sent","trys","verb","iterator","op","pop","__createBinding","o","m","k","k2","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","j","jl","__spreadArray","to","from","pack","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__esModule","__importDefault","default","__classPrivateFieldGet","receiver","state","kind","has","__classPrivateFieldSet","set","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","toStringTag"],"sourceRoot":""}